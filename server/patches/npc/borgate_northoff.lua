local consequence_item = require("npc.base.consequence.item")
local condition_item = require("npc.base.condition.item")
local consequence_quest = require("npc.base.consequence.quest")
local consequence_trade = require("npc.base.consequence.trade")
local condition_language = require("npc.base.condition.language")
local consequence_deleteitem = require("npc.base.consequence.deleteitem")
local basic = require("npc.base.basic")
local trade = require("npc.base.trade")
local talk = require("npc.base.talk")
local condition_quest = require("npc.base.condition.quest")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(0)
local talkingNPC = talk(mainNPC)
local tradingNPC = trade(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is Borgate Northoff the innkeeper of The Hemp Necktie Inn. Keywords: Gods, Bragon, Adron, trade, mug."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist Borgate Northoff der Wirt vom Gasthof zur Hanfschlinge. Schlüsselwörter: Götter, Bragon, Adron, Handel, Becher, Krug."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Was willste?")
talkEntry:addConsequence(consequence_trade(tradingNPC))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("Whatcha want?")
talkEntry:addConsequence(consequence_trade(tradingNPC))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(652, "=", 1))
talkEntry:addCondition(condition_item(1908, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_quest(652, "=", 2))
talkEntry:addConsequence(consequence_deleteitem(1908, 1, nil))
talkEntry:addConsequence(consequence_item(1909, 1, 777, nil))
talkEntry:addConsequence(consequence_inform("[Quest 'Find Borgate Northoff' end]"))
talkEntry:addResponse("Aahr! Wulfgorda's mug! I wonder if she will ever bring her mug by herself. Anyway, one free beer for you!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(652, "=", 1))
talkEntry:addCondition(condition_item(1908, "all", ">", 0, nil))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_quest(652, "=", 2))
talkEntry:addConsequence(consequence_deleteitem(1908, 1, nil))
talkEntry:addConsequence(consequence_item(1909, 1, 777, nil))
talkEntry:addConsequence(consequence_inform("[Quest 'Finde Borgate Northoff' Ende]"))
talkEntry:addResponse("Aahr! Wulfgorda Krug! Ich frage mich, ob sie jemals ihren Krug selber zurück bringen wird. Egal, hier ein Freibier für dich!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("Aahr! Be greeted in 'The Hemp Necktie Inn'. What do you want to drink?")
talkEntry:addResponse("Hello. What can I get you?")
talkEntry:addResponse("G'day, wanna beer?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Willkommen im Gasthof zur Hanfschlinge, willst du etwas zu trinken?")
talkEntry:addResponse("Guten Tag. Was soll ich dir machen?")
talkEntry:addResponse("Tach, was darf's sein?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Aahr! Be greeted in 'The Hemp Necktie Inn'. What do you want to drink?")
talkEntry:addResponse("Hello. What can I get you?")
talkEntry:addResponse("G'day, wanna beer?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Willkommen im Gasthof zur Hanfschlinge, willst du etwas zu trinken?")
talkEntry:addResponse("Guten Tag. Was soll ich dir machen?")
talkEntry:addResponse("Tach, was darf's sein?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("Have a nice day.")
talkEntry:addResponse("Aye. Come back whenever you are thirsty.")
talkEntry:addResponse("Good day!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Schönen Tag noch.")
talkEntry:addResponse("Bis bald.")
talkEntry:addResponse("Aye. Komm wieder, wann immer du durstig bist.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Have a nice day.")
talkEntry:addResponse("Aye. Come back whenever you are thirsty.")
talkEntry:addResponse("Good day!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Schönen Tag noch.")
talkEntry:addResponse("Bis bald.")
talkEntry:addResponse("Aye. Komm wieder, wann immer du durstig bist.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("Good - 'nd you?")
talkEntry:addResponse("It's alright. Like always.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addTrigger("Wie Befinden")
talkEntry:addResponse("Gut - 'nd Euch?")
talkEntry:addResponse("Alles gut - wie immer.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("Great. I am Borgate Northoff, the barkeeper. Do you want something to drink?")
talkEntry:addResponse("I'm Borgate Northoff. Need a drink?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("Ich bin Borgate Northoff und das ist mein Tresen. Ich schenke Bier aus. Willst du eines?")
talkEntry:addResponse("Ich bin Borgate Northoff. Willst du was trinken?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Nope, I haven't got a job for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Nee, ich habe keine Arbeit für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Nope, I haven't got a job for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Nee, ich habe keine Arbeit für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addResponse("I'm a bartender. Tendering beer. - Mostly")
talkEntry:addResponse("What do you think I have to do here? What a stupid question. Aaarh! Drink or eat something or leave!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addResponse("Ich bin Schankwirt. Und ausschenken tue ich Bier. - Meistens...")
talkEntry:addResponse("Was denkste was ich hier mache? So ne dumme Frage. Aaarh! Bestell was zu trinken oder verschwinde!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("I'm a bartender. Tendering beer. - Mostly")
talkEntry:addResponse("What do you think I have to do here? What a stupid question. Aaarh! Drink or eat something or leave!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Ich bin Schankwirt. Und ausschenken tue ich Bier. - Meistens...")
talkEntry:addResponse("Was denkste was ich hier mache? So ne dumme Frage. Aaarh! Bestell was zu trinken oder verschwinde!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("A dwarf shouldn't live in the past. - I always look forward... but also, back, to the times with the Fluffy Sheep Tavern.")
talkEntry:addResponse("Gobaith was nice, but now, since I'm here I honestly don't know why I didn't come sooner.")
talkEntry:addResponse("Back on Gobaith everyone was used to say: 'Whatever happens, Borgate will do his own thing.' - and that's exactly what happened when everybody left the isle.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Wenn du mich fragst finde ich, dass ein Zwerg nicht in der Vergangenheit leben sollte. - Ich jedenfalls habe immer nach vorn geblickt. Auch schon damals als ich noch im Fluffy Sheep gearbeitet habe.")
talkEntry:addResponse("Auf Gobaith war's schön. Aber jetzt wo ich hier bin, weiß ich nicht warum ich so lange dort geblieben bin.")
talkEntry:addResponse("Auf Gobaith hieß es immer - 'Egal was passiert, Borgate macht sein Ding.' - und das habe ich dann auch gemacht als alle von der Insel weg sind. Aye.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("favour")
talkEntry:addTrigger("favor")
talkEntry:addResponse("The best drink ever? Oh yes, there is an apple schnapps I've got long time ago. A Halfling from Greenbriar made it. I have one last bottle but I'll never sell it. Every year at end of Mas I treat myself to a single drop.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Lieblings")
talkEntry:addResponse("Mein Lieblingsgetränk? Jaaa, da habe ich einen Apfelschnaps, den ich vor langer Zeit von einem Halbling aus Greenbriar bekam. Nur noch eine Flasche ist mir geblieben und ich genehmige mir jedes Jahr einen Tropfen, wenn Mas vorbei ist. Aber verkaufen kann ich ihn dir nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("I am")
talkEntry:addTrigger("my name")
talkEntry:addResponse("Aha..?")
talkEntry:addResponse("Arr!")
talkEntry:addResponse("Aha...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ich bin")
talkEntry:addTrigger("mein Name")
talkEntry:addResponse("Aha..?")
talkEntry:addResponse("Arr!")
talkEntry:addResponse("Aha...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Fluffy")
talkEntry:addTrigger("Sheep")
talkEntry:addResponse("The Fluffy Sheep was the name of an Inn. I worked there a long time ago for the king of Silverbrand.")
talkEntry:addResponse("The Fluffy Sheep Tavern was named after a sheep named Fluffy, and one day, they just ate it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Sil[vb]erbran[dt]")
talkEntry:addResponse("Silverbrand had many kings, but I think King Tiladin was the most important")
talkEntry:addResponse("Silverbrand was the dwarven town under the throne of Irmorom, in the middle of the coppermountains. May we keep her memory in honour.")
talkEntry:addResponse("Silverbrand took each dwarf as citizen those days. Even at night the sound of smithing hammers was hearable they say.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gowan")
talkEntry:addTrigger("Sam")
talkEntry:addTrigger("brute")
talkEntry:addTrigger("Booze")
talkEntry:addTrigger("hook")
talkEntry:addResponse("When I came here, they didn't ask me a single question. So I did.")
talkEntry:addResponse("Actually I know everything... but I don't tell.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("half-hung")
talkEntry:addTrigger("bryan")
talkEntry:addResponse("Bryan is the owner of the Hemp Necktie Inn so it's his law we live with. You'd do better asking him about the law, eh?")
talkEntry:addResponse("Actually I know everything... but I don't tell.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Fluffy")
talkEntry:addTrigger("Sheep")
talkEntry:addTrigger("schaf")
talkEntry:addTrigger("flausch")
talkEntry:addTrigger("flauschige")
talkEntry:addResponse("Das Fluffy Sheep war eine Taverne. Dort habe ich früher, für den König Silberbrands gearbeitet. Aber das ist schon lange her...")
talkEntry:addResponse("Als ich noch ein Zwerg im besten Alter war, arbeitete ich in der Fluffy Sheep Taverne. Aye?")
talkEntry:addResponse("Die Fluffy Sheep Taverne hat man nach einem Schaf benannt das sie Fluffy nannten. Und irgendwann - dann haben sie's einfach gegessen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Sil[vb]erbran[dt]")
talkEntry:addResponse("In Silberbrand gabs eine Menge Könige, aber ich will meinen, König Tialdin von Silberbrand ist der Bedeutendste.")
talkEntry:addResponse("Silberbrand - Die Zwergenstadt unter dem Thron Irmoroms, im Herzen des Kupfergebierges. Mögen wir ihr Andenken in Ehren halten.")
talkEntry:addResponse("Silberbrand nahm damals jeden Zwerg auf. Und sogar des Nachts soll der Hammerklang der Schmiede hörbar gewesen sein. Eine wirklich mächtige Stadt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gowan")
talkEntry:addTrigger("Sam")
talkEntry:addTrigger("brute")
talkEntry:addTrigger("Booze")
talkEntry:addTrigger("hook")
talkEntry:addResponse("Als ich hier her kam, stellte keiner Fragen, und ich fragte auch nichts. Der Eine oder Andere spricht trozdem manchmal über sich. Aber es ist Half-hung Bryans Gesetz. 'Es werden keine Fragen gestellt.'")
talkEntry:addResponse("Eigentlich weiß ich alles, aber ich erzähl nichts davon...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("half-hung")
talkEntry:addTrigger("bryan")
talkEntry:addResponse("Bryan ist der Besitzer vom Gasthof zur Hanfschlinge. Und hier zählt nur sein Gesetz. Am Besten fragt ihr ihn selbst dannach.")
talkEntry:addResponse("Eigentlich weiß ich alles, aber ich erzähl nichts davon...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("mug")
talkEntry:addTrigger("collection")
talkEntry:addTrigger("decorated")
talkEntry:addResponse("Ah, da mugs ya say? A dwarf used ta make dem dere mugs long ago. Nobody is sure where he is now.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("becher")
talkEntry:addTrigger("krug")
talkEntry:addTrigger("Verzierter")
talkEntry:addTrigger("sammlung")
talkEntry:addResponse("Ah, diese Humpen sagst du, aye? Ein Zwerg stellte die einst her. Lang ist's her. Niemand weiß allerding wo er nun ist.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("archmage")
talkEntry:addResponse("Old Borgate knows some things that would mean you couldn't sleep anymore, but I can hold my tongue... Can you?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Der alte Borgate weis Sachen, da würdest du kein Auge mehr zu tun. Aber ich kann meinen Mund halten. Kannst du das auch? Ich denke nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Old Borgate knows some things that would mean you couldn't sleep anymore, but I can hold my tongue... Can you?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Der alte Borgate weis Sachen, da würdest du kein Auge mehr zu tun. Aber ich kann meinen Mund halten. Kannst du das auch? Ich denke nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Cadomyr, Runewick, even Galmair... they all think themselves too important. At the Hemp Necktie Inn they are all equal and their law is declared as nonsense.")
talkEntry:addResponse("Whether Cadomyr, Runewick, or Galmair... here in the middle of wilderness a dwarf is just a dwarf and everyone has to look after themselves.")
talkEntry:addResponse("Whether Cadomyr, Runewick, or Galmair... Those factions are of little interest to an old dwarf like me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... die nehmen sich alle viel zu wichtig. Hier im Gasthof zu Hanfschlinge behandeln wir alle gleich.")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... hier in der Mitte der Wildniss ist ein Zwerg einfach nur ein Zwerg. Jeder ist sich selbst der Nächste.")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... die bekümmern einen alten Zwerg wie ich einer bin nur noch peripher.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Old Borgate knows some things that would mean you couldn't sleep anymore, but I can hold my tongue... Can you?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Der alte Borgate weis Sachen, da würdest du kein Auge mehr zu tun. Aber ich kann meinen Mund halten. Kannst du das auch? Ich denke nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Cadomyr, Runewick, even Galmair... they all think themselves too important. At the Hemp Necktie Inn they are all equal and their law is declared as nonsense.")
talkEntry:addResponse("Whether Cadomyr, Runewick, or Galmair... here in the middle of wilderness a dwarf is just a dwarf and everyone has to look after themselves.")
talkEntry:addResponse("Whether Cadomyr, Runewick, or Galmair... Those factions are of little interest to an old dwarf like me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... die nehmen sich alle viel zu wichtig. Hier im Gasthof zu Hanfschlinge behandeln wir alle gleich.")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... hier in der Mitte der Wildniss ist ein Zwerg einfach nur ein Zwerg. Jeder ist sich selbst der Nächste.")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... die bekümmern einen alten Zwerg wie ich einer bin nur noch peripher.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Queen")
talkEntry:addResponse("Old Borgate knows some things that would mean you couldn't sleep anymore, but I can hold my tongue... Can you?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Königin")
talkEntry:addResponse("Der alte Borgate weis Sachen, da würdest du kein Auge mehr zu tun. Aber ich kann meinen Mund halten. Kannst du das auch? Ich denke nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Old Borgate knows some things that would mean you couldn't sleep anymore, but I can hold my tongue... Can you?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Der alte Borgate weis Sachen, da würdest du kein Auge mehr zu tun. Aber ich kann meinen Mund halten. Kannst du das auch? Ich denke nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Cadomyr, Runewick, even Galmair... they all think themselves too important. At the Hemp Necktie Inn they are all equal and their law is declared as nonsense.")
talkEntry:addResponse("Whether Cadomyr, Runewick, or Galmair... here in the middle of wilderness a dwarf is just a dwarf and everyone has to look after themselves.")
talkEntry:addResponse("Whether Cadomyr, Runewick, or Galmair... Those factions are of little interest to an old dwarf like me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... die nehmen sich alle viel zu wichtig. Hier im Gasthof zu Hanfschlinge behandeln wir alle gleich.")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... hier in der Mitte der Wildniss ist ein Zwerg einfach nur ein Zwerg. Jeder ist sich selbst der Nächste.")
talkEntry:addResponse("Ob Cadomyr, Galmair oder auch Runewick... die bekümmern einen alten Zwerg wie ich einer bin nur noch peripher.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("albar")
talkEntry:addResponse("During my life people told me many tales. Most of them by drunks, who tend to speak the truth, but are you really interested in the opinion of a faded old dwarf?")
talkEntry:addResponse("When people start talking about their homeland or just start talking anyway, I tend to nod slowly and say 'Aha..?'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("albar")
talkEntry:addResponse("Im Laufe meines Lebens wurde mir viel Erzählt. Das Meißte, von Betrunkenen und die sagen eher die Wahrheit. Aber wollt ihr wirklich die verwaschene Meinung eines alten Zwerges Hören?")
talkEntry:addResponse("Wenn mir die Leute anfangen über ihre Heimat, oder sonst etwas zu erzählen nicke ich eigentlich immer nur uns sage 'Aha..?'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("gynk")
talkEntry:addTrigger("gync")
talkEntry:addResponse("During my life people told me many tales. Most of them by drunks, who tend to speak the truth, but are you really interested in the opinion of a faded old dwarf?")
talkEntry:addResponse("When people start talking about their homeland or just start talking anyway, I tend to nod slowly and say 'Aha..?'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("gync")
talkEntry:addTrigger("gynk")
talkEntry:addResponse("Im Laufe meines Lebens wurde mir viel Erzählt. Das Meißte, von Betrunkenen und die sagen eher die Wahrheit. Aber wollt ihr wirklich die verwaschene Meinung eines alten Zwerges Hören?")
talkEntry:addResponse("Wenn mir die Leute anfangen über ihre Heimat, oder sonst etwas zu erzählen nicke ich eigentlich immer nur uns sage 'Aha..?'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("salkama")
talkEntry:addResponse("During my life people told me many tales. Most of them by drunks, who mostly speak the truth, but are you really interested in the opinion of a faded old dwarf?")
talkEntry:addResponse("When people start talking about their homeland or just start talking anyway, I tend to nod slowly and say 'Aha..?'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("salkama")
talkEntry:addResponse("Im Laufe meines Lebens wurde mir viel Erzählt. Das Meißte, von Betrunkenen und die sagen eher die Wahrheit. Aber wollt ihr wirklich die verwaschene Meinung eines alten Zwerges Hören?")
talkEntry:addResponse("Wenn mir die Leute anfangen über ihre Heimat, oder sonst etwas zu erzählen nicke ich eigentlich immer nur uns sage 'Aha..?'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("I'm a honourable dwarf and Irmorom created my kin ages ago. His will has led and protected my folk since the beginning of time.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Ich bin ein aufrichtiger Zwerg und Irmorom hat einst vor vielen Jahren meine Sippe erschaffen. Sein Wille leitet und schützt mein Volk von Anbeginn her.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Adron")
talkEntry:addResponse("A bartender is able to tell you many things about Adron, for sure! He's the god of wine and festivals. Also halfings say, he has a big wine jug which never goes empty.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Adron")
talkEntry:addResponse("Als Schankwirt, kann ich dir natürlich viel über Adron erzählen. Er ist der Gott des Weines und der Feste. Und man erzählt sich, insbesondere bei den Halblingen, er trägt immerzu einen großen Weinkrug bei sich, der niemals leer wird.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Bragon")
talkEntry:addTrigger("Brágon")
talkEntry:addResponse("Some oddballs amongst the dwarven folk praise Bragon. He's god of fire, strong and prudent and handsome... But all in all dwarves should praise Irmorom - he's our father.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Bragon")
talkEntry:addTrigger("Brágon")
talkEntry:addResponse("Ein paar weniger Querköpfe unter den Zwergen huldigen auch Bragon. Er ist der Gott des Feuers, ist sehr weise, stark, gebieterisch, edel, und stattlich. Aber im Grunde Sollten Zwerge zu Irmorom beten, denn er ist unser Schöpfer.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Irmorom")
talkEntry:addResponse("Irmorom! Father of the dwarven folk! My kin will be bound to you forever, which fills my heart with gladness and pride! For sure he is the most magnificent of all the gods and similar to us dwarves in so many ways!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Irmorom")
talkEntry:addResponse("Irmorom! Der Vater des Zwergenvolkes. Auf ewig wird mein Volk an ihn gebunden sein, und das erfüllt unser Herz mit Freude und Stolz. Er ist wahrlich der Prächtigste und uns Zwergen in so vielfältiger Weise ähnlich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Malachin")
talkEntry:addTrigger("Malachín")
talkEntry:addResponse("Malachín is god of the knights and warriors. Better ask them for better information.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Malachin")
talkEntry:addTrigger("Malachín")
talkEntry:addResponse("Der Gott der Ritter und Kriegerkaste. Fragt die nach ihm.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("I don't know much about Ronagan, only that I'll become enraged when people steal my mugs!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("Über Ronagan weiß ich nicht viel, nur das ich Fuchs-wild werde wenn die Leute die Bierkrüge nicht zurückbringen.")
talkEntry:addResponse("Hm-h... Fragt doch Gowan. Hat ja wohl nicht umsonst einen Haken als Hand.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("what sell")
talkEntry:addTrigger("what buy")
talkEntry:addTrigger("list wares")
talkEntry:addTrigger("price of")
talkEntry:addResponse("It's a damn bar, what do you think I sell? But here, look at the list: drinks and more.")
talkEntry:addResponse("Drinks and more. What do you think? It's a Bar. And now, tell me... What do you want?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("was verkauf")
talkEntry:addTrigger("was kauf")
talkEntry:addTrigger("warenliste")
talkEntry:addTrigger("preis von")
talkEntry:addResponse("Ich verkaufe alles, was das Herz begehrt, aber eigentlich nur Bier. Willst du Eines?")
talkEntry:addResponse("Das hier ist 'ne Kneipe, was glaubst du, was wir hier verkaufen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addResponse("Arr, Where shall I begin? I could tell you lots of what is spoken in this tavern, but if I did that, nobody would come back. No, I am not a traitor to my guests. Sorry!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Ich höre viel und weiss eigentlich fast alles. Ich erzähl' dir aber nichts davon, das geht dich nunmal nichts an.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Borgate")
talkEntry:addTrigger("bar")
talkEntry:addTrigger("Northoff")
talkEntry:addResponse("Indeed, I'm the bartender here. What's your order?")
talkEntry:addResponse("#me nods slowly. 'Aha..?'")
talkEntry:addResponse("#me slowly shakes his head. 'Hmpf.'")
talkEntry:addResponse("#me starts to comb his long beard with his figners. 'Is that true?'")
talkEntry:addResponse("#me wrinkles his big chubby nose. 'Ye-h. I just came to same conclusion.'")
talkEntry:addResponse("#me takes a sip out of his beer mug. '... incredible!'")
talkEntry:addResponse("#me rises a brow. 'Honestly?'")
talkEntry:addResponse("Aye, heard something similar once before. You wouldn't believe it.")
talkEntry:addResponse("Honestly? I'm amazed!")
talkEntry:addResponse("#me crosses his hands behind his back. 'Hm-hm.'")
talkEntry:addResponse("If it's Irmoroms will...")
talkEntry:addResponse("#me picks the hair of his beard with two fingers. 'That sounds kind of curious. Don't you think so?'")
talkEntry:addResponse("#me scratches his chin. 'Interesting, isn't it?'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Borgate")
talkEntry:addTrigger("wirt")
talkEntry:addTrigger("Northoff")
talkEntry:addResponse("Genau, ich bin hier der Wirt. Was willst du trinken?")
talkEntry:addResponse("#me nickt langsam. 'Aha..?'")
talkEntry:addResponse("#me legt den Kopf schief. 'Hmpf.'")
talkEntry:addResponse("#me greift sich mit den Fingern in den langen Bart und zieht sie hindurch. 'Ist das so?'")
talkEntry:addResponse("#me rümpft seine große felischige Nase. 'So etwas dachte ich mir schon.'")
talkEntry:addResponse("#me nimmt einen Schluck von seinem Bierkrug. '... unglaublich!'")
talkEntry:addResponse("Aye, so etwas ähnliches hab ich schonmal gehört. Das würde dich wundern.")
talkEntry:addResponse("Tatsächlich!? Ich bin erstaunt.")
talkEntry:addResponse("#me verschränkt die Hände im Nacken. 'Hm-hm.'")
talkEntry:addResponse("Sodar es Irmoroms Wille ist...")
talkEntry:addResponse("#me zupft mit zwei Fingern an seinem Bart. 'Das ist seltsam. Findest du das nicht auch?'")
talkEntry:addResponse("#me hebt eine Augenbraue. 'Wirklich?'")
talkEntry:addResponse("#me kratzt sich nachdenklich am Kinn. 'Was Ihr nicht sagt..?")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("Arrr...", "Arrr...")
talkingNPC:addCycleText("Arrr!", "Arrr!")
talkingNPC:addCycleText("Arrr...?", "Arrr...?")
talkingNPC:addCycleText("#me trocknet einen Bierkrug ab.", "#me cleans a beer mug.")
talkingNPC:addCycleText("#me sieht sich gelangweilt um.", "#me looks around bored.")
talkingNPC:addCycleText("#me spielt mit einer Kupfermünze.", "#me plays with a copper coin.")
talkingNPC:addCycleText("#me wischt über die Theke.", "#me wipes the counter.")
talkingNPC:addCycleText("#me trinkt ein Bier.", "#me gulps down a beer.")
talkingNPC:addCycleText("#me wischt seine Hände in die Hosen.", "#me cleans his hands by rubbing them against his trousers.")
talkingNPC:addCycleText("#me brummt eine langsame Meldoie.", "#me grumbles a slow melody.")
tradingNPC:addItem(trade.tradeNPCItem(1909,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4460,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4425,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4435,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4418,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4455,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4812,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4465,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4448,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4476,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4572,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4568,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4584,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4600,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2058,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1860,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4344,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4352,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4411,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2186,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2187,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2188,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2189,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4362,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4355,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4354,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4353,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4352,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4363,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1841,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1842,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1843,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1844,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4359,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4345,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4346,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4344,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4347,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4357,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1855,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1860,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1853,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1859,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4361,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1854,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1857,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1856,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1861,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4360,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4412,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4413,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4410,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4408,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4411,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2058,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2057,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2056,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2059,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4358,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4572,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4573,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4574,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4575,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4592,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4593,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4594,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4595,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4577,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4578,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4579,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4580,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4582,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4583,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4584,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4585,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4587,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4588,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4589,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4590,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4597,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4598,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4599,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4600,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4567,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4568,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4569,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4570,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1909,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4351,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4460,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4461,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4462,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4463,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4464,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4465,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4466,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4467,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4433,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4434,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4435,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4436,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4437,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4438,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4439,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4440,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4424,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4425,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4426,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4427,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4428,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4429,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4430,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4431,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4469,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4470,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4471,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4472,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4473,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4474,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4475,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4476,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4451,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4452,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4453,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4454,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4455,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4456,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4457,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4458,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4442,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4443,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4444,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4445,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4446,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4447,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4448,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4449,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4415,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4416,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4417,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4418,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4419,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4420,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4421,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4422,"buySecondary"))
tradingNPC:addNotEnoughMoneyMsg("Kein Geld, keine Drinks.", "No money, no drinks.")
tradingNPC:addDialogClosedMsg("Arr. Bitteschön.", "Arr. Here you are.")
tradingNPC:addDialogClosedNoTradeMsg("Nicht gucken sondern schlucken!", "Don't look, swallow!")
tradingNPC:addWrongItemMsg("Behalt das mal.", "Keep it.")
mainNPC:addLanguage(0)
mainNPC:addLanguage(2)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Ein breit lächelnder Zwergenwirt, dessen prächtiger Bart und Kleidung von Bierflecken übersät ist.", "A broadly smiling dwarven barkeeper whose proud beard and clothes are covered with beer stains.")
mainNPC:setUseMessage("Fass mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut dich verwirrt an.", "#me looks at you confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 101)
mainNPC:setEquipment(11, 0)
mainNPC:setEquipment(5, 0)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 0)
mainNPC:setEquipment(9, 2113)
mainNPC:setEquipment(10, 53)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
