local condition_item = require("npc.base.condition.item")
local condition_state = require("npc.base.condition.state")
local consequence_warp = require("npc.base.consequence.warp")
local condition_language = require("npc.base.condition.language")
local consequence_state = require("npc.base.consequence.state")
local basic = require("npc.base.basic")
local talk = require("npc.base.talk")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(0)
local talkingNPC = talk(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is Ruggero Bloom, a scruffy pirate. Keywords: Job, Tobacco, Entrance, Corporal Piero."))
talkEntry:addResponse("Help? I won't help you. Get out, Jack!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist Ruggero Bloom, ein lottriger Pirat . Schlüsselwörter: Beruf, Tabak, Zutritt, Corporal Piero."))
talkEntry:addResponse("Helfen? ich werd dir nich helfen. Verschwinde du Leichtmatrose!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("I am not a trader.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Ich bin kein Händler.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_state("=", 5))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_state("=", 6))
talkEntry:addResponse("#me swings his fist into your stomach.'Do you have cheese beetween your ears? I don't want to see you again here!'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_state("=", 5))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_state("=", 6))
talkEntry:addResponse("#me schlägt dir seine Faust in den Magen. 'Hast du Käse zwischen den Ohren? Ich will dich hier nicht mehr sehn!'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_state("=", 6))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addResponse("#me's face becomes red like a tomato and he gives you a proper beating.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_state("=", 6))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addResponse("#me läuft rot an wie eine Tomate und verprügelt dich, wie's im Lehrbuch steht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(182, "body", "=>", 1, nil))
talkEntry:addTrigger("zutritt")
talkEntry:addTrigger("passier")
talkEntry:addTrigger("weg")
talkEntry:addTrigger("[oeö]fne")
talkEntry:addTrigger("Tabak")
talkEntry:addTrigger("verdienen")
talkEntry:addTrigger("aufgabe")
talkEntry:addTrigger("abenteuer")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(182, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("german"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(182, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(182, "body", "=>", 1, nil))
talkEntry:addTrigger("open")
talkEntry:addTrigger("way")
talkEntry:addTrigger("entrance")
talkEntry:addTrigger("pass")
talkEntry:addTrigger("tobacco")
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("mission")
talkEntry:addTrigger("money")
talkEntry:addTrigger("earn")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(181, "body", "=>", 1, nil))
talkEntry:addTrigger("zutritt")
talkEntry:addTrigger("passier")
talkEntry:addTrigger("weg")
talkEntry:addTrigger("[oeö]fne")
talkEntry:addTrigger("Tabak")
talkEntry:addTrigger("verdienen")
talkEntry:addTrigger("aufgabe")
talkEntry:addTrigger("abenteuer")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(181, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("german"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(181, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(181, "body", "=>", 1, nil))
talkEntry:addTrigger("open")
talkEntry:addTrigger("way")
talkEntry:addTrigger("entrance")
talkEntry:addTrigger("pass")
talkEntry:addTrigger("tobacco")
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("mission")
talkEntry:addTrigger("money")
talkEntry:addTrigger("earn")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(457, "body", "=>", 1, nil))
talkEntry:addTrigger("zutritt")
talkEntry:addTrigger("passier")
talkEntry:addTrigger("weg")
talkEntry:addTrigger("[oeö]fne")
talkEntry:addTrigger("Tabak")
talkEntry:addTrigger("verdienen")
talkEntry:addTrigger("aufgabe")
talkEntry:addTrigger("abenteuer")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(457, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("german"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(457, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(457, "body", "=>", 1, nil))
talkEntry:addTrigger("open")
talkEntry:addTrigger("way")
talkEntry:addTrigger("entrance")
talkEntry:addTrigger("pass")
talkEntry:addTrigger("tobacco")
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("mission")
talkEntry:addTrigger("money")
talkEntry:addTrigger("earn")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(180, "body", "=>", 1, nil))
talkEntry:addTrigger("zutritt")
talkEntry:addTrigger("passier")
talkEntry:addTrigger("weg")
talkEntry:addTrigger("[oeö]fne")
talkEntry:addTrigger("Tabak")
talkEntry:addTrigger("verdienen")
talkEntry:addTrigger("aufgabe")
talkEntry:addTrigger("abenteuer")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(180, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("german"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(180, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(180, "body", "=>", 1, nil))
talkEntry:addTrigger("open")
talkEntry:addTrigger("way")
talkEntry:addTrigger("entrance")
talkEntry:addTrigger("pass")
talkEntry:addTrigger("tobacco")
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("mission")
talkEntry:addTrigger("money")
talkEntry:addTrigger("earn")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(195, "body", "=>", 1, nil))
talkEntry:addTrigger("zutritt")
talkEntry:addTrigger("passier")
talkEntry:addTrigger("weg")
talkEntry:addTrigger("[oeö]fne")
talkEntry:addTrigger("Tabak")
talkEntry:addTrigger("verdienen")
talkEntry:addTrigger("aufgabe")
talkEntry:addTrigger("abenteuer")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(195, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("german"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, du darfst vorbei, Kumpel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(195, "body", "=>", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_item(356, "body", "=>", 1, nil))
talkEntry:addCondition(condition_item(195, "body", "=>", 1, nil))
talkEntry:addTrigger("open")
talkEntry:addTrigger("way")
talkEntry:addTrigger("entrance")
talkEntry:addTrigger("pass")
talkEntry:addTrigger("tobacco")
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("mission")
talkEntry:addTrigger("money")
talkEntry:addTrigger("earn")
talkEntry:addConsequence(consequence_state("=", 0))
talkEntry:addConsequence(consequence_warp(6, 560, 0))
talkEntry:addResponse("Aye, you may pass matey!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("zutritt")
talkEntry:addTrigger("passier")
talkEntry:addTrigger("weg")
talkEntry:addTrigger("[oeö]fne")
talkEntry:addTrigger("Tabak")
talkEntry:addTrigger("verdienen")
talkEntry:addTrigger("aufgabe")
talkEntry:addTrigger("abenteuer")
talkEntry:addConsequence(consequence_inform("Welch ein ungemütlicher Geselle. Besser du nimmt dich in Acht."))
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Kein Zutritt, für Leute wie dich. Verschwinde oder ich spiel Trommel auf deinem Gesicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("german"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_inform("Welch ein ungemütlicher Geselle. Besser du nimmt dich in Acht."))
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Kein Zutritt, für Leute wie dich. Verschwinde oder ich spiel Trommel auf deinem Gesicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("job")
talkEntry:addTrigger("problem")
talkEntry:addConsequence(consequence_inform("Such a rude person. Be careful!"))
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("No entrance for people like you. Get out or I will use your face as a drum.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("open")
talkEntry:addTrigger("way")
talkEntry:addTrigger("entrance")
talkEntry:addTrigger("pas")
talkEntry:addTrigger("tobacco")
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("mission")
talkEntry:addTrigger("money")
talkEntry:addTrigger("earn")
talkEntry:addConsequence(consequence_inform("Such a rude person. Be careful!"))
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("No entrance for people like you. Get out or I will use your face as a drum.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("hallo")
talkEntry:addTrigger("gr[üue]+[sß]+e")
talkEntry:addTrigger("guten tag")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Seid gegrüßt")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Greb")
talkEntry:addResponse("Hej Landratte!")
talkEntry:addResponse("Aye.")
talkEntry:addResponse("Mast- und Schotbruch, Matrose!")
talkEntry:addResponse("Arr! Was gibt's?")
talkEntry:addResponse("Ahoi!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("good day")
talkEntry:addTrigger("greetings")
talkEntry:addTrigger("greets")
talkEntry:addTrigger("hail")
talkEntry:addTrigger("hello")
talkEntry:addTrigger("Be greeted")
talkEntry:addTrigger("Good morning")
talkEntry:addResponse("Hey landlubber !")
talkEntry:addResponse("Aye.")
talkEntry:addResponse("Always fair winds and following seas, Jack.")
talkEntry:addResponse("Arr! What's new?")
talkEntry:addResponse("Oi me matey! Ya wouldn' happen to 'ave a bottle o' rum on ya would ye?")
talkEntry:addResponse("Ahoy, me hearties!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greebas")
talkEntry:addTrigger("Greebs")
talkEntry:addResponse("Hey landlubber!")
talkEntry:addResponse("Aye.")
talkEntry:addResponse("Always fair winds and following seas, Jack.")
talkEntry:addResponse("Arr! What's new?")
talkEntry:addResponse("Oi me matey! Ya wouldn' happen to 'ave a bottle o' rum on ya would ye?")
talkEntry:addResponse("Ahoy, me hearties!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greebas")
talkEntry:addTrigger("Greebs")
talkEntry:addResponse("Hej Landratte!")
talkEntry:addResponse("Aye.")
talkEntry:addResponse("Mast- und Schotbruch, Matrose!")
talkEntry:addResponse("Arr! Was gibt's?")
talkEntry:addResponse("Ahoi!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("wie hei[sß]+t du")
talkEntry:addTrigger("wie hei[sß]+t ihr")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer seid")
talkEntry:addTrigger("wer bist")
talkEntry:addResponse("Ich bin Ruggero Bloom. Bei meinen wankenden Masten!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("I am Ruggero Bloom. Shiver me timbers!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Good bye")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare thee well")
talkEntry:addResponse("Aye.")
talkEntry:addResponse("Good wind.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehabt euch wohl")
talkEntry:addResponse("Aye.")
talkEntry:addResponse("Gut Wind.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Fareba")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addResponse("Aye.")
talkEntry:addResponse("Good wind.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Fareba")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addResponse("Aye.")
talkEntry:addResponse("Gut Wind.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("No strangers passing.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addResponse("Kein Fremder kommt an mir vorbei.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("I am")
talkEntry:addTrigger("I'm")
talkEntry:addResponse("Aye.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ich bin")
talkEntry:addResponse("Aye.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Tobis")
talkEntry:addTrigger("Vunu")
talkEntry:addResponse("Aye Tobis Vunu is my matey! Arr.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tobis")
talkEntry:addTrigger("Vunu")
talkEntry:addResponse("Aye Tobis Vunu ist'n guter Kumpel von mir! Arr.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Piero")
talkEntry:addResponse("I never saw such a landlubber.. He's Corporal of Cadomyr and has been trying to bash the pirate bay for years. Har-har.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Piero")
talkEntry:addResponse("So ne Landratte! Wie ich se noch nie zuvor gesehn hab. Er ist Corporal von Cadomyr und versucht die Piratebay zu zerschlagen... seit Jahren. har-har.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("murgo")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Not even Murgo's here to save you now landlubber! Get out!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("murgo")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Nich mal Murgo könnt dir hier helfen. Verschwinde!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("what sell")
talkEntry:addTrigger("what buy")
talkEntry:addTrigger("list wares")
talkEntry:addTrigger("price of")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Are you thickheaded or what? I told you to leave!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("was verkauf")
talkEntry:addTrigger("was kauf")
talkEntry:addTrigger("warenliste")
talkEntry:addTrigger("preis von")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Biste ein Esel oder wie? Ich hab gesagt du sollt verschwinden!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("My fist... and your face will be friends soon, fool.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Meine Faust und dein Gesicht, werden bald dicke Freunde, du Scherzbold.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addResponse("I bash people who want to enter our tobacco fields. Are you willing to enter?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addResponse("Ich verprügel Leute die zu unseren Tabakfeldern wollen. Willst du zu unseren Tabakfeldern?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("I bash people who want to enter our tobacco fields. Are you willing to enter?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Ich verprügel Leute die zu unseren Tabakfeldern wollen. Willst du zu unseren Tabakfeldern?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Better not annoy me...seadog.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Besser ist's du gehst mir nich auf die Nerven.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Listen... I won't talk to you. Get out of here, or I will shove my boot up your butt. Got it?")
talkEntry:addResponse("I won't tell you again. GET OUT!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_state("+", 1))
talkEntry:addResponse("Hör zu... ich will nicht mit dir sprechen. Verschwinde hier, oder ich bohr dir meine Stiefel ins Hinterteil.")
talkEntry:addResponse("Ich sags nicht nochmal. VERSCHWINDE!")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("Aye. Wassimma.", "Aye. Whatever.")
talkingNPC:addCycleText("#me lässt die seine Figner knacken.", "#me cracks his knuckles.")
talkingNPC:addCycleText("#me glotzt stur gerade aus, wie ein Stier.", "#me stares stubbornly straight ahead.")
talkingNPC:addCycleText("#me knirscht mit den Zähnen.", "#me gnashes his teeth")
talkingNPC:addCycleText("#me spuckt auf den Boden neben sich.", "#me spits on the ground next to him.")
talkingNPC:addCycleText("#me puhlt sich mit einem Dolch Essensreste aus den Zahnlücken.", "#me picks food from his teeth with a dagger.")
mainNPC:addLanguage(0)
mainNPC:addLanguage(1)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Arr, das ist ein hässlicher wilder Pirat! Nimm dich in Acht!", "Arr, this seems like a ugly wild pirate! Be careful!")
mainNPC:setUseMessage("Fass mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut dich verwirrt an.", "#me looks at you confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 181)
mainNPC:setEquipment(11, 0)
mainNPC:setEquipment(5, 0)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 48)
mainNPC:setEquipment(9, 34)
mainNPC:setEquipment(10, 53)
mainNPC:setEquipment(3, 180)
mainNPC:setEquipment(9, 824)
mainNPC:setEquipment(10, 53)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
