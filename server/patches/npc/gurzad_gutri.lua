local consequence_item = require("npc.base.consequence.item")
local condition_item = require("npc.base.condition.item")
local consequence_quest = require("npc.base.consequence.quest")
local condition_language = require("npc.base.condition.language")
local consequence_deleteitem = require("npc.base.consequence.deleteitem")
local basic = require("npc.base.basic")
local condition_town = require("npc.base.condition.town")
local condition_chance = require("npc.base.condition.chance")
local talk = require("npc.base.talk")
local consequence_money = require("npc.base.consequence.money")
local condition_quest = require("npc.base.condition.quest")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(3)
local talkingNPC = talk(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is Gurzad Gutri the head clerk. Keywords: Hello, Mission, Clerk, Galmair."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist Gurzad Gutri, der oberste Sekretär. Schlüsselwörter: Hallo, Auftrag, Sekretär, Galmair."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("Good day to ye, have ya come to contribute to Galmair's storage")
talkEntry:addResponse("Greetings! This here be where the Don lives, so watch yourself.")
talkEntry:addResponse("Hello there. This is where we sort out the storage for Galmair, I hope you're here to help!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Seid gegrüßt. Seid Ihr gekommen, um Galmairs Lager aufzustocken?")
talkEntry:addResponse("Grüße! Der Don wohnt und lebt hier, also benehmt Euch!")
talkEntry:addResponse("Grüße. An diesem Ort sammeln wir unter anderem die Güter Galmairs, ich hoffe, Ihr seid gekommen, um zu spenden und zu helfen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Good day to ye, have ya come to contribute to Galmair's storage")
talkEntry:addResponse("Greetings! This here be where the Don lives, so watch yourself.")
talkEntry:addResponse("Hello there. This is where we sort out the storage for Galmair, I hope you're here to help!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Seid gegrüßt. Seid Ihr gekommen, um Galmairs Lager aufzustocken?")
talkEntry:addResponse("Grüße! Der Don wohnt und lebt hier, also benehmt Euch!")
talkEntry:addResponse("Grüße. An diesem Ort sammeln wir unter anderem die Güter Galmairs, ich hoffe, Ihr seid gekommen, um zu spenden und zu helfen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("Irmorom with ye!")
talkEntry:addResponse("Check back regularly for more orders!")
talkEntry:addResponse("Best o' luck to ya!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Möge Irmorom mit Euch sein!")
talkEntry:addResponse("Kommt für weitere Aufträge regelmäßig vorbei!")
talkEntry:addResponse("Viel Glück wünsch ich!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Irmorom with ye!")
talkEntry:addResponse("Check back regularly for more orders!")
talkEntry:addResponse("Best o' luck to ya!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Möge Irmorom mit Euch sein!")
talkEntry:addResponse("Kommt für weitere Aufträge regelmäßig vorbei!")
talkEntry:addResponse("Viel Glück wünsch ich!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("I am well, but I'll be better after you help stock the storage!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addTrigger("Wie Befind")
talkEntry:addResponse("Es geht mir gut, aber ich würde mich freuen, wenn Ihr mir helfen könntet!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("I am Gurzad Gutri! I have been tasked with the position of clerk to help maintain our stocks and storage, I expect ye want to help?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("Ich bin Gurzad Gutri! Ich wurde mit der Position des obersten Sekretärs beauftragt, um das Lager der Stadt instand zu halten. Ich nehme an, Ihr wollt mir dabei helfen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("In Galmair, we stand on our own feet! We are not in need of the Queen's assistance!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wir stehen in Galmair auf eigenen Füßen! Wir benötigen keine Unterstützung von der Königin!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("In Galmair, we stand on our own feet! We are not in need of the Queen's assistance!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wir stehen in Galmair auf eigenen Füßen! Wir benötigen keine Unterstützung von der Königin!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I'm not certain those from Runewick would want to get down and dirty in the hard tasks we Galmairians seek.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich bin mir nicht sicher, ob sich die aus Runewick ihre Finger mit den Aufträgen schmutzig machen möchten, die in Galmair anfallen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I'm not certain those from Runewick would want to get down and dirty in the hard tasks we Galmairians seek.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich bin mir nicht sicher, ob sich die aus Runewick ihre Finger mit den Aufträgen schmutzig machen möchten, die in Galmair anfallen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(153, "~=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("There is no work today, our storage is stocked up!")
talkEntry:addResponse("It's good you want to help Galmair! But at the moment we have no work.")
talkEntry:addResponse("You still want work? I have none, but you'll certainly find plenty from our citizens!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(153, "~=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Heute gibt es keine Arbeit mehr, das Lager ist voll!")
talkEntry:addResponse("Es ist gut, dass Ihr Galmair weiterbringen wollt! Momentan gibt es jedoch nichts für Euch zu tun.")
talkEntry:addResponse("Ihr wollt noch mehr Arbeit? Ich habe momentan keine, aber Ihr findet sicher noch welche bei anderen Bewohnern Galmairs!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(153, "~=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("There is no work today, our storage is stocked up!")
talkEntry:addResponse("It's good you want to help Galmair! But at the moment we have no work.")
talkEntry:addResponse("You still want work? I have none, but you'll certainly find plenty from our citizens!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(153, "~=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Heute gibt es keine Arbeit mehr, das Lager ist voll!")
talkEntry:addResponse("Es ist gut, dass Ihr Galmair weiterbringen wollt! Momentan gibt es jedoch nichts für Euch zu tun.")
talkEntry:addResponse("Ihr wollt noch mehr Arbeit? Ich habe momentan keine, aber Ihr findet sicher noch welche bei anderen Bewohnern Galmairs!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's Storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 1))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don had an appetite and snuck some fruits from the storage! We need to replace them. Bring me five strawberries!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 1))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hatte heute Heißhunger auf Erdbeeren und hat einige aus dem Lager genommen. Wir müssen sie ersetzen. Bringt mir fünf Erdbeeren!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's Storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 1))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don had an appetite and snuck some fruits from the storage! We need to replace them. Bring me five strawberries!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 1))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hatte heute Heißhunger auf Erdbeeren und hat einige aus dem Lager genommen. Wir müssen sie ersetzen. Bringt mir fünf Erdbeeren!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 1))
talkEntry:addCondition(condition_item(151, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded two silver coins."))
talkEntry:addConsequence(consequence_money("+", 200))
talkEntry:addConsequence(consequence_deleteitem(151, 5, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Good job! For now, the storage is set. Your payment is two silver.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 1))
talkEntry:addCondition(condition_item(151, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du wirst mit zwei Silbermünzen belohnt."))
talkEntry:addConsequence(consequence_money("+", 200))
talkEntry:addConsequence(consequence_deleteitem(151, 5, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Gute Arbeit! Für den Moment ist das Lager voll. Eure Bezahlung sind zwei Silbermünzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 1))
talkEntry:addCondition(condition_item(151, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Oy! I will not have the storage records be inaccurate, be sure to come back with the five strawberries!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 1))
talkEntry:addCondition(condition_item(151, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Hey, ich werde nicht zulassen, dass die Lagerbestände Lücken aufweisen! Stellt sicher, dass Ihr mir fünf Erdbeeren bringt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 1))
talkEntry:addCondition(condition_item(151, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Oy! I will not have the storage records be inaccurate, be sure to come back with the five strawberries!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 1))
talkEntry:addCondition(condition_item(151, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Hey, ich werde nicht zulassen, dass die Lagerbestände Lücken aufweisen! Stellt sicher, dass Ihr mir fünf Erdbeeren bringt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.26))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's Storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 2))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("We always hold some sand in our storage for bartering deals with Cadomyr. Some of it was used up and we need to replace it. Get twenty piles of quartz sand!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.26))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 2))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Wir haben immer etwas Sand im Lager, falls wir mit Cadomyr verhandeln wollen. Es wurde vor Kurzem etwas Sand verbraucht, also muss er ersetzt werden. Bringt mir 20 Haufen Quarzsand!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(5.26))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's Storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 2))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("We always hold some sand in our storage for bartering deals with Cadomyr. Some of it was used up and we need to replace it. Get twenty piles of quartz sand!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(5.26))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 2))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Wir haben immer etwas Sand im Lager, falls wir mit Cadomyr verhandeln wollen. Es wurde vor Kurzem etwas Sand verbraucht, also muss er ersetzt werden. Bringt mir 20 Haufen Quarzsand!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 2))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a shovel."))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_item(24, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("Good job! Once again the storage is full. Here is a shovel so you may acquire as much sand as you need in the future!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 2))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du bekommst eine Schaufel."))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_item(24, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("Gute Arbeit! Das Lager ist wieder gefüllt. Hier nehmt diese Schaufel, damit Ihr auch in Zukunft Sand besorgen könnt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 2))
talkEntry:addCondition(condition_item(316, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("We need that sand! Be sure to return with twenty piles of quartz sand")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 2))
talkEntry:addCondition(condition_item(316, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wir brauchen diesen Sand! Stellt sicher, dass Ihr mir 20 Haufen Quarzsand besorgt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 2))
talkEntry:addCondition(condition_item(316, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("We need that sand! Be sure to return with twenty piles of quartz sand")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 2))
talkEntry:addCondition(condition_item(316, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wir brauchen diesen Sand! Stellt sicher, dass Ihr mir 20 Haufen Quarzsand besorgt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.56))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 3))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don recently had some new rings made for his personal collection! Now we are short of some gems. I'll be needing ya to get me three cut rubies.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.56))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 3))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat sich vor Kurzem drei neue Ringe für seine Kollektion machen lassen. Nun müssen wir die dafür verbrauchten Edelsteine wiederbeschaffen. Bringt mir drei geschliffene Rubine!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(5.56))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 3))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don recently had some new rings made for his personal collection! Now we are short of some gems. I'll be needing ya to get me three cut rubies.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(5.56))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 3))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat sich vor Kurzem drei neue Ringe für seine Kollektion machen lassen. Nun müssen wir die dafür verbrauchten Edelsteine wiederbeschaffen. Bringt mir drei geschliffene Rubine!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 3))
talkEntry:addCondition(condition_item(46, "all", ">", 2, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded six silver coins."))
talkEntry:addConsequence(consequence_money("+", 600))
talkEntry:addConsequence(consequence_deleteitem(46, 3, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 24))
talkEntry:addResponse("Oi! Good work there! These will do just fine. Thank ya for the work, your payment is six silvers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 3))
talkEntry:addCondition(condition_item(46, "all", ">", 2, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du wirst mit sechs Silbermünzen entlohnt."))
talkEntry:addConsequence(consequence_money("+", 600))
talkEntry:addConsequence(consequence_deleteitem(46, 3, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 24))
talkEntry:addResponse("Hah, gute Arbeit! Diese Steine werden ihren Zweck erfüllen, danke für Eure Mühe. Hier nehmt diese Münzen als Belohnung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 3))
talkEntry:addCondition(condition_item(46, "all", "<", 3, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("We need those three rubies! What if the Don commisioned three more ruby rings? Be sure to come back with them.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 3))
talkEntry:addCondition(condition_item(46, "all", "<", 3, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wir brauchen diese Rubine! Was wäre, wenn der Don in diesem Moment neue Ringe haben wollte? Bringt mir schnell drei geschliffene Rubine!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 3))
talkEntry:addCondition(condition_item(46, "all", "<", 3, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("We need those three rubies! What if the Don commisioned three more ruby rings? Be sure to come back with them.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 3))
talkEntry:addCondition(condition_item(46, "all", "<", 3, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wir brauchen diese Rubine! Was wäre, wenn der Don in diesem Moment neue Ringe haben wollte? Bringt mir schnell drei geschliffene Rubine!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.88))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 4))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Oi! You're here just in time, a fight broke out and several windows were shattered. We used up some of our stored glass and now need ten glass ingots to fill the gap.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.88))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 4))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Ihr kommt grade richtig. Vor Kurzem ist hier eine Schlägerei ausgebrochen und einige Fenster sind zu Bruch gegangen. Wir mussten einige Glasbarren verwenden, um den Schaden zu beheben und brauchen nun Ersatz. Zehn Glasbarren sollten genügen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(5.88))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 4))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Oi! You're here just in time, a fight broke out and several windows were shattered. We used up some of our stored glass and now need ten glass ingots to fill the gap.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(5.88))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 4))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Ihr kommt grade richtig. Vor Kurzem ist hier eine Schlägerei ausgebrochen und einige Fenster sind zu Bruch gegangen. Wir mussten einige Glasbarren verwenden, um den Schaden zu beheben und brauchen nun Ersatz. Zehn Glasbarren sollten genügen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 4))
talkEntry:addCondition(condition_item(41, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded twelve silver coins."))
talkEntry:addConsequence(consequence_money("+", 1200))
talkEntry:addConsequence(consequence_deleteitem(41, 10, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Very good! With this we'll be able to replace the broken windows. Come back again to help with the storage! Until then, you're payment is twelve silvers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 4))
talkEntry:addCondition(condition_item(41, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zwölf Silbermünzen."))
talkEntry:addConsequence(consequence_money("+", 1200))
talkEntry:addConsequence(consequence_deleteitem(41, 10, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Sehr gut! Damit werden wir Fenster reparieren können, wenn mal wieder was zu Bruch geht. Schaut wieder mal vorbei, um mir zu helfen. Bis dahin nehmt diese zwölf Silbermünzen als Belohnung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 4))
talkEntry:addCondition(condition_item(41, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Those broken windows are an eyesore! Don't return without those ten glass ingots.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 4))
talkEntry:addCondition(condition_item(41, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Habt Ihr zehn Glasbarren dabei? Nein? Nun, dann kommt wieder, wenn Ihr sie habt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 4))
talkEntry:addCondition(condition_item(41, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Those broken windows are an eyesore! Don't return without those ten glass ingots.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 4))
talkEntry:addCondition(condition_item(41, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Habt Ihr zehn Glasbarren dabei? Nein? Nun, dann kommt wieder, wenn Ihr sie habt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 5))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don was working a deal out with some merchants from a neighbouring country. During the deals they broke out some smoking pipes. We'll need five more pipes to replace those the Don used!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 5))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don arbeitet an einem Deal mit einigen Händlern eines angrenzenden Landes. Sie rauchen gerne, daher haben sie einige Pfeifen aus dem Lager genommen. Sorgt für Ersatz und bringt mit fünf Pfeifen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 5))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don was working a deal out with some merchants from a neighbouring country. During the deals they broke out some smoking pipes. We'll need five more pipes to replace those the Don used!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 5))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don arbeitet an einem Deal mit einigen Händlern eines angrenzenden Landes. Sie rauchen gerne, daher haben sie einige Pfeifen aus dem Lager genommen. Sorgt für Ersatz und bringt mit fünf Pfeifen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 5))
talkEntry:addCondition(condition_item(2744, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a golden ring."))
talkEntry:addConsequence(consequence_deleteitem(2744, 5, nil))
talkEntry:addConsequence(consequence_item(235, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("Good work! These will certainly help out future deals. For your efforts, the Don has awarded you this golden ring.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 5))
talkEntry:addCondition(condition_item(2744, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen Goldring."))
talkEntry:addConsequence(consequence_deleteitem(2744, 5, nil))
talkEntry:addConsequence(consequence_item(235, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("Sehr gut. Diese Pfeifen werden in zukünftigen Verhandlungen sicher nützlich sein. Nehmt diesen Ring als Belohnung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 5))
talkEntry:addCondition(condition_item(2744, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The storage must be filled! Go and bring me back the five pipes.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 5))
talkEntry:addCondition(condition_item(2744, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Das Lager muss stets gefüllt sein! Bringt mir fünf Pfeifen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 5))
talkEntry:addCondition(condition_item(2744, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The storage must be filled! Go and bring me back the five pipes.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 5))
talkEntry:addCondition(condition_item(2744, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Das Lager muss stets gefüllt sein! Bringt mir fünf Pfeifen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(6.67))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 6))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("We've been looking to expand our workshop, but the storage is short. We are in need of twenty more bricks for the construction project.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(6.67))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 6))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Wir versuchen unsere Werkstatt auszubauen, aber haben nicht die nötigen Materialien dafür. Wir benötigen 20 weitere Ziegel für die Umbauten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(6.67))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 6))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("We've been looking to expand our workshop, but the storage is short. We are in need of twenty more bricks for the construction project.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(6.67))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 6))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Wir versuchen unsere Werkstatt auszubauen, aber haben nicht die nötigen Materialien dafür. Wir benötigen 20 weitere Ziegel für die Umbauten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 6))
talkEntry:addCondition(condition_item(2588, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a bag."))
talkEntry:addConsequence(consequence_deleteitem(2588, 20, nil))
talkEntry:addConsequence(consequence_item(97, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 24))
talkEntry:addResponse("Good work! Our masons will make good use of these. You are rewarded a leather bag.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 6))
talkEntry:addCondition(condition_item(2588, "all", ">", 19, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst eine Tasche als Bezahlung."))
talkEntry:addConsequence(consequence_deleteitem(2588, 20, nil))
talkEntry:addConsequence(consequence_item(97, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 24))
talkEntry:addResponse("Hervorragende Arbeit! Unsere Maurer werden hocherfreut sein. Nehmt diese Tasche als Bezahlung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 6))
talkEntry:addCondition(condition_item(2588, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The crafters are complaining! We need those twenty bricks.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 6))
talkEntry:addCondition(condition_item(2588, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Die Handwerker beschweren sich schon! Wir brauchen diese 20 Ziegelsteine!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 6))
talkEntry:addCondition(condition_item(2588, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The crafters are complaining! We need those twenty bricks.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 6))
talkEntry:addCondition(condition_item(2588, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Die Handwerker beschweren sich schon! Wir brauchen diese 20 Ziegelsteine!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(7.14))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 7))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don has recently hired a new bodyguard. He has taken a longsword from the storage in order to arm this new guard. We must replace it! Please bring me one longsword.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(7.14))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 7))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Eine neue Leibwache des Dons hat sich ein Langschwert aus dem Lager genommen, dafür brauchen wir nun Ersatz. Bringt mir ein Langschwert!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(7.14))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 7))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don has recently hired a new bodyguard. He has taken a longsword from the storage in order to arm this new guard. We must replace it! Please bring me one longsword.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(7.14))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 7))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Eine neue Leibwache des Dons hat sich ein Langschwert aus dem Lager genommen, dafür brauchen wir nun Ersatz. Bringt mir ein Langschwert!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 7))
talkEntry:addCondition(condition_item(2701, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded twelve silver coins."))
talkEntry:addConsequence(consequence_money("+", 1200))
talkEntry:addConsequence(consequence_deleteitem(2701, 1, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Very good! This sword will do well. Your payment is twelve silvers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 7))
talkEntry:addCondition(condition_item(2701, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zwölf Silbermünzen."))
talkEntry:addConsequence(consequence_money("+", 1200))
talkEntry:addConsequence(consequence_deleteitem(2701, 1, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Sehr gut, dieses Schwert wird uns gute Dienste leisten. Eure Bezahlung beträgt zwölf Silbermünzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 7))
talkEntry:addCondition(condition_item(2701, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("We are still short on the storage! This is for the Don's protection! Be sure not to return without the longsword.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 7))
talkEntry:addCondition(condition_item(2701, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wir benötigen noch immer dieses Langschwert. Es wird dem Wohl des Dons dienen, also kommt nicht noch mal ohne das Schwert wieder!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 7))
talkEntry:addCondition(condition_item(2701, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("We are still short on the storage! This is for the Don's protection! Be sure not to return without the longsword.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 7))
talkEntry:addCondition(condition_item(2701, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wir benötigen noch immer dieses Langschwert. Es wird dem Wohl des Dons dienen, also kommt nicht noch mal ohne das Schwert wieder!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(7.69))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 8))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don commissioned a number of potions to be made and our alchemists took out a bunch of herbs. We are now short and I need you to get fifteen firnis blossoms for the storage.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(7.69))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 8))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat unsere Alchemisten einige Tränke brauen lassen. Nun fehlen uns ein paar Kräuter. Bringt mit 15 Firnisblüten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(7.69))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 8))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don commissioned a number of potions to be made and our alchemists took out a bunch of herbs. We are now short and I need you to get fifteen firnis blossoms for the storage.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(7.69))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 8))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat unsere Alchemisten einige Tränke brauen lassen. Nun fehlen uns ein paar Kräuter. Bringt mit 15 Firnisblüten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 8))
talkEntry:addCondition(condition_item(148, "all", ">", 14, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a bowl of mushroom soup."))
talkEntry:addConsequence(consequence_deleteitem(148, 15, nil))
talkEntry:addConsequence(consequence_item(2456, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Aha good work! Digging in the dirt must have worn you down, here is some mushroom soup to get you back into shape!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 8))
talkEntry:addCondition(condition_item(148, "all", ">", 14, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst eine Schüssel mit Pilzsuppe."))
talkEntry:addConsequence(consequence_deleteitem(148, 15, nil))
talkEntry:addConsequence(consequence_item(2456, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Aha, gute Arbeit! Im Dreck nach Blüten zu suchen muss anstrengend sein. Hier nehmt diese Pilzsuppe und stärkt Euch wieder.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 8))
talkEntry:addCondition(condition_item(148, "all", "<", 15, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The storage must be filled! When you return, I expect you will have the fifteen firnis blossoms.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 8))
talkEntry:addCondition(condition_item(148, "all", "<", 15, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Was macht Ihr hier? Kommt erst wieder, wenn Ihr die 15 Firnisblüten habt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 8))
talkEntry:addCondition(condition_item(148, "all", "<", 15, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The storage must be filled! When you return, I expect you will have the fifteen firnis blossoms.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 8))
talkEntry:addCondition(condition_item(148, "all", "<", 15, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Was macht Ihr hier? Kommt erst wieder, wenn Ihr die 15 Firnisblüten habt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(8.33))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 9))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("#me stumbles as he looks up 'HEY! Hey you! *hic* Our damn mugs shattered when we.. *hic* challenged the Don to a drinking game. But the game ain't over yet son! We.. *hic* need more clay mugs! How many? Uh... however this many is! He holds up all of his fingers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(8.33))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 9))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("#me taumelt als er aufschaut. 'HEY! Hey du! *hic* Unsere verdammten Krüge sind zerbrochen, als wir... *hic* als wir den Don zu einem Trinkwettbewerb herausgefordert haben! Aber das Spiel ist noch nicht aus! Wir... *hic* brauchen neue Tonkrüge! Wie viele? Uhm, so viele wie das hier ist!' Er hält alle seine Finger hoch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(8.33))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 9))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("#me stumbles as he looks up 'HEY! Hey you! *hic* Our damn mugs shattered when we.. *hic* challenged the Don to a drinking game. But the game ain't over yet son! We.. *hic* need more clay mugs! How many? Uh... however this many is! He holds up all of his fingers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(8.33))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 9))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("#me taumelt als er aufschaut. 'HEY! Hey du! *hic* Unsere verdammten Krüge sind zerbrochen, als wir... *hic* als wir den Don zu einem Trinkwettbewerb herausgefordert haben! Aber das Spiel ist noch nicht aus! Wir... *hic* brauchen neue Tonkrüge! Wie viele? Uhm, so viele wie das hier ist!' Er hält alle seine Finger hoch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 9))
talkEntry:addCondition(condition_item(2183, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded sixteen silver coins."))
talkEntry:addConsequence(consequence_money("+", 1600))
talkEntry:addConsequence(consequence_deleteitem(2183, 10, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("#me burps loudly as he takes the mugs 'OI!!! Ye brought these.. *hic* JUST in time! Here's some monies!' and then vomits in front of you before running off")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 9))
talkEntry:addCondition(condition_item(2183, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 16 Silbermünzen."))
talkEntry:addConsequence(consequence_money("+", 1600))
talkEntry:addConsequence(consequence_deleteitem(2183, 10, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("#me rülpst laut, während er dir die Krüge abnimmt. 'Hey, die bringt Ihr grade richtig! *hic* Nehmt das Geld als Entschädigung!' Dann übergibt er sich vor deine Füße und rennt davon.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 9))
talkEntry:addCondition(condition_item(2183, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Who are you!? OH! You're the guy!! OI! *Hic* We need them clay mugs! We need ten!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 9))
talkEntry:addCondition(condition_item(2183, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wer seid Ihr!? OH, Ihr seid es!! Hey! *hic* Wir brauchen wirklich diese Tonkrüge. Zehn, zehn Krüge!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 9))
talkEntry:addCondition(condition_item(2183, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Who are you!? OH! You're the guy!! OI! *Hic* We need them clay mugs! We need ten!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 9))
talkEntry:addCondition(condition_item(2183, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wer seid Ihr!? OH, Ihr seid es!! Hey! *hic* Wir brauchen wirklich diese Tonkrüge. Zehn, zehn Krüge!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(9.09))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 10))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Recently one of our candle moulds was used and broke as we had an order of candles to fill. The mould that broke was from our storage so we must replace it! Bring me one candle mould.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(9.09))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 10))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Eine unserer Kerzenformen ist vor Kurzem bei der Benutzung zu Bruch gegangen. Besorgt mir eine neue Kerzenform!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(9.09))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 10))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Recently one of our candle moulds was used and broke as we had an order of candles to fill. The mould that broke was from our storage so we must replace it! Bring me one candle mould.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(9.09))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf"))
talkEntry:addConsequence(consequence_quest(152, "=", 10))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Eine unserer Kerzenformen ist vor Kurzem bei der Benutzung zu Bruch gegangen. Besorgt mir eine neue Kerzenform!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 10))
talkEntry:addCondition(condition_item(429, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded six silver coins."))
talkEntry:addConsequence(consequence_money("+", 600))
talkEntry:addConsequence(consequence_deleteitem(429, 1, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Ah this is perfect. You've done a good job! Here is your payment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 10))
talkEntry:addCondition(condition_item(429, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst sechs Silbermünzen."))
talkEntry:addConsequence(consequence_money("+", 600))
talkEntry:addConsequence(consequence_deleteitem(429, 1, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Ah, das ist perfekt. Ihr habt gute Arbeit geleistet, nehmt diese Münzen als Entlohnung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 10))
talkEntry:addCondition(condition_item(429, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("We need that candle mould. I just can't feel comfortable until I know the storage is set. Bring me one candle mould.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 10))
talkEntry:addCondition(condition_item(429, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wir brauchen diese Kerzenform! Ich kann mich einfach nicht wohlfühlen, wenn das Lager nicht voll aufgestockt ist.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 10))
talkEntry:addCondition(condition_item(429, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("We need that candle mould. I just can't feel comfortable until I know the storage is set. Bring me one candle mould.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 10))
talkEntry:addCondition(condition_item(429, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wir brauchen diese Kerzenform! Ich kann mich einfach nicht wohlfühlen, wenn das Lager nicht voll aufgestockt ist.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's Storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 11))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don had a party for some merchants travelling through this land. We served some of our most famous soup but the damn merchants left without returning the bowls! We need to replace them! Bring me twenty soup bowls.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 11))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat ein Gelage für einige Händler abgehalten und seine Lieblingssuppe servieren lassen, aber keiner der Händler hat seine Suppenschüsseln wieder abgegeben! Wir benötigen Ersatz. Bringt mir 20 Suppenschüsseln.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's Storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 11))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don had a party for some merchants travelling through this land. We served some of our most famous soup but the damn merchants left without returning the bowls! We need to replace them! Bring me twenty soup bowls.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 11))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat ein Gelage für einige Händler abgehalten und seine Lieblingssuppe servieren lassen, aber keiner der Händler hat seine Suppenschüsseln wieder abgegeben! Wir benötigen Ersatz. Bringt mir 20 Suppenschüsseln.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 11))
talkEntry:addCondition(condition_item(2935, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a gilded dagger."))
talkEntry:addConsequence(consequence_deleteitem(2935, 20, nil))
talkEntry:addConsequence(consequence_item(297, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 24))
talkEntry:addResponse("These will do great! Perhaps one day the Don will invite you to be a part of one of his parties. We received some extra equipment in our last order, so today I'll reward you with this dagger.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 11))
talkEntry:addCondition(condition_item(2935, "all", ">", 19, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen vergoldeten Dolch."))
talkEntry:addConsequence(consequence_deleteitem(2935, 20, nil))
talkEntry:addConsequence(consequence_item(297, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 24))
talkEntry:addResponse("Ja, das sind gute Schüsseln! Vielleicht wird auch Euch der Don eines Tages auf eines seiner Gelage einladen. Wir haben noch ein paar Ausrüstungsgegenstände aus einer Lieferung übrig, also belohne ich Euch heute mit diesem Dolch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 11))
talkEntry:addCondition(condition_item(2935, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("You should know not to come here until your task is finished! Be sure to return with twenty soup bowls.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 11))
talkEntry:addCondition(condition_item(2935, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ihr solltet nicht hier sein, sofern Ihr die Aufgabe nicht erfüllt habt! Kehrt mit 20 Suppenschüsseln zurück.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 11))
talkEntry:addCondition(condition_item(2935, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("You should know not to come here until your task is finished! Be sure to return with twenty soup bowls.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 11))
talkEntry:addCondition(condition_item(2935, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ihr solltet nicht hier sein, sofern Ihr die Aufgabe nicht erfüllt habt! Kehrt mit 20 Suppenschüsseln zurück.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(11.11))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 12))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don commissioned a new set of armour to be made. For this he took materials from our storage for the smith. We've been able to replace everything except the leather since there are no pigs around. Please venture out and gather us ten pieces of dried leather.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(11.11))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 12))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat eine neue Rüstung in Auftrag gegeben. Dafür wurden Materialien aus unserem Lager für den Schmied verwendet. Wir haben bereits alles bis auf das Leder ersetzt, da es hier kaum Schweine gibt. Woher ist mir egal, aber besorge zehn getrocknete Lederhäute.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(11.11))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 12))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don commissioned a new set of armour to be made. For this he took materials from our storage for the smith. We've been able to replace everything except the leather since there are no pigs around. Please venture out and gather us ten pieces of dried leather.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(11.11))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 12))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat eine neue Rüstung in Auftrag gegeben. Dafür wurden Materialien aus unserem Lager für den Schmied verwendet. Wir haben bereits alles bis auf das Leder ersetzt, da es hier kaum Schweine gibt. Woher ist mir egal, aber besorge zehn getrocknete Lederhäute.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 12))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded sixteen silver coins."))
talkEntry:addConsequence(consequence_money("+", 1600))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Ah very good, the smiths will be pleased! Here is your payment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 12))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 16 Silbermünzen."))
talkEntry:addConsequence(consequence_money("+", 1600))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Sehr gut, die Schmiede werden erfreut sein! Hier ist Euer Lohn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 12))
talkEntry:addCondition(condition_item(2547, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Did you bring the leathers? Be sure that they are already dried! We have no use for raw leather. Make sure that you come back ten dried leather.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 12))
talkEntry:addCondition(condition_item(2547, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Bringt Ihr mir das Leder? Stellt sicher, dass es auch getrocknet ist! Rohes Leder können wir nicht gebrauchen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 12))
talkEntry:addCondition(condition_item(2547, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Did you bring the leathers? Be sure that they are already dried! We have no use for raw leather. Make sure that you come back ten dried leather.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 12))
talkEntry:addCondition(condition_item(2547, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Bringt Ihr mir das Leder? Stellt sicher, dass es auch getrocknet ist! Rohes Leder können wir nicht gebrauchen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 13))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don's personal golden goblet has been tarnished over the years, he's taken a new one from the storage. I'll need ya to go and fetch a new golden goblet for the storage.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 13))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der persönliche Goldkelch des Dons hat über die Jahre an Glanz verloren, daher hat er sich einen neuen aus dem Lager genommen. Ich will, dass Ihr für Ersatz sorgt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 13))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don's personal golden goblet has been tarnished over the years, he's taken a new one from the storage. I'll need ya to go and fetch a new golden goblet for the storage.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 13))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der persönliche Goldkelch des Dons hat über die Jahre an Glanz verloren, daher hat er sich einen neuen aus dem Lager genommen. Ich will, dass Ihr für Ersatz sorgt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 13))
talkEntry:addCondition(condition_item(224, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a pipe."))
talkEntry:addConsequence(consequence_deleteitem(224, 1, nil))
talkEntry:addConsequence(consequence_item(2744, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Ah! This is perfect. Good work, the Don will be pleased should he need another. Now that you have provided a fine drinking goblet, you are rewarded a fine smoking pipe!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 13))
talkEntry:addCondition(condition_item(224, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst eine Pfeife."))
talkEntry:addConsequence(consequence_deleteitem(224, 1, nil))
talkEntry:addConsequence(consequence_item(2744, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Perfekt! Gute Arbeit! Der Don wird erfreut sein, sollte er wieder einen neuen Kelch benötigen. Nun, da Ihr ein feines Instrument zum Trinken besorgt gabt, belohne ich Euch mit einem zum Rauchen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 13))
talkEntry:addCondition(condition_item(224, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("It doesn't seem like you brought the goblet? Don't come back until you've got one golden goblet for me!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 13))
talkEntry:addCondition(condition_item(224, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Es sieht nicht so aus, als hättet Ihr einen Kelch mitgebracht? Kommt nicht noch mal ohne einen goldenen Kelch wieder!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 13))
talkEntry:addCondition(condition_item(224, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("It doesn't seem like you brought the goblet? Don't come back until you've got one golden goblet for me!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 13))
talkEntry:addCondition(condition_item(224, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Es sieht nicht so aus, als hättet Ihr einen Kelch mitgebracht? Kommt nicht noch mal ohne einen goldenen Kelch wieder!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(14.29))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 14))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("One of the Don's bodyguards was out hunting yesterday and his bow broke. The Don had a longbow taken from the storage, we must replace it! Bring me one longbow.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(14.29))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 14))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Einer der Leibwachen des Dons hat gestern auf einem Jagdausflug seinen Bogen zerbrochen. Ein neuer Langbogen wurde aus dem Lager genommen, wir müssen ihn ersetzen! Bringt mir einen Langbogen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(14.29))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 14))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("One of the Don's bodyguards was out hunting yesterday and his bow broke. The Don had a longbow taken from the storage, we must replace it! Bring me one longbow.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(14.29))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 14))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Einer der Leibwachen des Dons hat gestern auf einem Jagdausflug seinen Bogen zerbrochen. Ein neuer Langbogen wurde aus dem Lager genommen, wir müssen ihn ersetzen! Bringt mir einen Langbogen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 14))
talkEntry:addCondition(condition_item(2708, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded eight silver coins."))
talkEntry:addConsequence(consequence_money("+", 800))
talkEntry:addConsequence(consequence_deleteitem(2708, 1, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("Aye! This is a fine bow! Ye done good! The storage is again all accounted for, here is your payment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 14))
talkEntry:addCondition(condition_item(2708, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst acht Silbermünzen."))
talkEntry:addConsequence(consequence_money("+", 800))
talkEntry:addConsequence(consequence_deleteitem(2708, 1, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("Aye, das ist ein guter Bogen! Gut gemacht. Das Lager ist wieder gefüllt, hier ist Euer Lohn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 14))
talkEntry:addCondition(condition_item(2708, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Our storage is short of one longbow! I need you to come back with one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 14))
talkEntry:addCondition(condition_item(2708, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Unserem Lager fehlt ein Langbogen! Kommt erst wieder zurück, wenn Ihr einen habt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 14))
talkEntry:addCondition(condition_item(2708, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Our storage is short of one longbow! I need you to come back with one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 14))
talkEntry:addCondition(condition_item(2708, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Unserem Lager fehlt ein Langbogen! Kommt erst wieder zurück, wenn Ihr einen habt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(16.67))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 15))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("One of our hunting parties went out again and brought back a good stock of meat for us! But they used quite a large amount of crossbow bolts. I need you to get me one hundred crossbow bolts.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(16.67))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 15))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Eine unserer Jagdgruppen ist mit viel gutem Fleisch zurückgekehrt! Jedoch haben sie dabei eine größere Anzahl an Armbrustbolzen verbraucht. Besorgt mir 100 neue Bolzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(16.67))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 15))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("One of our hunting parties went out again and brought back a good stock of meat for us! But they used quite a large amount of crossbow bolts. I need you to get me one hundred crossbow bolts.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(16.67))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 15))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Eine unserer Jagdgruppen ist mit viel gutem Fleisch zurückgekehrt! Jedoch haben sie dabei eine größere Anzahl an Armbrustbolzen verbraucht. Besorgt mir 100 neue Bolzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 15))
talkEntry:addCondition(condition_item(237, "all", ">", 99, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded an ebony wood bow."))
talkEntry:addConsequence(consequence_deleteitem(237, 100, nil))
talkEntry:addConsequence(consequence_item(2780, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Aye! This is good. These will serve the Don well, whether it's against a pack of wolves or our enemies. Good Work! Here is your reward.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 15))
talkEntry:addCondition(condition_item(237, "all", ">", 99, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen Ebenholzbogen."))
talkEntry:addConsequence(consequence_deleteitem(237, 100, nil))
talkEntry:addConsequence(consequence_item(2780, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Aye! Das ist gut. Diese Bolzen werden dem Don gute Dienste leisten, ob gegen ein Rudel Wölfe, oder gegen unsere Feinde. Gute Arbeit! Hier ist Euer Lohn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 15))
talkEntry:addCondition(condition_item(237, "all", "<", 100, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ye don't want our men going out unarmed do ya? Be sure to bring me one hundred crossbow bolts.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 15))
talkEntry:addCondition(condition_item(237, "all", "<", 100, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ihr wollt doch nicht, dass unsere Männer unbewaffnet ausziehen müssen? Bringt mir 100 Armbrustbolzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 15))
talkEntry:addCondition(condition_item(237, "all", "<", 100, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Ye don't want our men going out unarmed do ya? Be sure to bring me one hundred crossbow bolts.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 15))
talkEntry:addCondition(condition_item(237, "all", "<", 100, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ihr wollt doch nicht, dass unsere Männer unbewaffnet ausziehen müssen? Bringt mir 100 Armbrustbolzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 16))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("We're having a feast tonight and many of our materials were taken from the storage for food. There are so many people that we ran out! I need you to skip the storage part and just bring me five venison dishes for the feast!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 16))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Heute Abend gibt es ein Gelage und das hat unsere Vorräte sehr belastet. Es kommen so viele Gäste, dass wir nicht genug für alle haben! Ich möchte, dass Ihr mir fünf fertige Wildgerichte bringt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 16))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("We're having a feast tonight and many of our materials were taken from the storage for food. There are so many people that we ran out! I need you to skip the storage part and just bring me five venison dishes for the feast!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 16))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Heute Abend gibt es ein Gelage und das hat unsere Vorräte sehr belastet. Es kommen so viele Gäste, dass wir nicht genug für alle haben! Ich möchte, dass Ihr mir fünf fertige Wildgerichte bringt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 16))
talkEntry:addCondition(condition_item(554, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded twenty two silver coins."))
talkEntry:addConsequence(consequence_money("+", 2200))
talkEntry:addConsequence(consequence_deleteitem(554, 5, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Aha! These look delicious, they do! Ya did good work this time, I'm sure everyone will be pleased. Your payment is twenty two silvers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 16))
talkEntry:addCondition(condition_item(554, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 22 Silbermünzen."))
talkEntry:addConsequence(consequence_money("+", 2200))
talkEntry:addConsequence(consequence_deleteitem(554, 5, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 60))
talkEntry:addResponse("Aha! Sieht köstlich aus, wirklich! Gute Arbeit dieses Mal. Ich bin sicher, dass alle hocherfreut sein werden. Hier ist Euer Lohn, einige Silbermünzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 16))
talkEntry:addCondition(condition_item(554, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Oi! That feast is today! We need those five venison dishes as soon as possible, don't come back without them!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 16))
talkEntry:addCondition(condition_item(554, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Hey! Das Gelage ist heute. Wir brauchen diese Wildgerichte so bald wie möglich. Kommt nicht ohne wieder!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 16))
talkEntry:addCondition(condition_item(554, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Oi! That feast is today! We need those five venison dishes as soon as possible, don't come back without them!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 16))
talkEntry:addCondition(condition_item(554, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Hey! Das Gelage ist heute. Wir brauchen diese Wildgerichte so bald wie möglich. Kommt nicht ohne wieder!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 17))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Our alchemists are hard at work! They've recently taken some of our powders from the storage, therefore.... they must be replaced! Bring me five bags of sapphire powder.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 17))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Unsere Alchemisten arbeiten sehr hart. Sie haben neulich einige Beutel Edelsteinstaub aus dem Lager genommen. Also... müssen sie ersetzt werden! Bringt mir fünf Beutel Saphirstaub!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage"))
talkEntry:addConsequence(consequence_quest(152, "=", 17))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Our alchemists are hard at work! They've recently taken some of our powders from the storage, therefore.... they must be replaced! Bring me five bags of sapphire powder.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 17))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Unsere Alchemisten arbeiten sehr hart. Sie haben neulich einige Beutel Edelsteinstaub aus dem Lager genommen. Also... müssen sie ersetzt werden! Bringt mir fünf Beutel Saphirstaub!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 17))
talkEntry:addCondition(condition_item(446, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a sapphire ring."))
talkEntry:addConsequence(consequence_deleteitem(446, 5, nil))
talkEntry:addConsequence(consequence_item(279, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Very good! These will do just fine. I'm sure the alchemists will be pleased. Now that the storage is once again filled, here is your reward.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 17))
talkEntry:addCondition(condition_item(446, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen Saphirring."))
talkEntry:addConsequence(consequence_deleteitem(446, 5, nil))
talkEntry:addConsequence(consequence_item(279, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Sehr gut! Das wird den Alchemisten in Zukunft weiterhelfen. Nun, da das Lager wieder gefüllt ist, hier Eure Belohnung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 17))
talkEntry:addCondition(condition_item(446, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I thought I gave you an order? Don't come back until you have the five bags of sapphire powder.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 17))
talkEntry:addCondition(condition_item(446, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich dachte, ich hätte Euch einen Auftrag gegeben? Kommt nicht ohne fünf Beutel Saphirstaub wieder.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 17))
talkEntry:addCondition(condition_item(446, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I thought I gave you an order? Don't come back until you have the five bags of sapphire powder.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 17))
talkEntry:addCondition(condition_item(446, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich dachte, ich hätte Euch einen Auftrag gegeben? Kommt nicht ohne fünf Beutel Saphirstaub wieder.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(33.33))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 18))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("#me grumbles 'Some of our smiths snuck in and snatched some of our coal. I would've given it to them if they had filled out a requisition order! Nonetheless, we are short and I need you to get me fifteen lumps of coal.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(33.33))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 18))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("#me grummelt. 'Einige unserer Schmiede haben sich hier eingeschlichen und etwas Kohle genommen. Ohne Genehmigung hätte ich sie ihnen nie gegeben! Egal, wir sind nun knapp an Kohle und müssen nachbessern. Bringt mit 15 Kohlebrocken.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(33.33))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 18))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("#me grumbles 'Some of our smiths snuck in and snatched some of our coal. I would've given it to them if they had filled out a requisition order! Nonetheless, we are short and I need you to get me fifteen lumps of coal.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(33.33))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 18))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("#me grummelt. 'Einige unserer Schmiede haben sich hier eingeschlichen und etwas Kohle genommen. Ohne Genehmigung hätte ich sie ihnen nie gegeben! Egal, wir sind nun knapp an Kohle und müssen nachbessern. Bringt mit 15 Kohlebrocken.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 18))
talkEntry:addCondition(condition_item(21, "all", ">", 14, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(21, 15, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("Good work there! Good to know we have at least someone reliable in this operation. Here is your payment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 18))
talkEntry:addCondition(condition_item(21, "all", ">", 14, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(21, 15, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 36))
talkEntry:addResponse("Gute Arbeit! Schön, dass hier wenigstens auf jemand Verlass ist. Hier ist Eure Belohnung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 18))
talkEntry:addCondition(condition_item(21, "all", "<", 15, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("We need that coal! You never know when the Don is going to want something crafted. Be sure to come back with fifteen lumps of coal.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 18))
talkEntry:addCondition(condition_item(21, "all", "<", 15, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wir brauchen diese Kohle! Man weiß nie, wann der Don etwas geschmiedet haben will. Stellt sicher, mit 15 Kohlebrocken wiederzukommen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 18))
talkEntry:addCondition(condition_item(21, "all", "<", 15, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("We need that coal! You never know when the Don is going to want something crafted. Be sure to come back with fifteen lumps of coal.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 18))
talkEntry:addCondition(condition_item(21, "all", "<", 15, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wir brauchen diese Kohle! Man weiß nie, wann der Don etwas geschmiedet haben will. Stellt sicher, mit 15 Kohlebrocken wiederzukommen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 19))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don has taken a helmet from our storage to armour one of his new bodyguards. He's the Don so I've no say in the matter, but now we're short! I need you to go and get me one pot helmet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 19))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat einen Helm aus dem Lager genommen, um einen der neuen Leibwachen auszurüsten. Er ist der Don, also hatte ich da nichts zu sagen, aber jetzt muss der Helm ersetzt werden! Bringt mir einen neuen Topfhelm.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 19))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don has taken a helmet from our storage to armour one of his new bodyguards. He's the Don so I've no say in the matter, but now we're short! I need you to go and get me one pot helmet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 19))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat einen Helm aus dem Lager genommen, um einen der neuen Leibwachen auszurüsten. Er ist der Don, also hatte ich da nichts zu sagen, aber jetzt muss der Helm ersetzt werden! Bringt mir einen neuen Topfhelm.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 19))
talkEntry:addCondition(condition_item(94, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a gold ingot."))
talkEntry:addConsequence(consequence_deleteitem(94, 1, nil))
talkEntry:addConsequence(consequence_item(236, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("This'll do great! The Don trusts me for this reason. I always have reliable good equipment for him! And here's your reward for your work.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 19))
talkEntry:addCondition(condition_item(94, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen Goldbarren."))
talkEntry:addConsequence(consequence_deleteitem(94, 1, nil))
talkEntry:addConsequence(consequence_item(236, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Dieser Helm wird gute Dienste leisten! Ich versorge den Don stets mit guter Ausrüstung. Hier ist die Belohnung für Eure Arbeit.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 19))
talkEntry:addCondition(condition_item(94, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("You came back without the helmet? I can't have the Don come to me and be short! Don't come back unless you have one pot helmet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 19))
talkEntry:addCondition(condition_item(94, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wieso kommt Ihr ohne den Helm wieder? Es darf nicht passieren, dass der Don zu mir kommt und ich kann nicht liefern! Kommt nicht wieder, bevor Ihr mir keinen Topfhelm bringt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 19))
talkEntry:addCondition(condition_item(94, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("You came back without the helmet? I can't have the Don come to me and be short! Don't come back unless you have one pot helmet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 19))
talkEntry:addCondition(condition_item(94, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wieso kommt Ihr ohne den Helm wieder? Es darf nicht passieren, dass der Don zu mir kommt und ich kann nicht liefern! Kommt nicht wieder, bevor Ihr mir keinen Topfhelm bringt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 20))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don commissioned a ring to be made and used a gold nugget from the storage. It might only be a single nugget, but it must be replaced! I need you to get me one gold nugget.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 20))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat einen Ring in Auftrag gegeben und dafür wurde ein Goldnugget aus dem Lager verwendet. Es ist vielleicht nur ein einziges Nugget, aber es muss dennoch ersetzt werden! Bring mir ein Goldnugget.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] Stock up Galmair's storage."))
talkEntry:addConsequence(consequence_quest(152, "=", 20))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("The Don commissioned a ring to be made and used a gold nugget from the storage. It might only be a single nugget, but it must be replaced! I need you to get me one gold nugget.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 0))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Stocke Galmairs Vorräte auf."))
talkEntry:addConsequence(consequence_quest(152, "=", 20))
talkEntry:addConsequence(consequence_quest(252, "=", 36))
talkEntry:addResponse("Der Don hat einen Ring in Auftrag gegeben und dafür wurde ein Goldnugget aus dem Lager verwendet. Es ist vielleicht nur ein einziges Nugget, aber es muss dennoch ersetzt werden! Bring mir ein Goldnugget.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 20))
talkEntry:addCondition(condition_item(234, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(234, 1, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Aha! Perfect! I'll just store this away and once again the Don's storage is full! Good work, here is your payment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 20))
talkEntry:addCondition(condition_item(234, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silbermünzen."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(234, 1, nil))
talkEntry:addConsequence(consequence_quest(152, "=", 0))
talkEntry:addConsequence(consequence_quest(252, "=", 0))
talkEntry:addConsequence(consequence_quest(153, "=", 48))
talkEntry:addResponse("Aha! Perfekt! Ich werde es einlagern. Wieder einmal ist das Lager des Dons gefüllt! Gute Arbeit, hier ist Euer Lohn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 20))
talkEntry:addCondition(condition_item(234, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Have you brought it? No!? Well don't return until you have one gold nugget for me!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 20))
talkEntry:addCondition(condition_item(234, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Bringt Ihr mir das Nugget? Nein?! Kommt nicht wieder, bevor Ihr nicht ein Goldnugget für mich habt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 20))
talkEntry:addCondition(condition_item(234, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Have you brought it? No!? Well don't return until you have one gold nugget for me!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(152, "=", 20))
talkEntry:addCondition(condition_item(234, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Bringt Ihr mir das Nugget? Nein?! Kommt nicht wieder, bevor Ihr nicht ein Goldnugget für mich habt!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("We don't need no help from anyone from that stinkin' Necktie Inn. Don't let me see you in here again.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wir brauchen keine Hilfe von jemandem aus diesem stinkenden Gasthof zur Hanfschlinge! Lasst Euch hier nicht wieder blicken.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("We don't need no help from anyone from that stinkin' Necktie Inn. Don't let me see you in here again.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wir brauchen keine Hilfe von jemandem aus diesem stinkenden Gasthof zur Hanfschlinge! Lasst Euch hier nicht wieder blicken.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addResponse("I oversee the Don's personal storage here in Galmair.")
talkEntry:addResponse("As the Head Clerk for the Don, it's my duty to make sure that the Don's storage is always well stocked to his standards.")
talkEntry:addResponse("The Don himself has appointed me as the Head Clerk of his storage. Galmair is a well oiled mill! We are constantly at work, and because of this we need to make sure that our storage is always full!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Beruf")
talkEntry:addResponse("Ich überschaue das persönliche Lager des Dons hier in Galmair.")
talkEntry:addResponse("Als Lagerchef des Dons ist es meine Aufgabe, dafür zu sorgen, dass das Lager stets gut gefüllt ist.")
talkEntry:addResponse("Der Don persönlich hat mich als seinen Lagerchef eingesetzt. Galmair ist eine gut geölte Mühle! Wir sind immer bei der Arbeit und daher müssen wir stets sicherstellen, dass das Lager gut gefüllt ist!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addResponse("Gobaith? Never been. I've heard some stories from the locals... That Troll's Bane sounds a lot like Galmair.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addResponse("Auf Gobaith? Bin ich nie gewesen. Aber man hört so einige Geschichten von den Leuten hier... dieses Troll's Bane klingt ziemlich so wie Galmair.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Clerk")
talkEntry:addResponse("Aye that's me. It's my duty to ensure that our storage is kept up to standard.")
talkEntry:addResponse("The Don needs a lot of things made for him! If I didn't do my job then a lot of his orders wouldn't be able to be filled.")
talkEntry:addResponse("I am the Head Clerk! If not for me Galmair would not be as wealthy! Don't tell the Don I said that.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Sekretär")
talkEntry:addResponse("Aye, das bin ich. Es ist meine Aufgabe, dass das Lager der Stadt stets gefüllt ist.")
talkEntry:addResponse("Der Don braucht immer einige Gegenstände! Wenn ich meine Arbeit nicht machen würde, dann könnten einige seiner Forderungen nicht erfüllt werden.")
talkEntry:addResponse("Ich bin der oberste Sekretär. Ohne mich wäre Galmair niemals so reich. Aber sagt dem Don nicht, dass ich das gesagt habe!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("dwarf")
talkEntry:addResponse("Of course I'm a dwarf! I certainly hope you didnt mix me up for a halfer.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Zwerg")
talkEntry:addResponse("Natürlich bin ich ein Zwerg! Ich hoffe doch sehr, dass Ihr mich nicht mit einem Halbling verwechselt habt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Storage")
talkEntry:addResponse("Ah... The storage be my life! I didn't get this job just because of my good looks. Though... I'm certain that those helped.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Lager")
talkEntry:addResponse("Ah... Das Lager ist mein Leben! Ich habe diesen Beruf nicht nur aufgrund meines guten Aussehens bekommen. Allerdings... ich bin sicher, dass das auch geholfen hat.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Guard")
talkEntry:addResponse("A guard? No, not at all. I'm not one to fight! The Don has very capable men for that.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wache")
talkEntry:addTrigger("Wächter")
talkEntry:addTrigger("Stadtwache")
talkEntry:addResponse("Ein Wachmann? Nein, das bin ich wirklich nicht. Ich bin keiner für den Kampf! Der Don hat aber sehr fähige Männer dafür.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("loyal")
talkEntry:addResponse("I'm loyal to the Don of course! He showers us all in his wealth and riches and lets us stay in his safety. Who wouldnt be loyal to him?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("loyal")
talkEntry:addResponse("Natürlich bin ich dem Don gegenüber loyal! Er badet uns alle in Reichtümern und hält uns sicher. Wer würde nicht zu ihm loyal sein?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("archmage")
talkEntry:addResponse("That damn elf talks too much! I'm getting on in years, so being around him a waste of my time!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Dieser verdammte Elf redet einfach zu viel! Ich werde langsam alt, um meine Zeit mit so was zu verschwenden!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("archmage")
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("That damn elf talks too much! I'm getting on in years, so being around him a waste of my time!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Dieser verdammte Elf redet einfach zu viel! Ich werde langsam alt, um meine Zeit mit so was zu verschwenden!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("The Don is a great man! I think that goes without saying. It's because of him that our wealth continues to increase.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Der Don ist ein großer Mann! Ich denke, das muss nicht mal mehr groß gesagt werden. Es liegt an ihm, dass unser Reichtum immer weiter wächst.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Queen")
talkEntry:addResponse("She be a looker, that's for sure. The Don once proposed to her. I can't possibly fathom why anyone would turn down an offer from the Don though.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Königin")
talkEntry:addResponse("Sie ist ein Hingucker, keine Frage. Der Don hat mal um ihre Hand angehalten. Ich kann nicht verstehen, warum irgendjemand den Don so zurückweisen würde, wie sie es tat...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Rosaline")
talkEntry:addTrigger("Edwards")
talkEntry:addResponse("She be a looker, that's for sure. The Don once proposed to her. I can't possibly fathom why anyone would turn down an offer from the Don though.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Rosaline")
talkEntry:addTrigger("Edwards")
talkEntry:addResponse("Sie ist ein Hingucker, keine Frage. Der Don hat mal um ihre Hand angehalten. Ich kann nicht verstehen, warum irgendjemand den Don so zurückweisen würde, wie sie es tat...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Runewick? I'll admit they have some fine craftmanship in the construction of their home... but thats it!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Runewick? Ich gebe zu, es hat einiges an Handwerksfähigkeit gebraucht, um diese Stadt zu bauen... aber das ist auch alles!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Well Galmair is where we live! The finest establishment in these lands... The wealthiest too.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Nunja, Galmair ist hier, wo wir leben! Die beste Stadt in diesen Landen... und auch die reichste.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Honour this! Glory that! They're delusional, all that really matters is money!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Ehre hier, Ehre dort! Die machen sich was vor. Alles, was zählt, ist das Geschäft!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addTrigger("faith")
talkEntry:addResponse("Well I serve Irmorom of course! Have you visted his temple? It is a sight to behold for any craftsman!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addTrigger("Glaube")
talkEntry:addResponse("Nun, ich diene natürlich Irmorom! Habt Ihr schon seinen Tempel hier besichtigt? Er ist ein wunderbarer Anblick für jeden Handwerker!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Irmorom")
talkEntry:addResponse("The God of trade and crafting! He is very important to us in Galmair and he watches over our deals and business. It's because of him we're so wealthy! Er.. And the Don of course!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Irmorom")
talkEntry:addResponse("Der Gott des Handels und des Handwerks! Er ist sehr wichtig für uns in Galmair und er wacht über unsere Geschäfte und Tätigkeiten. Es liegt an ihm, dass wir so reich sind! Ähm... und am Don, natürlich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("In Galmair, we don't lose. Ronagan helps ensure this!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("In Galmair verlieren wir niemals. Ronagan hilft dabei, das sicherzustellen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("what sell")
talkEntry:addTrigger("what buy")
talkEntry:addTrigger("list wares")
talkEntry:addTrigger("price of")
talkEntry:addResponse("The items in my storage are NOT for sale! Only with the Don's or my own permission is anyone allowed to take something from it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("was verkauf")
talkEntry:addTrigger("was kauf")
talkEntry:addTrigger("warenliste")
talkEntry:addTrigger("preis von")
talkEntry:addResponse("Die Gegenstände in meinem Lager sind nicht zum Verkauf! Nur auf Auftrag des Dons, oder durch meinen Befehl ist jemand berechtigt, etwas aus dem Lager zu nehmen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addResponse("I know quite a lot about Galmair and some of the neighbouring factions.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Ich weiß so einiges über Galmair und die anderen Städte in der Nähe.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gurzad")
talkEntry:addTrigger("Gutri")
talkEntry:addResponse("I am the Head Clerk! I oversee the flow of goods and maintain the Don's storage!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gurzad")
talkEntry:addTrigger("Gutri")
talkEntry:addResponse("Ich bin der oberste Sekretär! Ich überwache den Strom an Gütern und erhalte das Lager des Dons.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("I am not a trader.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Ich bin kein Händler.")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("Sagt, was Ihr wollt!", "State your business!")
talkingNPC:addCycleText("Seid loyal gegenüber dem Don und Ihr werdet reich werden!", "Be loyal to the Don, and you'll become rich!")
talkingNPC:addCycleText("Willkommen in den Hallen von Galmair!", "Welcome to the halls of Galmair!")
talkingNPC:addCycleText("#me liest über einige Listen und nickt dann.", "#me looks over various papers with a nod.")
talkingNPC:addCycleText("#me nimmt einen schnellen Schluck aus einem Flachmann, als gerade niemand guckt.", "#me takes a quick swig from a flask when no one is looking")
talkingNPC:addCycleText("Gut, dass wir nicht in der Wüste leben! HAH!", "Good thing we don't live in a desert! HAH!")
talkingNPC:addCycleText("Niemand ist mächtiger als der Don!", "No one is more powerful than the Don!")
talkingNPC:addCycleText("Ich brauche EUCH... um für den Don zu arbeiten.", "I want YOU... to work for the Don.")
talkingNPC:addCycleText("Kommt her! Ihr könnt mit dem Lager von Galmair helfen!", "C'mere! You can help with Galmair's storage!")
talkingNPC:addCycleText("Wenn Ihr reich werden wollt, seid Ihr an den richtigen Ort gekommen!", "If you want to become rich, you've come to the right place!")
mainNPC:addLanguage(0)
mainNPC:addLanguage(2)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Dieser NPC ist Gurzad Gutri, der oberste Sekretär.", "This NPC is Gurzad Gutri the Head Clerk.")
mainNPC:setUseMessage("Fasst mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut verwirrt.", "#me looks around confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 2364)
mainNPC:setEquipment(11, 193)
mainNPC:setEquipment(5, 1061)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 0)
mainNPC:setEquipment(9, 366)
mainNPC:setEquipment(10, 53)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
