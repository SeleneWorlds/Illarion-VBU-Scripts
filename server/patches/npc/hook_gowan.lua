local consequence_trade = require("npc.base.consequence.trade")
local condition_language = require("npc.base.condition.language")
local basic = require("npc.base.basic")
local trade = require("npc.base.trade")
local talk = require("npc.base.talk")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(0)
local talkingNPC = talk(mainNPC)
local tradingNPC = trade(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is Hook Gowan, a trader in Troll's Haven market. Keywords: Hello, Buy, Sell, Trade, Market, Troll's Haven, Nubris, Ronagan, Edwards"))
talkEntry:addResponse("Buying or selling? You are sure to find all you need here in the market at Troll's Haven.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist Hook Gowan, ein Händler des Markts von Trollshaven. Schlüsselwörter: Hallo, kaufe, verkaufe, Handel, Markt, Trollshaven, Nubris, Ronagan, Edwards"))
talkEntry:addResponse("Kaufen oder verkaufen? Du findest sicher alles, was du brauchst, hier auf dem Markt von Trollshaven.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("I can't offer a lot, but it might be just what you need.")
talkEntry:addResponse("You'll find a bit of everything here.")
talkEntry:addConsequence(consequence_trade(tradingNPC))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Viel habe ich nicht anzubieten, aber es könnte genau das sein, was du brauchst.")
talkEntry:addResponse("Du findest hier von allem etwas.")
talkEntry:addConsequence(consequence_trade(tradingNPC))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("With one foot in the shadows, be greeted.")
talkEntry:addResponse("Hello! Is there something you need? I buy and sell exquisite third hand equipment.")
talkEntry:addResponse("Be greeted and take a look at my goods.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Mit einem Fuß im Schatten, zum Gruße.")
talkEntry:addResponse("Hallo, brauchst du was? Ich kaufe und verkaufe erlesene Güter aus dritter Hand.")
talkEntry:addResponse("Seid gegrüßt und werft einen Blick auf meine Waren.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("With one foot in the shadows, be greeted.")
talkEntry:addResponse("Hello! Is there something you need? I buy and sell exquisite third hand equipment.")
talkEntry:addResponse("Be greeted and take a look at my goods.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Mit einem Fuß im Schatten, zum Gruße.")
talkEntry:addResponse("Hallo, brauchst du was? Ich kaufe und verkaufe erlesene Güter aus dritter Hand.")
talkEntry:addResponse("Seid gegrüßt und werft einen Blick auf meine Waren.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("May the shadows shelter you!")
talkEntry:addResponse("Good bye.")
talkEntry:addResponse("May the gods protect you. See you soon.")
talkEntry:addResponse("Safe journey, see you soon.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Die Schatten mögen Euch verbergen.")
talkEntry:addResponse("Auf Wiedersehen.")
talkEntry:addResponse("Mögen Euch die Götter schützen. Bis bald.")
talkEntry:addResponse("Gute Reise, bis bald.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("May the shadows shelter you!")
talkEntry:addResponse("Good bye.")
talkEntry:addResponse("May the gods protect you. See you soon.")
talkEntry:addResponse("Safe journey, see you soon.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Die Schatten mögen Euch verbergen.")
talkEntry:addResponse("Auf Wiedersehen.")
talkEntry:addResponse("Mögen Euch die Götter schützen. Bis bald.")
talkEntry:addResponse("Gute Reise, bis bald.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How do you feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("I'm alright, thanks,")
talkEntry:addResponse("The nobility sinks in decadence and the poor are hungry. Thanks to Ronagan, for sheltering our kind.")
talkEntry:addResponse("Hrmpf. Today I woke up having dreamt my hand was back, then I realised it was just a bad dream sent by Nargùn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addTrigger("Wie Befinden")
talkEntry:addResponse("Einigermaßen. Danke der Nachfrage.")
talkEntry:addResponse("Der Adel ist der Dekadenz verfallen und der Rand der Gesellschaft muss hungern! Gedankt sei's Ronagan, dass er unser eins dennoch behütet.")
talkEntry:addResponse("Hrmpf. Heute bin ich aufgewacht und glaubte meine Hand wäre mir wiedergegeben, anstelle des hässlichen Hakens! Doch dann wurde mir klar, es war ein übler Traum, den mir wohl Nargùn gesandt hatte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("#me winks and raises his hooked hand, 'They call me Hook Gowan.'")
talkEntry:addResponse("#me's eyes twinkle, 'I'm Hook, seller of third hand equipment...'")
talkEntry:addResponse("Gowan. May name is Gowan. Sometimes I wish everyone would just call me Gowan.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("#me winkt mit seiner Hakenhand: 'Man nennt mich Hook Gowan.'")
talkEntry:addResponse("#me zwinkert: 'Ich bin Hook, Händler aus dritter Hand, wenn Ihr versteht, was ich meine.'")
talkEntry:addResponse("Gowan. Ich heiße Gowan. Manchmal wünsch' ich mir, die Leute würden mich einfach nur Gowan nennen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("my name")
talkEntry:addTrigger("I am called")
talkEntry:addTrigger("I'm called")
talkEntry:addResponse("#me nods, half-heartedly saluting with his hook.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("mein Name")
talkEntry:addTrigger("ich heiße")
talkEntry:addResponse("#me nickt, halbherzig mit seinem Haken salutierend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Hm-h. To be honest I already have enough people working for me, so I can't use you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Hm-h. Ehrlich gesagt, hab ich schon ausreichend Leute die für mich arbeiten. Ich kann Euch also nicht brauchen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Hm-h. To be honest I already have enough people working for me, so I can't use you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Hm-h. Ehrlich gesagt, hab ich schon ausreichend Leute die für mich arbeiten. Ich kann Euch also nicht brauchen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addTrigger("work")
talkEntry:addResponse("Once I was a thief and had to steal for my livlihood. Nowadays I just sell stuff here in Troll's Haven and nobody ever tries to interfere.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addResponse("Früher war ich ein Dieb und stahl ich noch selbst meinen Lebensunterhalt zusammen. Aber heute verschachere ich das Zeug nur noch. Und hier in Trollshaven mischt sich da keiner ein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("Once I was a thief and had to steal for my livlihood. Nowadays I just sell stuff here in Troll's Haven and nobody ever tries to interfere.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Früher war ich ein Dieb und stahl ich noch selbst meinen Lebensunterhalt zusammen. Aber heute verschachere ich das Zeug nur noch. Und hier in Trollshaven mischt sich da keiner ein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Illarion")
talkEntry:addResponse("I came to Illarion from Nubris many years ago. Things didn't go too well for me in Cadomyr though.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Illarion")
talkEntry:addResponse("Ich kam vor vielen Jahren von Nubris nach Illarion. In Cadomyr liefen die Dinge für mich allerdings nicht so gut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Troll's Haven")
talkEntry:addTrigger("Trolls Haven")
talkEntry:addTrigger("Trollshaven")
talkEntry:addResponse("Here in Troll's Haven I can trade freely and there is always plenty of business.")
talkEntry:addResponse("Bryan did a good job here with the Hemp Necktie Inn, don't get any nobles scuppering my trade in Troll's Haven.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Troll's Haven")
talkEntry:addTrigger("Trolls Haven")
talkEntry:addTrigger("Trollshaven")
talkEntry:addResponse("Bryan hat das mit der Taverne zur Hanfschlinge gut hinbekommen. Kein Adel, der meine Geschäfte ruiniert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("market")
talkEntry:addResponse("There is always a deal to be found here in Troll's Haven! Coins flow freely when not straight into the pockets of nobility.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Markt")
talkEntry:addResponse("Es gibt immer ein gutes Geschäft in Troll?s Haven! Münzen wandern ungehindert, wenn sie nicht in den Taschen der Adligen verschwinden.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("An old friend of mine lived on Gobaith once, but I haven't seen him in ages. Anyway... not like there are many people left living on Gobaith now!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Ein alter Freund von mir lebte einstweilen auf Gobaith. Aber ich hab ihn schon ewig nicht gesehen. Und ich glaub auch nicht, dass jetzt noch Leute dort leben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("question")
talkEntry:addResponse("Alright, are you going to buy something?")
talkEntry:addResponse("Well, listen, if you don't ask any questions I will not lie to you. Agreed?")
talkEntry:addResponse("Too many questions can lead to trouble!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Frage")
talkEntry:addResponse("Alles klar. Wollt Ihr etwas veräußern oder einkaufen?")
talkEntry:addResponse("In Ordnung. Hört her, ihr stellt keine Fragen und ich werde Euch nicht belügen. Einverstanden?")
talkEntry:addResponse("Zu viele Fragen bringen nur Ärger.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("third")
talkEntry:addTrigger("three")
talkEntry:addTrigger("goods")
talkEntry:addResponse("Third hand goods! Aye. That means these things are used already.")
talkEntry:addResponse("#me sniggers, 'The third hand is mine, the second is the hand of the person who sold it to me, and the first is the hand of whoever once owned them.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("drei")
talkEntry:addTrigger("dritter")
talkEntry:addTrigger("dritt")
talkEntry:addTrigger("wahre")
talkEntry:addTrigger("güter")
talkEntry:addResponse("Ware aus dritter Hand. Aye. Das heißt die Sachen sind schon Mal benutzt worden.")
talkEntry:addResponse("#me lacht leise: 'Die dritte Hand ist meine, die zweite gehört dem, der es mir verkäuft hat und die erste dem ursprünglichen Eigentümer.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("king")
talkEntry:addResponse("#me smirks with a hint of sadness, 'Years ago, I succeeded in stealing the nightdress of a certain Lady Edwards. Wasn't long before they caught me though, and the King ordered my hand to be chopped off. After I was banished, I came here and everyone calls me Hook Gowan.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("könig")
talkEntry:addResponse("#me schmunzelt traurig: 'Vor vielen Jahren gelang es mir das Nachthemd von einer gewissen Lady Edwards zu stehlen. Doch man fasste mich kurz darauf, der König ließ mir die Hand abhacken und ich wurde verbannt. Nun bin ich hier und man nennt mich Hook Gowan.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Reginald")
talkEntry:addResponse("#me smirks with a hint of sadness, 'Years ago, I succeeded in stealing the nightdress of a certain Lady Edwards. Wasn't long before they caught me though, and the King ordered my hand to be chopped off. After I was banished, I came here and everyone calls me Hook Gowan.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Reginald")
talkEntry:addResponse("#me schmunzelt traurig: 'Vor vielen Jahren gelang es mir das Nachthemd von einer gewissen Lady Edwards zu stehlen. Doch man fasste mich kurz darauf, der König ließ mir die Hand abhacken und ich wurde verbannt. Nun bin ich hier und man nennt mich Hook Gowan.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Nubris")
talkEntry:addResponse("Well, my father was Salkamaerian and lived in Nubris, so I was born there. Nubris, the golden jewel of the south... at least until Kharud ruined everything.")
talkEntry:addResponse("Nubris! Well let me tell you about my far away home... There once lived an animal named Kawaaru, a giant lizard with a calm mind, used to lift and bear heavy goods.")
talkEntry:addResponse("I tend to say, kind of subjectively of course, Nubris is the most beautiful town in the world. The dome-shaped roofs can be seen from far away as they glow in the desert sun. A circle of elders are charged with ruling the town.")
talkEntry:addResponse("In Nubris it's too hot for heavy armour. Instead they use armour made of hard wood and thin stones.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Nubris")
talkEntry:addResponse("Tja, mein Vater war Salkamarer und lebte direkt in Nubris. Ich bin dort geboren. Nubris, das goldene Juwel des Südens... zumindest bis Kharud alles ruinierte.")
talkEntry:addResponse(" Nubris! Nun, lasst mich Euch von meiner weit entfernten Heimat erzählen... Dort gab  es ein Tier, genannt Kawaaru. Eine riesige Echse, mit sanftem Gemüt, welche zum Tragen von schweren Gütern eingesetzt wurde.")
talkEntry:addResponse("Ich sage, ganz subjektive natürlich, Nubris war die schönste Stadt der Welt. Die goldenen Kuppeldächer glänzten weithin in der Wüstensonne. Außerdem regierte ein Ältestenrat die Stadt.")
talkEntry:addResponse("In Nubris ist es viel zu heiß für Rüstungen aus Leder oder gar Stahl. Stattdessen verwendete man hauptsächlich leichte Rüstplatten aus hartem Holz oder Schuppenpanzer aus stabilen Steinarten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Bryan")
talkEntry:addResponse("Half-hung Bryan owns the Hemp Necktie Inn, he brought lots of business to Troll's Haven.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Bryan")
talkEntry:addResponse("Dem halbgehängten Bryan gehört das Gasthaus zur Hanfschlinge. Er hat ne Menge Geschäfte nach Trollshaven gebracht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("queen")
talkEntry:addResponse("Some say the Queen is even more strict than her father. I don't fancy losing my other hand.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("königin")
talkEntry:addResponse("Es heißt, die Königin sei noch strenger, als ihr Vater. Ich bin nicht scharf darauf, auch noch die andere Hand zu verlieren.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Rosaline")
talkEntry:addTrigger("Edwards")
talkEntry:addResponse("Some say the Queen is even more strict than her father. The old King, ordered my hand to be chopped off...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Rosaline")
talkEntry:addTrigger("Edwards")
talkEntry:addResponse("Ich kann es Euch nicht genau sagen, doch es heißt, Rosaline sei noch strikter als ihr Vater. Der alte König, ließ mir ja einst die Hand abhacken...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("I was banished from Cadomyr years ago. I loved the town and called it my home, but that's the way life goes.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Ich bin vor vielen Jahren aus Cadomyr verbannt worden. Es war mir lieb, schließlich war die Stadt meine Heimat. Aber so läuft das nun Mal.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Don")
talkEntry:addResponse("Bleed you dry that one would! Even worse than his father.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Don")
talkEntry:addResponse("Der zieht dir noch den letzten Kupferling aus der Tasche! Schlimmer, als sein alter Herr!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addResponse("Ha! That tiny blood-sucking leech should get a red cap so you can't overlook him while walking through long grass.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addResponse("Ha! Diesem zu kurz geratenen Blutsauger sollte man eine rote Mütze aufsetzen, damit man ihn nicht mehr so leicht übersieht, wenn er durchs hohe Gras läuft.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Huh! Galmair? Not even ten ogres can make me go there again. I owe the Don a rather large amount of gold that he was once forced to lend out of his private treasury.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Huh! Nach Galmair bringen mich keine zehn Oger! Ich schulde dem Don Guilianni eine beachtliche Summe Gold. Er hat es mir einst unfreiwilliger Weise aus seiner privaten Schatzkammer geliehen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Archmage")
talkEntry:addResponse("That elf! What chance is there of me ever getting back to Ruenwick with him living so long?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Dieser Elf! Welche Chance hab' ich denn, je nach Runewick zurück zu kommen, wenn der Kerl so lang lebt?!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Elves, they just go on and on and on! What chance is there of me ever getting back to Ruenwick with him living so long?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Elfen, die leben einfach immer weiter! Welche Chance hab' ich denn, je nach Runewick zurück zu kommen, wenn der Kerl so lang lebt?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Hmm, let me think, home of the tree huggers. I'm wanted in Runewick for three different crimes, so no more trips there for me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Hm, lass mich nachdenken... Heimat der Baumknuddler. In Runewick werde ich wegen drei verschiedener Vergehen gesucht. Ich denke, ich werde mich erst einmal eine Weile von dort fernhalten. Ihr nicht auch?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("albar")
talkEntry:addResponse("Well Albar... I know some Albarians but every single one of them is a doltish lout or blockhead.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("albar")
talkEntry:addResponse("Ach Albar... Ich kenne einige Albarer, aber es sind allesamt dumme Rüpel und Dickschädel.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("gynk")
talkEntry:addTrigger("gync")
talkEntry:addResponse("The swamplands stink, Gynk stinks, so the Gynkese stink as well... Isn't that obvious?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("gync")
talkEntry:addTrigger("gynk")
talkEntry:addResponse("Die Sumpflande stinken, Gynk stinkt und Gynkesen stinken ebenso. Wie könnte es auch anders sein?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("salkama")
talkEntry:addResponse("The sun shone brightly on Salkamar and there was hope, at least until Kharud's legions destroyed everything... Now, the shadows are my refuge!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("salkama")
talkEntry:addResponse("Die Sonne schien wohlwollend auf Salkamar und es gab Hoffnung. Zumindest bis Kharud's Legionen alles zerstörten... Jetzt sind die Schatten meine Zuflucht!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("I'll gladly speak of the Shadow Lord! I turned to Ronagan after I lost everything.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Ich will mit Euch über Ronagan sprechen, wenn ihr mehr über unseren Herrn der Schatten wissen wollt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("Ronagan, the God of thieves and shadows! He promises shelter to all who live in the shadow of so called high society")
talkEntry:addResponse("There is a shrine dedicated to the Shadow Lord beneath Galmair, but those of us unwelcome there find brethren elsewhere, beyond Elstree Forest.")
talkEntry:addResponse("My Lord despises the authority of the nobility, and like Ronagan himself, it's my aim to humiliate them.")
talkEntry:addResponse("Sometimes he appears as a dark haired man, wearing dark clothing befitting of the shadows, to guard those in need of a helping hand. He seems quite good humoured and charming to me.")
talkEntry:addResponse("Ronagan dislikes betrayal. To double-cross a partner is a terrible deed and the Shadow Lord would not overlook it, for sure.")
talkEntry:addResponse("They say there are traders who sacrifice part of their earnings to Ronagan, so he will shelter their goods.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("Ronagan, Gott der Diebe und Schatten! Er behütet jene, die im Schatten der Reichen und feinen Gesellschaft leben müssen.")
talkEntry:addResponse("Es heißt, es gäbe einen Schrein für den Schattenherrn, irgendwo in Galmair. Jene unter uns, die dort nicht willkommen sind, finden Gleichgesinnte jenseits des Elstree Forest.")
talkEntry:addResponse("Mein Herr verachtet die Autorität des Adels. Und wie er, lebe ich um Schabernack mit der dekadenten Obrigkeit zu treiben.")
talkEntry:addResponse("Manchmal erscheint er, verkleidet als junger Galan, Vagabund oder Landstreicher. Er soll durchaus humorvoll sein.")
talkEntry:addResponse("Ronagan verabscheut Vertrauensbruch oder Verrat. Einem Partner zu hintergehen ist eine schlimme Tat, für unsereins und der Schattenherr wird es gewiss nicht übersehen.")
talkEntry:addResponse("Ich hörte, es gibt Händler, die dem Schattenherrn opfern, damit sie nicht beraubt werden und er die Langfinger fernhält.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addResponse("Stop questioning, nobody likes a snoopy one!")
talkEntry:addResponse("#me starts to smile broadly, 'Let me tell you I'm a bad lad. Years ago I stole the nightdress of a certain Lady Edwards... that didn't impress the King!'")
talkEntry:addResponse("True story! Once I was citizen of Cadomyr, then I got bannished and they chopped my hand off.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Hört auf Fragen zu stellen, das sieht hier niemand gern.")
talkEntry:addResponse("#me setzt ein Lächeln auf und prahlt: 'Lasst Euch sagen, ich bin ein übler Bursche. Vor langer Zeit stahl ich das Nachthemd einer gewissen Lady Edwards.'")
talkEntry:addResponse("Einst war ich Bürger Cadomyrs, doch man hat mich verbannt. Meine Hand haben sie aber behalten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gowan")
talkEntry:addTrigger("Hook")
talkEntry:addResponse("Yes, that's me and I've got a hook instead of a hand. Problem with that?")
talkEntry:addResponse("Don't start assuming I'm a pirate! I don't even like the sea. Too much sway and swinging... makes me sick.")
talkEntry:addResponse("The old King of Cadomyr chopped my hand off. True Story!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gowan")
talkEntry:addTrigger("Hook")
talkEntry:addResponse("Ja, ich hab einen Haken an der Hand. Ein Problem damit?")
talkEntry:addResponse("Nein ich bin kein Pirat. Ich mag nicht mal das Meer, von zu viel Geschaukel wird mir nämlich immer übel.")
talkEntry:addResponse("Der alte König Cadomyrs hat mir damals noch die Hand abgehackt. Ist echt wahr.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hand")
talkEntry:addResponse("Yes, that's me and I've got a hook instead of a hand. Problem with that?")
talkEntry:addResponse("Don't start assuming I'm a pirate! I don't even like the sea. Too much sway and swinging... makes me sick.")
talkEntry:addResponse("The old King of Cadomyr chopped my hand off. True Story!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("haken")
talkEntry:addTrigger("hand")
talkEntry:addResponse("Ja, ich hab einen Haken an der Hand. Ein Problem damit?")
talkEntry:addResponse("Nein ich bin kein Pirat. Ich mag nicht mal das Meer, von zu viel Geschaukel wird mir nämlich immer übel.")
talkEntry:addResponse("Der alte König Cadomyrs hat mir damals noch die Hand abgehackt. Ist echt wahr.")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("#me hebt seine Hakenhand und kratzt sich mit der Spitze des Hakens am Hinterkopf. Er kneift die Augen zusammen und scheint einen Moment nachzudenken.", "#me raises his hook and scratches the back of his head. He narrows his eyes and seems to think for a moment.")
talkingNPC:addCycleText("#me hängt seinen Haken in den Gurt einer seiner Ledertaschen und hebt sie hoch, mit kritischem Blick mustert er die Tasche von allen Seiten.", "#me takes a leather bag with his hook and examines it closely.")
talkingNPC:addCycleText("#me poliert mit einem resignierten Seufzen den Metallhaken, der seine rechte Hand ersetzt.", "#me polishes the metal hook that replaces his right hand with a resigned sigh.")
talkingNPC:addCycleText("#me reibt sich den Nacken.", "#me scratches his neck.")
talkingNPC:addCycleText("#me räuspert sich unauffällig.", "#me clears his throat quietly.")
talkingNPC:addCycleText("#me gähnt ausgiebig und hält sich dabei den glänzenden Haken vor den Mund.", "#me yawns conspicuously, barely covering his mouth with his hook.")
talkingNPC:addCycleText("#me verschränkt die Arme vor der Brust und lässt seinen Blick zweifelnd über den Markt gleiten.", "#me folds his arms across his chest and glances doubtfully around the market.")
talkingNPC:addCycleText("#me lächelt leicht, lehnt sich zurück und streckt sich.", "#me leans back slightly and stretches his back, giving a brief smile.")
talkingNPC:addCycleText("#me murmelt: 'Ein Schritt im Schatten und einer über die Rinne, der Diebe Stern verbirgt sich am Gestirne.'", "#me mumbles, 'A step into the shadows, the thieve's star is hiding upon the sky.'")
talkingNPC:addCycleText("#me schaut zur Tür der Taverne zur Hanfschlinge, offenbar recht ungeduldig.", "#me eyes the gates to the inn, seemingly quite impatient.")
tradingNPC:addItem(trade.tradeNPCItem(799,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(15,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(191,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(453,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3568,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2499,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2500,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2497,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3051,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3573,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3715,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2456,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(227,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(52,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2498,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1500,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(369,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1447,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2295,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(809,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(813,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(802,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(806,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1478,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(367,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(356,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(830,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1416,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1453,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(384,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(97,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2760,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(89,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(196,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2418,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(841,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1433,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(363,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(823,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(827,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(816,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(820,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1485,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2194,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(324,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(16,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(101,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2359,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1520,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1513,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1470,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(325,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1492,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2117,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(202,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1429,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1441,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(27,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(189,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2629,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2711,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2776,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(25,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(64,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(445,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1045,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2664,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(230,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(65,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2185,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(391,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2717,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2445,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(17,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1046,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1038,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1090,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(39,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(15,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(191,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(453,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3568,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2499,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2500,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2497,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3051,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3573,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3715,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2456,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(227,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(52,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2498,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1500,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(369,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1447,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2295,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(809,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(813,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(802,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(806,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1478,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(367,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(356,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(830,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1416,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1453,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(384,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2760,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(89,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(196,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2418,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(841,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1433,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(363,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(823,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(827,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(816,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(820,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1485,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2194,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(324,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(16,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(101,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2359,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1520,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1513,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1470,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(325,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1492,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2117,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(202,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1429,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1441,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(27,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(189,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2629,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2711,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2776,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(25,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(64,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(445,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1045,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2664,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(230,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(65,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2185,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(391,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2717,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2445,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(17,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1046,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1038,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1090,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(39,"buySecondary"))
tradingNPC:addNotEnoughMoneyMsg("Ich gewähre keinen Kredit.", "I'm not giving credit!")
tradingNPC:addDialogClosedMsg("Das ist alles? Geizhals!", "Is that all? Cheapskate!")
tradingNPC:addDialogClosedNoTradeMsg("Ich hab' keine Zeit zu verschwenden!", "I don't have time to waste!")
tradingNPC:addWrongItemMsg("Den Schrott will ich nicht!", "I don't want that rubbish!")
mainNPC:addLanguage(0)
mainNPC:addLanguage(1)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Ein verschmitzt drein blickender Mann mit Hakenhand. Er spricht mit heißerer, kratziger Stimme.", "An astute man with a hook instead of a hand, gazes ahead, speaking with an hoarse, craggy voice.")
mainNPC:setUseMessage("Fass mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut dich verwirrt an.", "#me looks at you confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 810)
mainNPC:setEquipment(11, 0)
mainNPC:setEquipment(5, 0)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 0)
mainNPC:setEquipment(9, 823)
mainNPC:setEquipment(10, 53)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
