local consequence_item = require("npc.base.consequence.item")
local condition_item = require("npc.base.condition.item")
local consequence_quest = require("npc.base.consequence.quest")
local condition_skill = require("npc.base.condition.skill")
local condition_language = require("npc.base.condition.language")
local condition_town = require("npc.base.condition.town")
local talk = require("npc.base.talk")
local consequence_skill = require("npc.base.consequence.skill")
local consequence_money = require("npc.base.consequence.money")
local condition_quest = require("npc.base.condition.quest")
local consequence_inform = require("npc.base.consequence.inform")
local consequence_deleteitem = require("npc.base.consequence.deleteitem")
local basic = require("npc.base.basic")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(2)
local talkingNPC = talk(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is Alwin Sommerkorn, a fisherman from Runewick. Keywords: Hello, quest."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist Alwin Sommerkorn, ein Fischer von Runewick. Schlüsselwörter: Hallo, Quest."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("Hiho. Nice day for fishing ain't it?")
talkEntry:addResponse("Greetings. The fish are biting well today.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Grüße. Die Fische beißen heute gut.")
talkEntry:addResponse("Hiho. Netter Tag zum Fischen, nicht wahr?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Hiho. Nice day for fishing ain't it?")
talkEntry:addResponse("Greetings. The fish are biting well today.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Grüße. Die Fische beißen heute gut.")
talkEntry:addResponse("Hiho. Netter Tag zum Fischen, nicht wahr?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("Farewell.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Auf bald.")
talkEntry:addResponse("Bis bald.")
talkEntry:addResponse("Machs gut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addResponse("Farewell.")
talkEntry:addResponse("Goodbye.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addResponse("Auf bald.")
talkEntry:addResponse("Bis bald.")
talkEntry:addResponse("Machs gut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("I am not a trader.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Ich bin kein Händler.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("Fine.")
talkEntry:addResponse("#me smiles broadly.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addResponse("#me grinst breit.")
talkEntry:addResponse("Gut. Sehr gut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("Call me Alwin.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addResponse("Nenn mich Alwin.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addResponse("I'm a fisherman and fish fish, sitting in the sun.")
talkEntry:addResponse("Fishing is the best job in the world, sitting on the bank and dangling the soul.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addResponse("Ich bin Fischer und fange Fische und sitze hier bequem in der Sonne.")
talkEntry:addResponse("Fischen ist der tollste Job der Welt. Einfach nur am Ufer sitzen und die Seele baumeln lassen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("I'm a fisherman and fish fish, sitting in the sun.")
talkEntry:addResponse("Fishing is the best job in the world, sitting on the bank and dangling the soul.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Ich bin Fischer und fange Fische und sitze hier bequem in der Sonne.")
talkEntry:addResponse("Fischen ist der tollste Job der Welt. Einfach nur am Ufer sitzen und die Seele baumeln lassen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("archmage")
talkEntry:addResponse("A kind gentleman, always studying, but he always has an open ear for his citizens.")
talkEntry:addResponse("He is very clever and wise. Once he came to me and we discussed fishing.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Netter Herr, studiert viel, hat aber immer ein offenes Ohr für seine Bürger.")
talkEntry:addResponse("Er ist sehr weise und klug. Kam einmal sogar zu mir heraus und wir haben uns über Fische unterhalten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("A kind gentleman, always studying, but he always has an open ear for his citizens.")
talkEntry:addResponse("He is very clever and wise. Once he came to me and we discussed fiscing.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Netter Herr, studiert viel, hat aber immer ein offenes Ohr für seine Bürger.")
talkEntry:addResponse("Er ist sehr weise und klug. Kam einmal sogar zu mir heraus und wir haben uns über Fische unterhalten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("A nice town. You can live here in peace.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Eine schöne Stadt. Hier kann man in Ruhe leben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("Oldra for the fish and Adron for the rest.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Oldra für die Fische und Adron für den Rest.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Oldra")
talkEntry:addResponse("Oldra takes care of the fruits of the fields and the richness in fish of the water.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Oldra")
talkEntry:addResponse("Oldra sorgt für die Früchte des Feldes und den Fischreichtum des Wassers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Adron")
talkEntry:addResponse("What is better than drinking beer and smoking a pipe in the evening after a day full of work?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Adron")
talkEntry:addResponse("Es gibt kaum etwas schöneres als Abends bei einem Bier und einem Pfeifchen den Tag ausklingen zu lassen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Relaxed fishing in Runewick I"))
talkEntry:addConsequence(consequence_item(72, 1, 444, {["descriptionEn"] = "Alwin's old fishing rod.", ["descriptionDe"] = "Alwins alte Angel."}))
talkEntry:addConsequence(consequence_quest(718, "=", 1))
talkEntry:addResponse("You want to learn how to fish, do you? Here, I'll give you my old fishing rod. Take it and try to catch me ten trout from that shoal over there.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Entspanntes Fischen in Runewick I"))
talkEntry:addConsequence(consequence_item(72, 1, 444, {["descriptionEn"] = "Alwin's old fishing rod.", ["descriptionDe"] = "Alwins alte Angel."}))
talkEntry:addConsequence(consequence_quest(718, "=", 1))
talkEntry:addResponse("Du willst das Angeln lernen, nich wahr? Probier mal zehn Forellen aus dem Schwarm dort drüben zu fangen. Hier nimm meine alte Angel dafür.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Relaxed fishing in Runewick I"))
talkEntry:addConsequence(consequence_item(72, 1, 444, {["descriptionEn"] = "Alwin's old fishing rod.", ["descriptionDe"] = "Alwins alte Angel."}))
talkEntry:addConsequence(consequence_quest(718, "=", 1))
talkEntry:addResponse("You want to learn how to fish, do you? Here, I'll give you my old fishing rod. Take it and try to catch me ten trout from that shoal over there.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Entspanntes Fischen in Runewick I"))
talkEntry:addConsequence(consequence_item(72, 1, 444, {["descriptionEn"] = "Alwin's old fishing rod.", ["descriptionDe"] = "Alwins alte Angel."}))
talkEntry:addConsequence(consequence_quest(718, "=", 1))
talkEntry:addResponse("Du willst das Angeln lernen, nich wahr? Probier mal zehn Forellen aus dem Schwarm dort drüben zu fangen. Hier nimm meine alte Angel dafür.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 1))
talkEntry:addCondition(condition_item(73, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Try the places where you can see the fish. There you won't need a long time to fish for ten trout.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 1))
talkEntry:addCondition(condition_item(73, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Probier die Stellen wo die Fische aus dem Wasser springen, da sind zehn Forellen schnell gefangen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 1))
talkEntry:addCondition(condition_item(73, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Try the places where you can see the fish. There you won't need a long time to fish for ten trout.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 1))
talkEntry:addCondition(condition_item(73, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Probier die Stellen wo die Fische aus dem Wasser springen, da sind zehn Forellen schnell gefangen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(718, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded two silver coins and fifty copper coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 250))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 2))
talkEntry:addResponse("Yep, those are trout. Not bad for a rookie. Take these coins for them. Do you want another task?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded two silver coins and fifty copper coins."))
talkEntry:addConsequence(consequence_money("+", 250))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 2))
talkEntry:addResponse("Yep, those are trout. Not bad for a rookie. Take these coins for them. Do you want another task?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(718, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zwei Silberstücke und fünfzig Kupferstücke. Deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 250))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 2))
talkEntry:addResponse("Yep, das sind Forellen. Für den Anfang nicht schlecht, nimm die Münzen dafür. Willst du noch eine Aufgabe?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zwei Silberstücke und fünfzig Kupferstücke."))
talkEntry:addConsequence(consequence_money("+", 250))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 2))
talkEntry:addResponse("Yep, das sind Forellen. Für den Anfang nicht schlecht, nimm die Münzen dafür. Willst du noch eine Aufgabe?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 2))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Relaxed fishing in Runewick II"))
talkEntry:addConsequence(consequence_quest(718, "=", 3))
talkEntry:addResponse("Other than the trout, there are lots of other fish, one of them being the salmon you can find south of here. Go through the forest to the south and over the two bridges to the smaller island to find them, then bring me back ten salmon.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 2))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Entspanntes Fischen in Runewick II"))
talkEntry:addConsequence(consequence_quest(718, "=", 3))
talkEntry:addResponse("Außer den Forellen gibt es noch viele andere Fische, unter anderem die Lachse, die du südlich von hier finden kannst. Geh durch den Wald nach Süden und über die beiden Brücken zu der kleinen Insel, um sie zu finden, und komm mit zehn Lachsen zurück.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 2))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Relaxed fishing in Runewick II"))
talkEntry:addConsequence(consequence_quest(718, "=", 3))
talkEntry:addResponse("Other than the trout, there are lots of other fish, one of them being the salmon you can find south of here. Go through the forest to the south and over the two bridges to the smaller island to find them, then bring me back ten salmon.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 2))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Entspanntes Fischen in Runewick II"))
talkEntry:addConsequence(consequence_quest(718, "=", 3))
talkEntry:addResponse("Außer den Forellen gibt es noch viele andere Fische, unter anderem die Lachse, die du südlich von hier finden kannst. Geh durch den Wald nach Süden und über die beiden Brücken zu der kleinen Insel, um sie zu finden, und komm mit zehn Lachsen zurück.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(718, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(355, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 4))
talkEntry:addResponse("You can probably tell already that different fish thrive in different environments, who knows what kind of fish you can find when you go out exploring in the future? Anyways, I have some coins for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(355, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 4))
talkEntry:addResponse("You can probably tell already that different fish thrive in different environments, who knows what kind of fish you can find when you go out exploring in the future? Anyways, I have some coins for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(718, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(355, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 4))
talkEntry:addResponse("Du hast wahrscheinlich schon begriffen, dass verschiedene Fische in verschiedenen Umgebungen leben. Wer weiß, welche Art von Fischen du finden kannst, wenn du in Zukunft auf Entdeckungsreise gehst? Egal, ich habe erstmal ein paar Münzen für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(355, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 4))
talkEntry:addResponse("Du hast wahrscheinlich schon begriffen, dass verschiedene Fische in verschiedenen Umgebungen leben. Wer weiß, welche Art von Fischen du finden kannst, wenn du in Zukunft auf Entdeckungsreise gehst? Egal, ich habe erstmal ein paar Münzen für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 3))
talkEntry:addCondition(condition_item(355, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("#me pushes his straw hat out of his face, 'I'm awaiting ten salmon'.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 3))
talkEntry:addCondition(condition_item(355, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("#me schiebt den Hut aus dem Gesicht 'Ich warte auf die zehn Lachse'.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 3))
talkEntry:addCondition(condition_item(355, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("#me pushes his straw hat out of his face, 'I'm awaiting ten salmon'.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 3))
talkEntry:addCondition(condition_item(355, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("#me schiebt den Hut aus dem Gesicht 'Ich warte auf die zehn Lachse'.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 4))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Relaxed fishing in Runewick III"))
talkEntry:addConsequence(consequence_quest(718, "=", 5))
talkEntry:addResponse("Go to town and smoke the salmons, so they don't get stinky. Bring me five smoked salmons.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 4))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Entspanntes Fischen in Runewick III"))
talkEntry:addConsequence(consequence_quest(718, "=", 5))
talkEntry:addResponse("Frischer Fisch hält sich nich lang. Gehe in die Stadt und räucher ihn. Bringe mir dann fünf geräucherte Lachse.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 4))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Relaxed fishing in Runewick III"))
talkEntry:addConsequence(consequence_quest(718, "=", 5))
talkEntry:addResponse("Go to town and smoke the salmons, so they don't get stinky. Bring me five smoked salmons.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 4))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Entspanntes Fischen in Runewick III"))
talkEntry:addConsequence(consequence_quest(718, "=", 5))
talkEntry:addResponse("Frischer Fisch hält sich nich lang. Gehe in die Stadt und räucher ihn. Bringe mir dann fünf geräucherte Lachse.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 5))
talkEntry:addCondition(condition_item(3916, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The simplest way is to use the smoke oven in town to smoke five salmons for me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 5))
talkEntry:addCondition(condition_item(3916, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Am einfachsten nutzt du die Räucherhütte in der Stadt um mir fünf Lachse zu räuchern.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 5))
talkEntry:addCondition(condition_item(3916, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The simplest way is to use the smoke oven in town to smoke five salmons for me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 5))
talkEntry:addCondition(condition_item(3916, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addTrigger("job")
talkEntry:addResponse("Am einfachsten nutzt du die Räucherhütte in der Stadt um mir fünf Lachse zu räuchern.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(718, "=", 5))
talkEntry:addCondition(condition_item(3916, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_quest(718, "=", 6))
talkEntry:addResponse("#me smiles broadly 'Keep the smoked salmon, I don't like them. Take the coins for your effort.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 5))
talkEntry:addCondition(condition_item(3916, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_quest(718, "=", 6))
talkEntry:addResponse("#me smiles broadly 'Keep the smoked salmon, I don't like them. Take the coins for your effort.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(718, "=", 5))
talkEntry:addCondition(condition_item(3916, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_quest(718, "=", 6))
talkEntry:addResponse("#me grinst breit 'Behalte den geräucherten Lachs, ich mag ihn sowieso nicht. Nimm die Münzen für den Aufwand.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 5))
talkEntry:addCondition(condition_item(3916, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_quest(718, "=", 6))
talkEntry:addResponse("#me grinst breit 'Behalte den geräucherten Lachs, ich mag ihn sowieso nicht. Nimm die Münzen für den Aufwand.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 6))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Relaxed fishing in Runewick IV"))
talkEntry:addConsequence(consequence_quest(718, "=", 7))
talkEntry:addResponse("You also have to keep your fishing rod in a good repair. Bring ten spools of thread to me, then I will teach you how to repair your fishing rod.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 6))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Entspanntes Fischen in Runewick IV"))
talkEntry:addConsequence(consequence_quest(718, "=", 7))
talkEntry:addResponse("Zum Fischen gehört auch seine Angel in Schuss zu halten. Bringe mir zehn Spulen Garn, dann zeig ich dir, wie man seine Angelschnur repariert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 6))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Relaxed fishing in Runewick IV"))
talkEntry:addConsequence(consequence_quest(718, "=", 7))
talkEntry:addResponse("You also have to keep your fishing rod in a good repair. Bring ten spools of thread to me, then I will teach you how to repair your fishing rod.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 6))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Entspanntes Fischen in Runewick IV"))
talkEntry:addConsequence(consequence_quest(718, "=", 7))
talkEntry:addResponse("Zum Fischen gehört auch seine Angel in Schuss zu halten. Bringe mir zehn Spulen Garn, dann zeig ich dir, wie man seine Angelschnur repariert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 7))
talkEntry:addCondition(condition_item(50, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Do you know how many fish you can fish with a broken fishing line? None! Bring ten spools of thread to me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 7))
talkEntry:addCondition(condition_item(50, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Weißt du was man mit einer kaputten Angel Fischen kann? Genau, Nichts! Also bringe mir zehn Spulen Garn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 7))
talkEntry:addCondition(condition_item(50, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Do you know how many fish you can fish with a broken fishing line? None! Bring ten spools of thread to me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 7))
talkEntry:addCondition(condition_item(50, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Weißt du was man mit einer kaputten Angel Fischen kann? Genau, Nichts! Also bringe mir zehn Spulen Garn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(718, "=", 7))
talkEntry:addCondition(condition_item(50, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(50, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 8))
talkEntry:addResponse("#me takes the thread and fixes it skilfully to the fishing rod.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 7))
talkEntry:addCondition(condition_item(50, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(50, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 8))
talkEntry:addResponse("#me takes the thread and fixes it skilfully to the fishing rod.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(718, "=", 7))
talkEntry:addCondition(condition_item(50, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(50, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 8))
talkEntry:addResponse("#me nimmt das Garn und befestigt es gekonnt an einer Angel")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 7))
talkEntry:addCondition(condition_item(50, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(50, 10, nil))
talkEntry:addConsequence(consequence_quest(718, "=", 8))
talkEntry:addResponse("#me nimmt das Garn und befestigt es gekonnt an einer Angel")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 8))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I don't have anything more for you to do. Thank you for the help though!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 8))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich habe nichts weiter für dich zu tun. Aber danke nochmals für deine Hilfe!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 8))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I don't have anything more for you to do. Thank you for the help though!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(718, "=", 8))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich habe nichts weiter für dich zu tun. Aber danke nochmals für deine Hilfe!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(0))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("No thanks stranger. I only have work for citizens of Runewick.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(0))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Nein danke! Ich habe nur Aufgaben für Bürger von Runewick .")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(0))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("No thanks stranger. I only have work for citizens of Runewick.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(0))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Nein danke! Ich habe nur Aufgaben für Bürger von Runewick .")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Sorry, no work for citizens of Cadomyr. These fish are for the archmage!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Es tut mir Leid, das ist keine Arbeit für Bürger von Cadomyr. Diese Fische sind für den Erzmagier!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Sorry, no work for citizens of Cadomyr. These fish are for the archmage!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Es tut mir Leid, das ist keine Arbeit für Bürger von Cadomyr. Diese Fische sind für den Erzmagier!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("A citizen of Galmair, getting fish for me? No chance, the fish will be spoiled!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ein Bürger von Galmair hat Fisch für mich? Nicht möglich, der Fisch muss verdorben sein!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("A citizen of Galmair, getting fish for me? No chance, the fish will be spoiled!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ein Bürger von Galmair hat Fisch für mich? Nicht möglich, der Fisch muss verdorben sein!")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("Der Köder muss dem Fisch schmecken, nicht dem Angler", "The bait has to taste good for the fish, not for the fisherman.")
talkingNPC:addCycleText("#me betrachtet einen Wurm.", "#me looks at a worm.")
talkingNPC:addCycleText("#me summt ein Liedchen.", "#me hums a ditty.")
talkingNPC:addCycleText("Fischlein, Fischlein du musst beißen...", "Fishy, fishy, you shall bite...")
talkingNPC:addCycleText("#me schiebt seinen Strohhut ins Gesicht.", "#me moves his straw hat over his face.")
talkingNPC:addCycleText("#me kaut auf einen abgerissenen Strohhalm.", "#me chews on a ragged straw.")
talkingNPC:addCycleText("Angeln ist eine angenehme Aufgabe.", "Fishing is comfortable work.")
talkingNPC:addCycleText("In der Ruhe liegt die Kraft, mein Freund.", "Strength lies in calmness, my friend.")
mainNPC:addLanguage(0)
mainNPC:addLanguage(6)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Ein junger, sommersprossiger Halbling lümmelt entspannt am Wasser.", "A young, freckled halfling lolls relaxed near the water.")
mainNPC:setUseMessage("Fass mich nich an!", "Hands off!")
mainNPC:setConfusedMessage("#me schaut dich verwirrt an.", "#me looks at you confused.")
mainNPC:setEquipment(1, 356)
mainNPC:setEquipment(3, 0)
mainNPC:setEquipment(11, 0)
mainNPC:setEquipment(5, 72)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 0)
mainNPC:setEquipment(9, 824)
mainNPC:setEquipment(10, 0)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
