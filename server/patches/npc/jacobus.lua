local consequence_trade = require("npc.base.consequence.trade")
local condition_language = require("npc.base.condition.language")
local basic = require("npc.base.basic")
local trade = require("npc.base.trade")
local talk = require("npc.base.talk")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(1)
local talkingNPC = talk(mainNPC)
local tradingNPC = trade(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is the jeweller Jacobus. Keywords: Hello, buy, sell, trade, jewellery."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist der Juwellier Jacobus. Schlüsselwörter: Hallo, kaufe, verkaufe, Handel, Juwelen."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("I sell any kind of jewellery.")
talkEntry:addResponse("Things made of gold, of copper, of gems... What do you need?")
talkEntry:addConsequence(consequence_trade(tradingNPC))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Ich handele mit allerlei Juwelen.")
talkEntry:addResponse("Dinge aus Gold, aus Kupfer, aus Edelsteinen... was braucht ihr?")
talkEntry:addConsequence(consequence_trade(tradingNPC))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("Welcome to Cadomyr.")
talkEntry:addResponse("Be greeted.")
talkEntry:addResponse("Hello, do you need a ruby necklace?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Willkommen in Cadomyr.")
talkEntry:addResponse("Seid gegrüßt.")
talkEntry:addResponse("Hallo, braucht ihr eine Rubinkette?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Welcome to Cadomyr.")
talkEntry:addResponse("Be greeted.")
talkEntry:addResponse("Hello, do you need a ruby necklace?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Willkommen in Cadomyr.")
talkEntry:addResponse("Seid gegrüßt.")
talkEntry:addResponse("Hallo, braucht ihr eine Rubinkette?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("I hope you'll recommend my goods.")
talkEntry:addResponse("Good bye.")
talkEntry:addResponse("Have a nice day.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Ich hoffe, ihr werdet meine Waren weiterempfehlen.")
talkEntry:addResponse("Auf wiedersehen.")
talkEntry:addResponse("Einen schönen Tag noch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("I hope you'll recommend my goods.")
talkEntry:addResponse("Good bye.")
talkEntry:addResponse("Have a nice day.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Ich hoffe, ihr werdet meine Waren weiterempfehlen.")
talkEntry:addResponse("Auf wiedersehen.")
talkEntry:addResponse("Einen schönen Tag noch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("I feel like selling gems.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addResponse("Mir ist danach, Edelsteine zu verkaufen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("I am Jacobus, the jeweller.")
talkEntry:addResponse("Jacobus.")
talkEntry:addResponse("Jacobus, so do not call me Jack.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("Ich bin Jacobus der Juwelier.")
talkEntry:addResponse("Jacobus.")
talkEntry:addResponse("Jacobus. Und nennt mich nicht Jack.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I don't have a quest for you, sorry.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich habe keinen Auftrag für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I don't have a quest for you, sorry.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich habe keinen Auftrag für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addResponse("I am a jeweller. I also search for gems, but it is a hard job.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addResponse("Ich bin ein Juwellier, manchmal suche ich auch nach Edelsteinen. Aber das ist ein Knochenjob.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("I am a jeweller. I also search for gems, but it is a hard job.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Ich bin ein Juwellier, manchmal suche ich auch nach Edelsteinen. Aber das ist ein Knochenjob.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Gobaith was said to be a gem in the ocean. Now it is... a gem under the water.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Man sagt, Gobaith war ein Edelstein im Ozean. Nun ist es ein... Edelstein im Wasser.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("my name")
talkEntry:addResponse("Good to know, do you want a ring?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("mein Name")
talkEntry:addResponse("Gut zu wissen, benötigt ihr einen Ring?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Thief")
talkEntry:addResponse("Thieves are a horrible scourge of society.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Dieb")
talkEntry:addResponse("Diebe sind eine schreckliche Plage.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gold")
talkEntry:addResponse("Gold is a fascinating material. Although it is soft, it still does not corrode in a thousand years.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gold")
talkEntry:addResponse("Gold ist ein faszinierendes Material. Es ist zwar recht weich, aber es verrottet in tausend Jahren nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("jewel")
talkEntry:addResponse("My jewels are the best you can get within a thousand miles and I have never travelled beyond that.")
talkEntry:addResponse("I can sell you any kind of jewels, and if you have any gems, I'll gladly purchase them.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Juwel")
talkEntry:addResponse("Meine Juwelen sind die besten, die man innerhalb von tausend Meilen bekommen kann. Und ich war noch nie weiter weg.")
talkEntry:addResponse("Ich kann euch allerlei Juwelen anbieten. Wenn ihr Edelsteine habt, so würde ich sie gerne erwerben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("trader")
talkEntry:addTrigger("merchant")
talkEntry:addTrigger("collegue")
talkEntry:addTrigger("vendor")
talkEntry:addTrigger("market")
talkEntry:addResponse("Fish, glass goods, swords - everything you desire you can find here on the marketplace.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("händler")
talkEntry:addTrigger("kollege")
talkEntry:addTrigger("höker")
talkEntry:addTrigger("markt")
talkEntry:addResponse("Fische, Glaswaren, Schwerter - alles was das Herz begehrt kann man hier auf dem Marktplatz finden.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("archmage")
talkEntry:addResponse("The Archmage hides behind his books instead of ruling Runewick. I am so glad we have our Queen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Der Erzmagier versteckt sich lieber hinter seinen Büchern als Runewick zu führen. Ich bin so glücklich, dass wir unsere Königin haben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("The Archmage hides behind his books instead of ruling Runewick. I am so glad we have our Queen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Der Erzmagier versteckt sich lieber hinter seinen Büchern als Runewick zu führen. Ich bin so glücklich, dass wir unsere Königin haben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Runewick is far to the east, you have to walk through a dense forest.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Runewick ist weit im Osten. Ihr müßt durch einen tiefen Wald gehen, um dorthin zu gelangen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("I once had to craft a ring for the Don. It was such a horrifying experience to give the ring to this filthy man.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Ich musste einst einen Ring für den Don fertigen. Es war ein schreckliches Erlebnis, den Ring diesem dreckigem Kerl zu überlassen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Galmair is far to the north, but better you don't go there with too much money.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Galmair ist weit im Norden, aber nehmt besser nicht zuviel Geld mit, wenn ihr dorthin geht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Queen")
talkEntry:addResponse("All of us like Queen Rosaline, she rules Cadomyr like nobody else could.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Königin")
talkEntry:addResponse("Jederman liebt die Königin Rosaline, sie regiert Cadomyr wie es niemand sonst könnte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("All of us like Queen Rosaline, she rules Cadomyr like nobody else could.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Jederman liebt die Königin Rosaline, sie regiert Cadomyr wie es niemand sonst könnte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("This is our home, Cadomyr. Do you smell the sea? Do you feel the honour?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Dies ist unsere Heimat: Cadomyr. Riecht ihr die See? Spürt ihr das Ehrgefühl?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("albar")
talkEntry:addResponse("I hear only the best about Albar, but I have never even been there.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("albar")
talkEntry:addResponse("Ich höre nur das Beste über Albar, aber ich war noch nie selbst dort.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("gynk")
talkEntry:addTrigger("gync")
talkEntry:addResponse("Something is wrong in Gynk. If they only steal from each other, how do you imagine they replace broken things?")
talkEntry:addResponse("Gynk is a filthy place.")
talkEntry:addResponse("If you go to Gynk, well, do not expect to return with any gold.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("gync")
talkEntry:addTrigger("gynk")
talkEntry:addResponse("Irgendwas ist doch falsch in Gynk. Wenn die nur voneinander stehlen, wie ersetzen sie dann Zerbrochenes?")
talkEntry:addResponse("Gynk ist ein dreckiger Ort.")
talkEntry:addResponse("Wenn ihr nach Gynk geht, nun, denkt nicht, ihr kommt mit Gold zurück.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("salkama")
talkEntry:addResponse("I hear only bad things about Salkamar, but I have never been there.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("salkama")
talkEntry:addResponse("Ich höre nur schlimme Dinge über Salkamar, aber ich war noch nie selbst dort.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("Why don't you ask me about Zhambra? Might result in a special offer for you!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Warum fragt ihr mich nicht nach Zhambra? Ich hätte da vielleicht ein Sonderangebot für euch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("Oh, Ronagan! Well, he may just like gems as much as I do and he guarantees that people will buy new ones... still, I cannot honour a God who promotes crimes.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("Oh, Ronagan! Nun, er mag Edelsteine genauso gerne wie ich und er sorgt dafür, dass die Leute auch immerwieder neue kaufen... dennoch kann ich keinem Gott huldigen, der Diebstahl fördert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Zhambra")
talkEntry:addResponse("Zhambra is the God of friendship, and what token is more suitable to seal a friendship than a ring. I have a special offer for you...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Zhambra")
talkEntry:addResponse("Zhambra ist der Gott der Freundschaft. Und was ist besser geeignet, um Freundschaft zu besiegeln, als ein Ring? Ich hätte da gerade einen im Angebot...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addResponse("I cannot tell you any interesting stories, sorry.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Ich habe keine interessanten Geschichten zu erzählen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Jacobus")
talkEntry:addResponse("Jacobus' jewellery is the best from here to Salkamar!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Jacobus")
talkEntry:addResponse("Die Geschmeide von Jakobus sind die besten von hier bis Salkamar!")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("Feinste Juwelen!", "Finest jewellery!")
talkingNPC:addCycleText("Habt ihr eure Frau enttäuscht? Kauft ihr einen Diamantring!", "Have you upset your wife? Buy her a diamond ring!")
talkingNPC:addCycleText("Diamanten sind der beste Freund des Mannes.", "Diamonds are a man's best friend.")
talkingNPC:addCycleText("Funkelnde Edelsteine im Angebot!", "Sparkling gem stones on special offer!")
talkingNPC:addCycleText("Goldener Schmuck, genau das Richtige für einen Damenhals.", "Gold jewellery, just the right thing for a maiden's neck.")
talkingNPC:addCycleText("Braucht ihr ein besonderes Geschenk? Eine Kette soll es sein!", "Need a special gift? A necklace it should be!")
talkingNPC:addCycleText("Ein Ring sie zu finden, ein Ring sie ins Licht zu treiben...", "One Ring to bring them all and in the light bind them.")
talkingNPC:addCycleText("Ein Edelstein hält ein Leben lang.", "A gemstone lasts for a lifetime.")
talkingNPC:addCycleText("Goldringe mit Inschriften und magischen Kräften für wenige Silberstücke!", "Gold rings with inscriptions and magical powers for a few silver coins!")
talkingNPC:addCycleText("Habt ihr Edelsteine?", "Do you have gemstones?")
tradingNPC:addItem(trade.tradeNPCItem(2140,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(122,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(222,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3535,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3554,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3558,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3526,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3528,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(79,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3539,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3541,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(67,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3536,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3538,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(82,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3559,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3543,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(71,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3546,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3548,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(465,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(225,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3556,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3557,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(399,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(92,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(393,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(235,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3553,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3555,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3527,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3529,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(277,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3540,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3560,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(68,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3537,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3561,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(278,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3542,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3544,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(279,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3547,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3545,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(223,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1840,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1001,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1858,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(224,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2647,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(311,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(450,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(447,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(446,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(197,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(46,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(284,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(283,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(45,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4095,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4800,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4793,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4459,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4591,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4517,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4549,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4797,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4790,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4432,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4576,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4493,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4552,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4801,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4794,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4468,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4581,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4509,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4550,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4799,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4792,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4450,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4586,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4501,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4551,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(222,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3535,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3554,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3558,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3526,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3528,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(79,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3539,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3541,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(67,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3536,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3538,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(82,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3559,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3543,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(71,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3546,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3548,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(62,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3549,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3551,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(83,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3530,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3532,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(334,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3534,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(465,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(225,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3556,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3557,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(399,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(92,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(393,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(336,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(235,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3553,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3555,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3527,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3529,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(277,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3540,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3560,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(68,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3537,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3561,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(278,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3542,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3544,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(279,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3547,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3545,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(281,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3550,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3552,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(282,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3531,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(3533,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(280,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2559,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(223,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1840,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1001,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(1858,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(224,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(2647,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(311,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(450,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(447,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(446,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(449,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(448,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(451,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(452,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(197,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(46,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(284,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(283,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(45,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(198,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(285,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4095,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4601,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4602,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4603,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4604,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4609,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4610,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4611,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4612,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4613,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4614,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4615,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4616,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4800,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4793,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4459,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4591,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4517,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4549,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4797,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4790,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4432,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4576,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4493,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4552,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4801,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4794,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4468,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4581,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4509,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4550,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4799,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4792,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4450,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4586,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4501,"buySecondary"))
tradingNPC:addItem(trade.tradeNPCItem(4551,"buySecondary"))
tradingNPC:addNotEnoughMoneyMsg("Das ist nicht eure Kragenweite.", "That's out of your league.")
tradingNPC:addDialogClosedMsg("Ich bin zu Dank verpflichtet.", "I owe you gratitude.")
tradingNPC:addDialogClosedNoTradeMsg("Geht mit den Göttern.", "Go with the gods.")
tradingNPC:addWrongItemMsg("Daran habe ich keinen Bedarf.", "I do not desire this.")
mainNPC:addLanguage(0)
mainNPC:addLanguage(1)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Dieser NPC ist der Juwellier Jacobus.", "This NPC is the jeweller Jacobus.")
mainNPC:setUseMessage("Fass mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut dich verwirrt an.", "#me looks at you confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 814)
mainNPC:setEquipment(11, 195)
mainNPC:setEquipment(5, 0)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 2295)
mainNPC:setEquipment(9, 821)
mainNPC:setEquipment(10, 771)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
