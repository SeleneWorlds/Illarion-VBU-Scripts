local consequence_item = require("npc.base.consequence.item")
local condition_item = require("npc.base.condition.item")
local consequence_quest = require("npc.base.consequence.quest")
local condition_skill = require("npc.base.condition.skill")
local condition_language = require("npc.base.condition.language")
local condition_town = require("npc.base.condition.town")
local talk = require("npc.base.talk")
local consequence_skill = require("npc.base.consequence.skill")
local consequence_money = require("npc.base.consequence.money")
local condition_quest = require("npc.base.condition.quest")
local consequence_inform = require("npc.base.consequence.inform")
local consequence_deleteitem = require("npc.base.consequence.deleteitem")
local basic = require("npc.base.basic")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(3)
local talkingNPC = talk(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is the fisherwoman Zerarisa. Keywords: Hello, quest, rod, fisher."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist die Fischerin Zerarisa. Schlüsselwörter: Hallo, Quest, Angelrute, Fischerin."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("Greetingsss to you.")
talkEntry:addResponse("Yess, greetingss.")
talkEntry:addResponse("Blessingss of the Mother upon you, greetingss")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Grüßsse dir.")
talkEntry:addResponse("Ja, Grüßsse.")
talkEntry:addResponse("Grüßsse.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Greetingsss to you.")
talkEntry:addResponse("Yess, greetingss.")
talkEntry:addResponse("Greetsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Grüßsse dir.")
talkEntry:addResponse("Ja, Grüßsse.")
talkEntry:addResponse("Grüßsse.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("May the rainsss be heavy and frequent.")
talkEntry:addResponse("May the ssea-Mother watch your path.")
talkEntry:addResponse("Farewell, zsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Mögenss Regen häufig und ssstark sssein.")
talkEntry:addResponse("Mögenss die Meermutter dein Pfad leitenss.")
talkEntry:addResponse("Abschied, zsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addResponse("Goodbye")
talkEntry:addResponse("Farewell")
talkEntry:addResponse("#me nods slowly: 'Goodbye'.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addResponse("Gut wiedersehensss.")
talkEntry:addResponse("Abschied.")
talkEntry:addResponse("#me nickt langsam: 'Gut wiedersehensss'.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("Zerarisa iss fine, yess, but her claw hurtsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addResponse("Zerarisa issst gut, ja, aber Krallensss ssschmerzensss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("I be Zerarisa, would you like to do a job for me?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("Ich sindss Zerarisa, machenss du Aufgabe für michss?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("I am not a trader.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Ich bin keine Marktfrau.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addTrigger("rod")
talkEntry:addResponse("You'll need a fissshing rod, you can get one from Advari.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addTrigger("rute")
talkEntry:addTrigger("angel")
talkEntry:addResponse("Brauchenss Angelrute, gehenss Advari.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("rod")
talkEntry:addResponse("Broke your rod? Assk a carpenter for a new one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("rute")
talkEntry:addTrigger("angel")
talkEntry:addResponse("Habenss gebrochen die Rute? Brauchenss Ssschreiner.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot I"))
talkEntry:addConsequence(consequence_item(72, 1, 333, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 1))
talkEntry:addResponse("Zerarisa hass hurt her claw. Take thiss rod, if you could collect ten trout for me, I give you coinsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle I"))
talkEntry:addConsequence(consequence_item(72, 1, 333, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 1))
talkEntry:addResponse("Sschwester Zerarisa habenss verletzt Pfote. Nehmens Rute, fangenss zssehn Forelle, kriegenss Münzssen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot I"))
talkEntry:addConsequence(consequence_item(72, 1, 333, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 1))
talkEntry:addResponse("Zerarisa hass hurt her claw. Take thiss rod, if you could collect ten trout for me, I give you coinsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle I"))
talkEntry:addConsequence(consequence_item(72, 1, 333, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 1))
talkEntry:addResponse("Sschwester Zerarisa habenss verletzt Pfote, fangenss zssehn Forelle, kriegenss Münzssen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot I"))
talkEntry:addConsequence(consequence_item(72, 1, 333, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 1))
talkEntry:addResponse("Zerarisa hass hurt her claw. Take thiss rod, if you could collect ten trout for me, I give you coinsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle I"))
talkEntry:addConsequence(consequence_item(72, 1, 333, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 1))
talkEntry:addResponse("Sschwester Zerarisa habenss verletzt Pfote, fangenss zssehn Forelle, kriegenss Münzssen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot I"))
talkEntry:addConsequence(consequence_item(72, 1, 333, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 1))
talkEntry:addResponse("Zerarisa hass hurt her claw. Take thiss rod, if you could collect ten trout for me, I give you coinsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 0))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle I"))
talkEntry:addConsequence(consequence_item(72, 1, 333, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 1))
talkEntry:addResponse("Sschwester Zerarisa habenss verletzt Pfote, fangenss zssehn Forelle, kriegenss Münzssen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Did you get the ten troutss for me yet?")
talkEntry:addResponse("Zerarisa iss sstill waiting for the troutss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", "<", 10, nil))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Habenss zssehn Forellen? Nein?")
talkEntry:addResponse("Zerarisa wartenss auf Forellen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", "<", 10, nil))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Did you get the ten troutss for me yet?")
talkEntry:addResponse("Zerarisa iss sstill waiting for the troutss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", "<", 10, nil))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Habenss zssehn Forellen? Nein?")
talkEntry:addResponse("Zerarisa wartenss auf Forellen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins and your fishing skill increases. "))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 2))
talkEntry:addResponse("Zerarisa thankss you for the troutss, here, take ssome coinss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 2))
talkEntry:addResponse("Zerarisa thankss you for the troutss, here, take ssome coinss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 2))
talkEntry:addResponse("Zerarisa dankenss für Forellen, nehmenss Silberss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 2))
talkEntry:addResponse("Zerarisa dankenss für Forellen, nehmenss Silberss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 2))
talkEntry:addResponse("Zerarisa thankss you for the troutss, here, take ssome coinss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 2))
talkEntry:addResponse("Zerarisa thankss you for the troutss, here, take ssome coinss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 2))
talkEntry:addResponse("Zerarisa dankenss für Forellen, nehmenss Silberss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 1))
talkEntry:addCondition(condition_item(73, "all", ">", 9, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(73, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 2))
talkEntry:addResponse("Zerarisa dankenss für Forellen, nehmenss Silberss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 2))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot II"))
talkEntry:addConsequence(consequence_quest(71, "=", 3))
talkEntry:addResponse("Thankss for the troutss again, if you want you can catch twenty ssalmonss for me now.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle II"))
talkEntry:addConsequence(consequence_quest(71, "=", 3))
talkEntry:addResponse("Dankss für Forellen nochmalss, wollenss fangen zsswanzig Lachss nun für Zerarisa?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot II"))
talkEntry:addConsequence(consequence_quest(71, "=", 3))
talkEntry:addResponse("Thankss for the troutss again, if you want you can catch twenty ssalmonss for me now.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle II"))
talkEntry:addConsequence(consequence_quest(71, "=", 3))
talkEntry:addResponse("Dankss für Forellen nochmalss, wollenss fangen zsswanzig Lachss nun für Zerarisa?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Twenty ssalmonss for Zerarisa, and you get coinss.")
talkEntry:addResponse("Zerarisa sstill waitss for her ssalmonss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", "<", 20, nil))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Zsswanzigs Lachsess, kriegenss Münzssenss.")
talkEntry:addResponse("Zerarisa immernoch wartenss für Lachsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", "<", 20, nil))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Twenty ssalmonss for Zerarisa, and you get coinss.")
talkEntry:addResponse("Zerarisa sstill waitss for her ssalmonss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", "<", 20, nil))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Zsswanzigs Lachsess, kriegenss Münzssenss.")
talkEntry:addResponse("Zerarisa immernoch wartenss für Lachsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(355, 20, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 4))
talkEntry:addResponse("Thankss for the ssalmonss, Zerarisa hass coinss for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(355, 20, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 4))
talkEntry:addResponse("Thankss for the ssalmonss, Zerarisa hass coinss for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 19, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(355, 20, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 4))
talkEntry:addResponse("Dankss für Lachsss, Zerarisa habenss Münzssen für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 19, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(355, 20, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 4))
talkEntry:addResponse("Dankss für Lachsss, Zerarisa habenss Münzssen für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(355, 20, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 4))
talkEntry:addResponse("Thankss for the ssalmonss, Zerarisa hass coinss for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(355, 20, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 4))
talkEntry:addResponse("Thankss for the ssalmonss, Zerarisa hass coinss for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 19, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(355, 20, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 4))
talkEntry:addResponse("Dankss für Lachsss, Zerarisa habenss Münzssen für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 3))
talkEntry:addCondition(condition_item(355, "all", ">", 19, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(355, 20, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 4))
talkEntry:addResponse("Dankss für Lachsss, Zerarisa habenss Münzssen für dich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 4))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot III"))
talkEntry:addConsequence(consequence_quest(71, "=", 5))
talkEntry:addResponse("Zerarisa needss five roasst trout now, you can cookss them at a ssmoke oven. You'll get coinsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 4))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle III"))
talkEntry:addConsequence(consequence_quest(71, "=", 5))
talkEntry:addResponse("Zerarisa brauchenss fünf geräuchert Forellenss nun, könnenss räuchern in Ofenss. Kriegensss Münzssenss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 4))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot III"))
talkEntry:addConsequence(consequence_quest(71, "=", 5))
talkEntry:addResponse("Zerarisa needss five roasst trout now, you can cookss them at a ssmoke oven. You'll get coinsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 4))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle III"))
talkEntry:addConsequence(consequence_quest(71, "=", 5))
talkEntry:addResponse("Zerarisa brauchenss fünf geräuchert Forellenss nun, könnenss räuchern in Ofenss. Kriegensss Münzssenss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Have you the five roasst trout? Catch five trout and smoke them at an oven.")
talkEntry:addResponse("Zerarisa ssstill waitss for the roasst trout, sshe wantss five.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", "<", 5, nil))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Habenss fünf geräuchertss Forellenss? Fangenss und räuchernss in Räuchehütte.")
talkEntry:addResponse("Zerarisa wartenss auf fünf geräuchertss Forellenss, wollenss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", "<", 5, nil))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Have you the five roasst trout? Catch five trout and cook them at an oven.")
talkEntry:addResponse("Zerarisa ssstill waitss for the roasst trout, sshe wantss five.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", "<", 5, nil))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addTrigger("job")
talkEntry:addResponse("Habenss fünf geräuchertss Forellenss? Fangenss und räuchernss in Räuchehütte.")
talkEntry:addResponse("Zerarisa wartenss auf fünf geräuchertss Forellenss, wollenss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(455, 5, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 6))
talkEntry:addResponse("Zerarisa thanksss you for the troutss, here...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(455, 5, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 6))
talkEntry:addResponse("Zerarisa thanksss you for the troutss, here...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(455, 5, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 6))
talkEntry:addResponse("Zerarisa dankenss für Forellenss, nehmenss...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(455, 5, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 6))
talkEntry:addResponse("Zerarisa dankenss für Forellenss, nehmenss...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(455, 5, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 6))
talkEntry:addResponse("Zerarisa thanksss you for the troutss, here...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(455, 5, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 6))
talkEntry:addResponse("Zerarisa thanksss you for the troutss, here...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", ">", 4, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(455, 5, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 6))
talkEntry:addResponse("Zerarisa dankenss für Forellenss, nehmenss...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 5))
talkEntry:addCondition(condition_item(455, "all", ">", 4, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(455, 5, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 6))
talkEntry:addResponse("Zerarisa dankenss für Forellenss, nehmenss...")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 6))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot IV"))
talkEntry:addConsequence(consequence_quest(71, "=", 7))
talkEntry:addResponse("Do Zerarisa a favour, go findss Henry, he'ss a butcher in the Dewy Sswampss, getss me ten piecess of tanned leather from him.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 6))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle IV"))
talkEntry:addConsequence(consequence_quest(71, "=", 7))
talkEntry:addResponse("Tuenss Zerarisa Gefallen, findenss Henry, isst Sschlachter in Morgentausumpfss, bringenss zehn gegerbte Lederhäute von ihmss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 6))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Da Fishin Spot IV"))
talkEntry:addConsequence(consequence_quest(71, "=", 7))
talkEntry:addResponse("Do Zerarisa a favour, go findss Henryss, he'ss a butcher in the Dewy Swampss, getss me ten piecess of tanned leather from him.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 6))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Die Angelstelle IV"))
talkEntry:addConsequence(consequence_quest(71, "=", 7))
talkEntry:addResponse("Tuenss Zerarisa Gefallen, findenss Henry, isst Sschlachter in Morgentausumpfss, bringenss zehn gegerbte Lederhäute von ihmss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("You findss Henry in Dewy Swampss? He owess me ten piecess of tanned leather.")
talkEntry:addResponse("Zerarisa sstill waitss for the tanned leather from Henry in Dewy Swampss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", "<", 10, nil))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Habenss sschon gefundenss Henry in Morgentausumpfss? Schuldenss zehn Lederhäute.")
talkEntry:addResponse("Zerarisa wartenss noch auf gegerbtes Leder von Henry in Morgentaussumpf.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", "<", 10, nil))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("You findss Henry in Dewy Swampss? He owess me ten piecess of tanned leather.")
talkEntry:addResponse("Zerarisa sstill waitss for the tanned leather from Henry in Dewy Swampss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", "<", 10, nil))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Habenss sschon gefundenss Henry in Morgentausumpfss? Schuldenss zehn Lederhäute.")
talkEntry:addResponse("Zerarisa wartenss noch auf gegerbtes Leder von Henry in Morgentaussumpf.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 8))
talkEntry:addResponse("Zerarisa thanksss you, here'ss money for your troubless.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 8))
talkEntry:addResponse("Zerarisa thanksss you, here'ss money for your troubless.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 8))
talkEntry:addResponse("Zerarisa dankenss dir, hier sindsss Geld für Ärgerss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 8))
talkEntry:addResponse("Zerarisa dankenss dir, hier sindsss Geld für Ärgerss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins and your fishing skill increases."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 8))
talkEntry:addResponse("Zerarisa thanksss you, here'ss money for your troubless.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 8))
talkEntry:addResponse("Zerarisa thanksss you, here'ss money for your troubless.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.fishing, "<", 90))
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke und deine Fischereifertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.fishing, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 8))
talkEntry:addResponse("Zerarisa dankenss dir, hier sindsss Geld für Ärgerss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 7))
talkEntry:addCondition(condition_item(2547, "all", ">", 9, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(2547, 10, nil))
talkEntry:addConsequence(consequence_quest(71, "=", 8))
talkEntry:addResponse("Zerarisa dankenss dir, hier sindsss Geld für Ärgerss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 8))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Zerarisa hass no more jobss for you, sshe hass enough fissh.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 8))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Zerarisa habenss nichts mehr Aufgabe für dich, habenss genug Fissch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 8))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Zerarisa hass enough fissh, no more jobss for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(71, "=", 8))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Zerarisa habenss nichts mehr Aufgabe für dich, habenss genug Fissch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Nana")
talkEntry:addResponse("Yesss, the halfling... sshe'll want ssalmonss from me, but I don't have enough for her too. Could you catch ssome yourssself and give them to her?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Nana")
talkEntry:addResponse("Ja, Halblingsss... Wollenss Lachsss, aber habensss nicht genug für sssie. Fangenss sselbsst und gebensss ihr?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Winterbutter")
talkEntry:addResponse("Yesss, the halfling... sshe'll want ssalmonss from me, but I don't have enough for her too. Could you catch ssome yourssself and give them to her?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Winterbutter")
talkEntry:addResponse("Ja, Halblingsss... Wollenss Lachsss, aber habensss nicht genug für sssie. Fangenss sselbsst und gebensss ihr?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addResponse("I catch fisssh and ssell them to landlingss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addResponse("Ich fangenss Fischss und verkaufensss Landlinge.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("I catch fisssh and ssell them to landlingss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Ich fangenss Fischss und verkaufensss Landlinge.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Zerarisa wished ssshe could dive down to forsssaken issslands!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Zerarisa wünschensss dasss könnensss tauchen tief zssu verwunsschen Inselsss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("my name")
talkEntry:addResponse("We all equalsss for the mother.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("mein Name")
talkEntry:addResponse("Wir sssinds alle gleich in Angesichtsss der Mutter.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("fisher")
talkEntry:addResponse("I catch fisssh and ssell them to landlingss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("fischer")
talkEntry:addResponse("Ich fangenss Fischss und verkaufensss Landlinge.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("archmage")
talkEntry:addResponse("Wizard be mean, make thingsss not undersstandss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Zauberer machenss Dingenss nicht verstehensss, gemein!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Wizard be mean, make thingsss not undersstandss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Zauberer machenss Dingenss nicht verstehensss, gemein!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Witchess be, wizardsss be. Runewick evilss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Hexenss sindss, Magier sindss. Runewick bössse!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Owesss Zerarisa something, Zerarise owess something. Handsss wash each othersss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Ssschuldet Zerarisa wasss, Zerarisa schuldetss was. Eine Hand wässscht die anderess!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Zss, Zerarisa living here. Paying good, paying in time. Galmair goodss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Zss, Zerarisa lebenss hier. Zahlenss gut, zahlenss pünktlich. Galmair gutss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Queen")
talkEntry:addResponse("Queen jussst, queen pretty, isss not ssshe?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Königin")
talkEntry:addResponse("Königin gerecht, Königin hübschss, nicht wahr?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Queen jussst, queen pretty, isss not ssshe?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Königin gerecht, Königin hübschss, nicht wahr?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Queen jussst, queen pretty, isss not ssshe?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Königin gerecht, Königin hübschss, nicht wahr?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("albar")
talkEntry:addResponse("Albarss far awaysss along coastss. Never ssswum there Zerarisa.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("albar")
talkEntry:addResponse("Albarsss weit weg entlang Küssste. Niemalsss schwommen dort Zerarisa.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("gynk")
talkEntry:addTrigger("gync")
talkEntry:addResponse("Zss! Gynk dangerousss, robss, sssteals!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("gync")
talkEntry:addTrigger("gynk")
talkEntry:addResponse("Zss! Gynk gefährlichsss, raubenss, stehlenss!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("salkama")
talkEntry:addResponse("Sssalkamar have funny name for realm, no?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("salkama")
talkEntry:addResponse("Sssalkamar habenss witzig Namen für Reichsss, nein?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("Have faith only in mothersss, Zerarisa! Hail Zshhel-pheey-arrr!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Habenss nur Glaube in Mutter, Zerarisa! Heil Zshhel-pheey-arrr!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Tanora")
talkEntry:addTrigger("Zelphia")
talkEntry:addResponse("Mothersss caresss, mothersss providesss. What wantss more?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tanora")
talkEntry:addTrigger("Zelphia")
talkEntry:addResponse("Mutter kümmertss, Mutter füttertss. Wasss wollenss mehr?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("what sell")
talkEntry:addTrigger("what buy")
talkEntry:addTrigger("list wares")
talkEntry:addTrigger("price of")
talkEntry:addResponse("I ssell nothingss, I am not a merchant.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("was verkauf")
talkEntry:addTrigger("was kauf")
talkEntry:addTrigger("warenliste")
talkEntry:addTrigger("preis von")
talkEntry:addResponse("Ich kaufenss nichtss, nichtss bin Handelsssfrau.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addResponse("If you're interessted in a job, assk.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Habenss Lust auf Aufgabe, fragensss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Zerarisa")
talkEntry:addResponse("Zerarisa have name, have claw, have tail! And you?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Zerarisa")
talkEntry:addResponse("Zerarisa habenss Namensss, habenss Klauensss, habensss Ssschwanzss. Und du?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Dewy")
talkEntry:addTrigger("swamps")
talkEntry:addResponse("Zss, Dewy Sswampss be Runewick landss. Go far, north, easst.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Morgentau")
talkEntry:addTrigger("Sumpf")
talkEntry:addResponse("Zss, Morgentaussumpf seienss Runewickland. Gehenss weit, Nord, Osst.")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("#me kratzt sich an ihrer schlaff runterhängenden Kralle.", "#me lazily scratches her limp-looking claw.")
talkingNPC:addCycleText("#me setzt sich hin und schaut gedankenverloren drein.", "#me sits down on the ground and looks thoughtful.")
talkingNPC:addCycleText("#me stinkt nach Fisch.", "#me smells strongly of fish.")
talkingNPC:addCycleText("#me bleckt die Zähne während sie hungrig auf's Wasser schaut.", "#me bares her teeth as she looks hungrily towards the water.")
talkingNPC:addCycleText("#me pult Dreck unter ihren Krallen hervor.", "#me cleans her claws.")
talkingNPC:addCycleText("Zsss.", "Zsss.")
talkingNPC:addCycleText("Zsss!", "Zsss!")
talkingNPC:addCycleText("Zsss?", "Zsss?")
talkingNPC:addCycleText("#me zischelt.", "#me hisses.")
mainNPC:addLanguage(0)
mainNPC:addLanguage(4)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Dieser NPC ist die Fischerin Zerarisa.", "This NPC is the fisherwoman Zerarisa.")
mainNPC:setUseMessage("Fassens mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut dich verwirrt an.", "#me looks at you confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 181)
mainNPC:setEquipment(11, 195)
mainNPC:setEquipment(5, 72)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 0)
mainNPC:setEquipment(9, 367)
mainNPC:setEquipment(10, 369)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
