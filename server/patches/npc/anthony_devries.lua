local condition_item = require("npc.base.condition.item")
local consequence_quest = require("npc.base.consequence.quest")
local condition_language = require("npc.base.condition.language")
local consequence_deleteitem = require("npc.base.consequence.deleteitem")
local basic = require("npc.base.basic")
local condition_town = require("npc.base.condition.town")
local condition_chance = require("npc.base.condition.chance")
local talk = require("npc.base.talk")
local consequence_money = require("npc.base.consequence.money")
local condition_quest = require("npc.base.condition.quest")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(3)
local talkingNPC = talk(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is Anthony Devries the long-distance merchant. Keywords: Hello, merchant, order, Galmair."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist Anthony Devries der Fernhändler. Schlüsselwörter: Hallo, Händler, Auftrag, Galmair."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("I smell business. Good business. Let's not talk too much as both of us could spend the time making money.")
talkEntry:addResponse("I trade with many different countries. Interesting? Well, yes. But I do it for the coin, not for joy.")
talkEntry:addResponse("I am not good with persons, sorry. If we met before, hello again.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Ich rieche ein gutes Geschäft. Lass uns nicht den Tag damit vergeuden, über Belanglosigkeiten zu reden. Wir wollen doch schließlich Geld verdienen, oder?")
talkEntry:addResponse("Ich handle mit aller Herren Länder. Ob das interesant ist? Klar, aber ich mache es des Geldes wegen, nicht zum Vergnügen.")
talkEntry:addResponse("Ich bin nicht so gut mit Gesichtern. Falls wir uns schonmal getroffen haben, dann sag ich hallo.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("I smell business. Good business. Let's not talk too much as both of us could spend the time making money.")
talkEntry:addResponse("I trade with many different countries. Interesting? Well, yes. But I do it for the coin, not for joy.")
talkEntry:addResponse("I am not good with persons, sorry. If we met before, hello again.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Ich rieche ein gutes Geschäft. Lass uns nicht den Tag damit vergeuden, über Belanglosigkeiten zu reden. Wir wollen doch schließlich Geld verdienen, oder?")
talkEntry:addResponse("Ich handle mit aller Herren Länder. Ob das interesant ist? Klar, aber ich mache es des Geldes wegen, nicht zum Vergnügen.")
talkEntry:addResponse("Ich bin nicht so gut mit Gesichtern. Falls wir uns schonmal getroffen haben, dann sag ich hallo.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("Well, bye.")
talkEntry:addResponse("See you.")
talkEntry:addResponse("Good deals.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Na dann.")
talkEntry:addResponse("Bis bald.")
talkEntry:addResponse("Gute Geschäfte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Well, bye.")
talkEntry:addResponse("See you.")
talkEntry:addResponse("Good deals.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Na dann.")
talkEntry:addResponse("Bis bald.")
talkEntry:addResponse("Gute Geschäfte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("Who wants to know?")
talkEntry:addResponse("Please, spare me with your small talk.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addTrigger("Wie Befind")
talkEntry:addResponse("Wer will das wissen?")
talkEntry:addResponse("Bitte, lass mich mit deinem Gewäsch in Frieden.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("I am Anthony Devries.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("Ich bin Anthony Devries.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("Ask me for an order.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Frag mich besser nach einem Auftrag.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Greet your witch queen, will you? I only deal with Galmairians.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Grüß mir eure Hexenkönigin. Ich handle nur mit Leuten aus Galmair.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Greet your witch queen, will you? I only deal with Galmairians.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Grüß mir eure Hexenkönigin. Ich handle nur mit Leuten aus Galmair.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I don't trade books. Back to your library, Runewicki!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich habe keine Bücher im Angebot. Zurück in deine Bücherhalle, Runewicki!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addTrigger("order")
talkEntry:addResponse("I don't trade books. Back to your library, Runewicki!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich habe keine Bücher im Angebot. Zurück in deine Bücherhalle, Runewicki!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(212, "~=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I have no orders from abroad you could fulfil. Please come again later.")
talkEntry:addResponse("Pardon, no new orders yet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(212, "~=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich habe derzeit keine Aufträge aus dem Ausland, welche du erfüllen könntest. Schau doch später nochmal vorbei.")
talkEntry:addResponse("Pardon, ich habe noch keinen neuen Auftrag.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(212, "~=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I have no orders from abroad you could fulfil. Please come again later.")
talkEntry:addResponse("Pardon, no new orders yet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(212, "~=", 0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich habe derzeit keine Aufträge aus dem Ausland, welche du erfüllen könntest. Schau doch später nochmal vorbei.")
talkEntry:addResponse("Pardon, ich habe noch keinen neuen Auftrag.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.336700337))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty stones."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty stones. I'll pay two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 1))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.336700337))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig Steine."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig Steine. Ich werde dafür zwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 1))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.336700337))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty stones."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty stones. I'll pay two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 1))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.336700337))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig Steine."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig Steine. Ich werde dafür zwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 1))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 1))
talkEntry:addCondition(condition_item(1266, "all", "=>", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 200))
talkEntry:addConsequence(consequence_deleteitem(1266, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 1))
talkEntry:addCondition(condition_item(1266, "all", "=>", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zwei Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 200))
talkEntry:addConsequence(consequence_deleteitem(1266, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 1))
talkEntry:addCondition(condition_item(1266, "all", "<", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires fifty stones. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 1))
talkEntry:addCondition(condition_item(1266, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig Steine. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 1))
talkEntry:addCondition(condition_item(1266, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires fifty stones. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 1))
talkEntry:addCondition(condition_item(1266, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig Steine. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.337837838))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty piles of coal."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty piles of coal. I'll pay ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 2))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.337837838))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig Haufen Kohle."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig Haufen Kohle. Ich werde dafür zehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 2))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.337837838))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty piles of coal."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty piles of coal. I'll pay ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 2))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.337837838))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig Haufen Kohle."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig Haufen Kohle. Ich werde dafür zehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 2))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 2))
talkEntry:addCondition(condition_item(21, "all", "=>", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded ten silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(21, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 2))
talkEntry:addCondition(condition_item(21, "all", "=>", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(21, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 2))
talkEntry:addCondition(condition_item(21, "all", "<", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires fifty piles of coal. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 2))
talkEntry:addCondition(condition_item(21, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig Haufen Kohle. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 2))
talkEntry:addCondition(condition_item(21, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires fifty piles of coal. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 2))
talkEntry:addCondition(condition_item(21, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig Haufen Kohle. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.338983051))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty piles of iron ore."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty piles of iron ore. I'll pay ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 3))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.338983051))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig Haufen Eisenerz."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig Haufen Eisenerz. Ich werde dafür zehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 3))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.338983051))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty piles of iron ore."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty piles of iron ore. I'll pay ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 3))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.338983051))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig Haufen Eisenerz."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig Haufen Eisenerz. Ich werde dafür zehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 3))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 3))
talkEntry:addCondition(condition_item(22, "all", "=>", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded ten silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(22, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 3))
talkEntry:addCondition(condition_item(22, "all", "=>", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(22, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 3))
talkEntry:addCondition(condition_item(22, "all", "<", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires fifty piles of iron ore. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 3))
talkEntry:addCondition(condition_item(22, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig Haufen Eisenerz. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 3))
talkEntry:addCondition(condition_item(22, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires fifty piles of iron ore. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 3))
talkEntry:addCondition(condition_item(22, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig Haufen Eisenerz. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.340136054))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty stone blocks."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty stone blocks. I'll pay ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 4))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.340136054))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig Steinquader."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig Steinquader. Ich werde dafür zehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 4))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.340136054))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty stone blocks."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty stone blocks. I'll pay ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 4))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.340136054))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig Steinquader."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig Steinquader. Ich werde dafür zehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 4))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 4))
talkEntry:addCondition(condition_item(733, "all", "=>", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded ten silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(733, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 4))
talkEntry:addCondition(condition_item(733, "all", "=>", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(733, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 4))
talkEntry:addCondition(condition_item(733, "all", "<", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires fifty stone blocks. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 4))
talkEntry:addCondition(condition_item(733, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig Steinquader. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 4))
talkEntry:addCondition(condition_item(733, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires fifty stone blocks. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 4))
talkEntry:addCondition(condition_item(733, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig Steinquader. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.341296928))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty raw stones."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty raw stones. I'll pay ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 5))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.341296928))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig rohe Steine."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig rohe Steine. Ich werde dafür zehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 5))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.341296928))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get fifty raw stones."))
talkEntry:addResponse("A reliable client of mine has a demand for fifty raw stones. I'll pay ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 5))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.341296928))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünfzig rohe Steine."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünfzig rohe Steine. Ich werde dafür zehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 5))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 5))
talkEntry:addCondition(condition_item(735, "all", "=>", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded ten silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(735, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 5))
talkEntry:addCondition(condition_item(735, "all", "=>", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(735, 50, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 5))
talkEntry:addCondition(condition_item(735, "all", "<", 50, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires fifty raw stones. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 5))
talkEntry:addCondition(condition_item(735, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig rohe Steine. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 5))
talkEntry:addCondition(condition_item(735, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires fifty raw stones. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 5))
talkEntry:addCondition(condition_item(735, "all", "<", 50, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünfzig rohe Steine. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.342465753))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get forty iron ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for forty iron ingots. I'll pay sixteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 6))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.342465753))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe vierzig Eisenbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt vierzig Eisenbarren. Ich werde dafür sechzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 6))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.342465753))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get forty iron ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for forty iron ingots. I'll pay sixteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 6))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.342465753))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe vierzig Eisenbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt vierzig Eisenbarren. Ich werde dafür sechzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 6))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 6))
talkEntry:addCondition(condition_item(2535, "all", "=>", 40, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 1600))
talkEntry:addConsequence(consequence_deleteitem(2535, 40, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 6))
talkEntry:addCondition(condition_item(2535, "all", "=>", 40, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 1600))
talkEntry:addConsequence(consequence_deleteitem(2535, 40, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 6))
talkEntry:addCondition(condition_item(2535, "all", "<", 40, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires forty iron ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 6))
talkEntry:addCondition(condition_item(2535, "all", "<", 40, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt vierzig Eisenbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 6))
talkEntry:addCondition(condition_item(2535, "all", "<", 40, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires forty iron ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 6))
talkEntry:addCondition(condition_item(2535, "all", "<", 40, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt vierzig Eisenbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.343642612))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get forty piles of copper ore."))
talkEntry:addResponse("A reliable client of mine has a demand for forty piles of copper ore. I'll pay sixteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 7))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.343642612))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe vierzig Haufen Kupfererz."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt vierzig Haufen Kupfererz. Ich werde dafür sechzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 7))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.343642612))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get forty piles of copper ore."))
talkEntry:addResponse("A reliable client of mine has a demand for forty piles of copper ore. I'll pay sixteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 7))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.343642612))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe vierzig Haufen Kupfererz."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt vierzig Haufen Kupfererz. Ich werde dafür sechzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 7))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 7))
talkEntry:addCondition(condition_item(2536, "all", "=>", 40, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 1600))
talkEntry:addConsequence(consequence_deleteitem(2536, 40, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 7))
talkEntry:addCondition(condition_item(2536, "all", "=>", 40, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 1600))
talkEntry:addConsequence(consequence_deleteitem(2536, 40, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 7))
talkEntry:addCondition(condition_item(2536, "all", "<", 40, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires forty piles of copper ore. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 7))
talkEntry:addCondition(condition_item(2536, "all", "<", 40, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt vierzig Haufen Kupfererz. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 7))
talkEntry:addCondition(condition_item(2536, "all", "<", 40, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires forty piles of copper ore. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 7))
talkEntry:addCondition(condition_item(2536, "all", "<", 40, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt vierzig Haufen Kupfererz. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.344827586))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty piles of silver ore."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty piles of silver ore. I'll pay eighteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 8))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.344827586))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Haufen Silbererz."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Haufen Silbererz. Ich werde dafür achtzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 8))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.344827586))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty piles of silver ore."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty piles of silver ore. I'll pay eighteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 8))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.344827586))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Haufen Silbererz."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Haufen Silbererz. Ich werde dafür achtzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 8))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 8))
talkEntry:addCondition(condition_item(1062, "all", "=>", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 1800))
talkEntry:addConsequence(consequence_deleteitem(1062, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 8))
talkEntry:addCondition(condition_item(1062, "all", "=>", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 1800))
talkEntry:addConsequence(consequence_deleteitem(1062, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 8))
talkEntry:addCondition(condition_item(1062, "all", "<", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires thirty piles of silver ore. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 8))
talkEntry:addCondition(condition_item(1062, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Haufen Silbererz. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 8))
talkEntry:addCondition(condition_item(1062, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires thirty piles of silver ore. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 8))
talkEntry:addCondition(condition_item(1062, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Haufen Silbererz. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.346020761))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty iron goblets."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty iron goblets. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 9))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.346020761))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Eisenkelche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Eisenkelche. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 9))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.346020761))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty iron goblets."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty iron goblets. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 9))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.346020761))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Eisenkelche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Eisenkelche. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 9))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 9))
talkEntry:addCondition(condition_item(223, "all", "=>", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(223, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 9))
talkEntry:addCondition(condition_item(223, "all", "=>", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(223, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 9))
talkEntry:addCondition(condition_item(223, "all", "<", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires thirty iron goblets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 9))
talkEntry:addCondition(condition_item(223, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Eisenkelche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 9))
talkEntry:addCondition(condition_item(223, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires thirty iron goblets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 9))
talkEntry:addCondition(condition_item(223, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Eisenkelche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.347222222))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty gold nuggets."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty gold nuggets. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 10))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.347222222))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Goldnuggets."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Goldnuggets. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 10))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.347222222))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty gold nuggets."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty gold nuggets. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 10))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.347222222))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Goldnuggets."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Goldnuggets. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 10))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 10))
talkEntry:addCondition(condition_item(234, "all", "=>", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(234, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 10))
talkEntry:addCondition(condition_item(234, "all", "=>", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(234, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 10))
talkEntry:addCondition(condition_item(234, "all", "<", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires thirty gold nuggets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 10))
talkEntry:addCondition(condition_item(234, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Goldnuggets. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 10))
talkEntry:addCondition(condition_item(234, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires thirty gold nuggets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 10))
talkEntry:addCondition(condition_item(234, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Goldnuggets. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.348432056))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty raw amethysts."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty raw amethysts. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 11))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.348432056))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig rohe Amethyste."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig rohe Amethyste. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 11))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.348432056))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty raw amethysts."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty raw amethysts. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 11))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.348432056))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig rohe Amethyste."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig rohe Amethyste. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 11))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 11))
talkEntry:addCondition(condition_item(251, "all", "=>", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(251, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 11))
talkEntry:addCondition(condition_item(251, "all", "=>", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(251, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 11))
talkEntry:addCondition(condition_item(251, "all", "<", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires thirty raw amethysts. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 11))
talkEntry:addCondition(condition_item(251, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig rohe Amethyste. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 11))
talkEntry:addCondition(condition_item(251, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires thirty raw amethysts. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 11))
talkEntry:addCondition(condition_item(251, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig rohe Amethyste. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.34965035))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty raw rubies."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty raw rubies. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 12))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.34965035))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig rohe Rubine."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig rohe Rubine. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 12))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.34965035))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty raw rubies."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty raw rubies. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 12))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.34965035))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig rohe Rubine."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig rohe Rubine. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 12))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 12))
talkEntry:addCondition(condition_item(255, "all", "=>", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(255, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 12))
talkEntry:addCondition(condition_item(255, "all", "=>", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(255, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 12))
talkEntry:addCondition(condition_item(255, "all", "<", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires thirty raw rubies. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 12))
talkEntry:addCondition(condition_item(255, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig rohe Rubine. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 12))
talkEntry:addCondition(condition_item(255, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires thirty raw rubies. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 12))
talkEntry:addCondition(condition_item(255, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig rohe Rubine. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.350877193))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty copper ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty copper ingots. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 13))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.350877193))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Kupferbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Kupferbarren. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 13))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.350877193))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty copper ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty copper ingots. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 13))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.350877193))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Kupferbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Kupferbarren. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 13))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 13))
talkEntry:addCondition(condition_item(2550, "all", "=>", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(2550, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 13))
talkEntry:addCondition(condition_item(2550, "all", "=>", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(2550, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 13))
talkEntry:addCondition(condition_item(2550, "all", "<", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires thirty copper ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 13))
talkEntry:addCondition(condition_item(2550, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Kupferbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 13))
talkEntry:addCondition(condition_item(2550, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires thirty copper ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 13))
talkEntry:addCondition(condition_item(2550, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Kupferbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.352112676))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty pins."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty pins. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 14))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.352112676))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Nägel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Nägel. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 14))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.352112676))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty pins."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty pins. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 14))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.352112676))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Nägel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Nägel. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 14))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 14))
talkEntry:addCondition(condition_item(2738, "all", "=>", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(2738, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 14))
talkEntry:addCondition(condition_item(2738, "all", "=>", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(2738, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 14))
talkEntry:addCondition(condition_item(2738, "all", "<", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires thirty pins. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 14))
talkEntry:addCondition(condition_item(2738, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Nägel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 14))
talkEntry:addCondition(condition_item(2738, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires thirty pins. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 14))
talkEntry:addCondition(condition_item(2738, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Nägel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.35335689))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty throwing axes."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty throwing axes. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 15))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.35335689))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Wurfbeile."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Wurfbeile. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 15))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.35335689))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get thirty throwing axes."))
talkEntry:addResponse("A reliable client of mine has a demand for thirty throwing axes. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 15))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.35335689))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe dreißig Wurfbeile."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt dreißig Wurfbeile. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 15))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 15))
talkEntry:addCondition(condition_item(2645, "all", "=>", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(2645, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 15))
talkEntry:addCondition(condition_item(2645, "all", "=>", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(2645, 30, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 15))
talkEntry:addCondition(condition_item(2645, "all", "<", 30, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires thirty throwing axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 15))
talkEntry:addCondition(condition_item(2645, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Wurfbeile. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 15))
talkEntry:addCondition(condition_item(2645, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires thirty throwing axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 15))
talkEntry:addCondition(condition_item(2645, "all", "<", 30, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt dreißig Wurfbeile. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.354609929))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty silver ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty silver ingots. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 16))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.354609929))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Silberbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Silberbarren. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 16))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.354609929))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty silver ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty silver ingots. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 16))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.354609929))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Silberbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Silberbarren. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 16))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 16))
talkEntry:addCondition(condition_item(104, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(104, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 16))
talkEntry:addCondition(condition_item(104, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(104, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 16))
talkEntry:addCondition(condition_item(104, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty silver ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 16))
talkEntry:addCondition(condition_item(104, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Silberbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 16))
talkEntry:addCondition(condition_item(104, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty silver ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 16))
talkEntry:addCondition(condition_item(104, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Silberbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.355871886))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty raw obsidians."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty raw obsidians. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 17))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.355871886))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig rohe Obsidiane."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig rohe Obsidiane. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 17))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.355871886))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty raw obsidians."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty raw obsidians. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 17))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.355871886))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig rohe Obsidiane."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig rohe Obsidiane. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 17))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 17))
talkEntry:addCondition(condition_item(252, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(252, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 17))
talkEntry:addCondition(condition_item(252, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(252, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 17))
talkEntry:addCondition(condition_item(252, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty raw obsidians. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 17))
talkEntry:addCondition(condition_item(252, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig rohe Obsidiane. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 17))
talkEntry:addCondition(condition_item(252, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty raw obsidians. Shall I give the contract yo someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 17))
talkEntry:addCondition(condition_item(252, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig rohe Obsidiane. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.357142857))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty raw sapphires."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty raw sapphires. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 18))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.357142857))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig rohe Saphire."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig rohe Saphire. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 18))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.357142857))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty raw sapphires."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty raw sapphires. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 18))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.357142857))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig rohe Saphire."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig rohe Saphire. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 18))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 18))
talkEntry:addCondition(condition_item(253, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(253, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 18))
talkEntry:addCondition(condition_item(253, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(253, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 18))
talkEntry:addCondition(condition_item(253, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty raw sapphires. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 18))
talkEntry:addCondition(condition_item(253, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig rohe Saphire. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 18))
talkEntry:addCondition(condition_item(253, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty raw sapphires. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 18))
talkEntry:addCondition(condition_item(253, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig rohe Saphire. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.358422939))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty copper goblets."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty copper goblets. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 19))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.358422939))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Kupferkelche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Kupferkelche. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 19))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.358422939))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty copper goblets."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty copper goblets. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 19))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.358422939))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Kupferkelche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Kupferkelche. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 19))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 19))
talkEntry:addCondition(condition_item(1840, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(1840, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 19))
talkEntry:addCondition(condition_item(1840, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(1840, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 19))
talkEntry:addCondition(condition_item(1840, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty copper goblets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 19))
talkEntry:addCondition(condition_item(1840, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Kupferkelche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 19))
talkEntry:addCondition(condition_item(1840, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty copper goblets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 19))
talkEntry:addCondition(condition_item(1840, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Kupferkelche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.35971223))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty iron plates."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty iron plates. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 20))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.35971223))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Eisenplatten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Eisenplatten. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 20))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.35971223))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty iron plates."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty iron plates. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 20))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.35971223))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Eisenplatten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Eisenplatten. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 20))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 20))
talkEntry:addCondition(condition_item(2537, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(2537, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 20))
talkEntry:addCondition(condition_item(2537, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(2537, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 20))
talkEntry:addCondition(condition_item(2537, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty iron plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 20))
talkEntry:addCondition(condition_item(2537, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Eisenplatten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 20))
talkEntry:addCondition(condition_item(2537, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty iron plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 20))
talkEntry:addCondition(condition_item(2537, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Eisenplatten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.36101083))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty rubies."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty rubies. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 21))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.36101083))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Rubine."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Rubine. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 21))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.36101083))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty rubies."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty rubies. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 21))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.36101083))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Rubine."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Rubine. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 21))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 21))
talkEntry:addCondition(condition_item(46, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(46, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 21))
talkEntry:addCondition(condition_item(46, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(46, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 21))
talkEntry:addCondition(condition_item(46, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty rubies. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 21))
talkEntry:addCondition(condition_item(46, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Rubine. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 21))
talkEntry:addCondition(condition_item(46, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty rubies. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 21))
talkEntry:addCondition(condition_item(46, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Rubine. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.362318841))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty amethysts."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty amethysts. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 22))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.362318841))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Amethyste."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Amethyste. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 22))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.362318841))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty amethysts."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty amethysts. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 22))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.362318841))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Amethyste."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Amethyste. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 22))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 22))
talkEntry:addCondition(condition_item(197, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(197, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 22))
talkEntry:addCondition(condition_item(197, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(197, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 22))
talkEntry:addCondition(condition_item(197, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty amethysts. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 22))
talkEntry:addCondition(condition_item(197, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Amethyste. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 22))
talkEntry:addCondition(condition_item(197, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty amethysts. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 22))
talkEntry:addCondition(condition_item(197, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Amethyste. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.363636364))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty gold ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty gold ingots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 23))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.363636364))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Goldbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Goldbarren. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 23))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.363636364))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty gold ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty gold ingots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 23))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.363636364))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Goldbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Goldbarren. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 23))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 23))
talkEntry:addCondition(condition_item(236, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(236, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 23))
talkEntry:addCondition(condition_item(236, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(236, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 23))
talkEntry:addCondition(condition_item(236, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty gold ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 23))
talkEntry:addCondition(condition_item(236, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Goldbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 23))
talkEntry:addCondition(condition_item(236, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty gold ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 23))
talkEntry:addCondition(condition_item(236, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Goldbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.364963504))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty raw emeralds."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty raw emeralds. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 24))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.364963504))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig rohe Smaragde."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig rohe Smaragde. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 24))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.364963504))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty raw emeralds."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty raw emeralds. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 24))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.364963504))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig rohe Smaragde."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig rohe Smaragde. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 24))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 24))
talkEntry:addCondition(condition_item(256, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(256, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 24))
talkEntry:addCondition(condition_item(256, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(256, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 24))
talkEntry:addCondition(condition_item(256, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty raw emeralds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 24))
talkEntry:addCondition(condition_item(256, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig rohe Smaragde. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 24))
talkEntry:addCondition(condition_item(256, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty raw emeralds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 24))
talkEntry:addCondition(condition_item(256, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig rohe Smaragde. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.366300366))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty raw topazes."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty raw topazes. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 25))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.366300366))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig rohe Topase."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig rohe Topase. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 25))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.366300366))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty raw topazes."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty raw topazes. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 25))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.366300366))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig rohe Topase."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig rohe Topase. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 25))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 25))
talkEntry:addCondition(condition_item(257, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(257, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 25))
talkEntry:addCondition(condition_item(257, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(257, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 25))
talkEntry:addCondition(condition_item(257, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty raw topazes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 25))
talkEntry:addCondition(condition_item(257, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig rohe Topase. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 25))
talkEntry:addCondition(condition_item(257, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty raw topazes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 25))
talkEntry:addCondition(condition_item(257, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig rohe Topase. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.367647059))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty steel gloves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 26))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.367647059))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Stahlhandschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 26))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.367647059))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty steel gloves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 26))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.367647059))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Stahlhandschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 26))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 26))
talkEntry:addCondition(condition_item(325, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(325, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 26))
talkEntry:addCondition(condition_item(325, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(325, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 26))
talkEntry:addCondition(condition_item(325, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 26))
talkEntry:addCondition(condition_item(325, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 26))
talkEntry:addCondition(condition_item(325, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 26))
talkEntry:addCondition(condition_item(325, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.36900369))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty green plates."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty green plates. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 27))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.36900369))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig grüne Teller."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig grüne Teller. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 27))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.36900369))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty green plates."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty green plates. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 27))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.36900369))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig grüne Teller."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig grüne Teller. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 27))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 27))
talkEntry:addCondition(condition_item(1001, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1001, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 27))
talkEntry:addCondition(condition_item(1001, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1001, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 27))
talkEntry:addCondition(condition_item(1001, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty green plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 27))
talkEntry:addCondition(condition_item(1001, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig grüne Teller. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 27))
talkEntry:addCondition(condition_item(1001, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty green plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 27))
talkEntry:addCondition(condition_item(1001, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig grüne Teller. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.37037037))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty simple chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty simple chain gloves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 28))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.37037037))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig einfache Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig einfache Kettenhandschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 28))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.37037037))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty simple chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty simple chain gloves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 28))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.37037037))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig einfache Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig einfache Kettenhandschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 28))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 28))
talkEntry:addCondition(condition_item(1460, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1460, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 28))
talkEntry:addCondition(condition_item(1460, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1460, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 28))
talkEntry:addCondition(condition_item(1460, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty simple chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 28))
talkEntry:addCondition(condition_item(1460, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig einfache Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 28))
talkEntry:addCondition(condition_item(1460, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty simple chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 28))
talkEntry:addCondition(condition_item(1460, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig einfache Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.371747212))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty chain gloves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 29))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.371747212))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Kettenhandschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 29))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.371747212))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty chain gloves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 29))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.371747212))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Kettenhandschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 29))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 29))
talkEntry:addCondition(condition_item(1461, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1461, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 29))
talkEntry:addCondition(condition_item(1461, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1461, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 29))
talkEntry:addCondition(condition_item(1461, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 29))
talkEntry:addCondition(condition_item(1461, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 29))
talkEntry:addCondition(condition_item(1461, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 29))
talkEntry:addCondition(condition_item(1461, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.373134328))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty simple steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty simple steel gloves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 30))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.373134328))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig einfache Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig einfache Stahlhandschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 30))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.373134328))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty simple steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty simple steel gloves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 30))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.373134328))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig einfache Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig einfache Stahlhandschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 30))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 30))
talkEntry:addCondition(condition_item(1470, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1470, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 30))
talkEntry:addCondition(condition_item(1470, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1470, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 30))
talkEntry:addCondition(condition_item(1470, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty simple steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 30))
talkEntry:addCondition(condition_item(1470, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig einfache Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 30))
talkEntry:addCondition(condition_item(1470, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty simple steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 30))
talkEntry:addCondition(condition_item(1470, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig einfache Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.374531835))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty simple jackboots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty simple jackboots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 31))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.374531835))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig einfache Marschstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig einfache Marschstiefel. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 31))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.374531835))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty simple jackboots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty simple jackboots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 31))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.374531835))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig einfache Marschstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig einfache Marschstiefel. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 31))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 31))
talkEntry:addCondition(condition_item(1507, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1507, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 31))
talkEntry:addCondition(condition_item(1507, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1507, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 31))
talkEntry:addCondition(condition_item(1507, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty simple jackboots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 31))
talkEntry:addCondition(condition_item(1507, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig einfache Marschstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 31))
talkEntry:addCondition(condition_item(1507, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty simple jackboots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 31))
talkEntry:addCondition(condition_item(1507, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig einfache Marschstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.37593985))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty jackboots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty jackboots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 32))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.37593985))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Marschstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Marschstiefel. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 32))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.37593985))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty jackboots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty jackboots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 32))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.37593985))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Marschstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Marschstiefel. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 32))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 32))
talkEntry:addCondition(condition_item(1508, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1508, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 32))
talkEntry:addCondition(condition_item(1508, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1508, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 32))
talkEntry:addCondition(condition_item(1508, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty jackboots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 32))
talkEntry:addCondition(condition_item(1508, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Marschstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 32))
talkEntry:addCondition(condition_item(1508, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty jackboots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 32))
talkEntry:addCondition(condition_item(1508, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Marschstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.377358491))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty simple steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty simple steel boots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 33))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.377358491))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig einfache Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig einfache Stahlschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 33))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.377358491))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty simple steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty simple steel boots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 33))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.377358491))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig einfache Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig einfache Stahlschuhe. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 33))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 33))
talkEntry:addCondition(condition_item(1513, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1513, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 33))
talkEntry:addCondition(condition_item(1513, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1513, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 33))
talkEntry:addCondition(condition_item(1513, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty simple steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 33))
talkEntry:addCondition(condition_item(1513, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig einfache Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 33))
talkEntry:addCondition(condition_item(1513, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty simple steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 33))
talkEntry:addCondition(condition_item(1513, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig einfache Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.378787879))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty iron boots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty iron boots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 34))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.378787879))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Eisenstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Eisenstiefel. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 34))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.378787879))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty iron boots."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty iron boots. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 34))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.378787879))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Eisenstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Eisenstiefel. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 34))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 34))
talkEntry:addCondition(condition_item(1520, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1520, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 34))
talkEntry:addCondition(condition_item(1520, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1520, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 34))
talkEntry:addCondition(condition_item(1520, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty iron boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 34))
talkEntry:addCondition(condition_item(1520, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Eisenstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 34))
talkEntry:addCondition(condition_item(1520, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty iron boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 34))
talkEntry:addCondition(condition_item(1520, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Eisenstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.380228137))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty silver goblets."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty silver goblets. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 35))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.380228137))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Silberkelche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Silberkelche. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 35))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.380228137))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty silver goblets."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty silver goblets. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 35))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.380228137))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Silberkelche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Silberkelche. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 35))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 35))
talkEntry:addCondition(condition_item(1858, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1858, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 35))
talkEntry:addCondition(condition_item(1858, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1858, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 35))
talkEntry:addCondition(condition_item(1858, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty silver goblets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 35))
talkEntry:addCondition(condition_item(1858, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Silberkelche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 35))
talkEntry:addCondition(condition_item(1858, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty silver goblets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 35))
talkEntry:addCondition(condition_item(1858, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Silberkelche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.381679389))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty steel caps."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty steel caps. I'll pay thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 36))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.381679389))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Stahlkappen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Stahlkappen. Ich werde dafür sechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 36))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.381679389))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty steel caps."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty steel caps. I'll pay thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 36))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.381679389))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Stahlkappen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Stahlkappen. Ich werde dafür sechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 36))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 36))
talkEntry:addCondition(condition_item(202, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3600))
talkEntry:addConsequence(consequence_deleteitem(202, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 36))
talkEntry:addCondition(condition_item(202, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3600))
talkEntry:addConsequence(consequence_deleteitem(202, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 36))
talkEntry:addCondition(condition_item(202, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty steel caps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 36))
talkEntry:addCondition(condition_item(202, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Stahlkappen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 36))
talkEntry:addCondition(condition_item(202, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty steel caps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 36))
talkEntry:addCondition(condition_item(202, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Stahlkappen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.383141762))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty chain helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty chain helmets. I'll pay thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 37))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.383141762))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Kettenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Kettenhelme. Ich werde dafür sechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 37))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.383141762))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get twenty chain helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for twenty chain helmets. I'll pay thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 37))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.383141762))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zwanzig Kettenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zwanzig Kettenhelme. Ich werde dafür sechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 37))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 37))
talkEntry:addCondition(condition_item(324, "all", "=>", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3600))
talkEntry:addConsequence(consequence_deleteitem(324, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 37))
talkEntry:addCondition(condition_item(324, "all", "=>", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3600))
talkEntry:addConsequence(consequence_deleteitem(324, 20, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 37))
talkEntry:addCondition(condition_item(324, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires twenty chain helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 37))
talkEntry:addCondition(condition_item(324, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Kettenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 37))
talkEntry:addCondition(condition_item(324, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires twenty chain helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 37))
talkEntry:addCondition(condition_item(324, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zwanzig Kettenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.384615385))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten orc helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten orc helmets. I'll pay twenty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 38))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.384615385))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Orkhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Orkhelme. Ich werde dafür zwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 38))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.384615385))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten orc helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten orc helmets. I'll pay twenty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 38))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.384615385))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Orkhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Orkhelme. Ich werde dafür zwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 38))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 38))
talkEntry:addCondition(condition_item(16, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(16, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 38))
talkEntry:addCondition(condition_item(16, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(16, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 38))
talkEntry:addCondition(condition_item(16, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten orc helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 38))
talkEntry:addCondition(condition_item(16, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Orkhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 38))
talkEntry:addCondition(condition_item(16, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten orc helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 38))
talkEntry:addCondition(condition_item(16, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Orkhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.386100386))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten raw diamonds."))
talkEntry:addResponse("A reliable client of mine has a demand for ten raw diamonds. I'll pay twenty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 39))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.386100386))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Rohdiamanten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Rohdiamanten. Ich werde dafür zwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 39))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.386100386))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten raw diamonds."))
talkEntry:addResponse("A reliable client of mine has a demand for ten raw diamonds. I'll pay twenty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 39))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.386100386))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Rohdiamanten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Rohdiamanten. Ich werde dafür zwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 39))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 39))
talkEntry:addCondition(condition_item(254, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(254, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 39))
talkEntry:addCondition(condition_item(254, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(254, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 39))
talkEntry:addCondition(condition_item(254, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten raw diamonds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 39))
talkEntry:addCondition(condition_item(254, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Rohdiamanten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 39))
talkEntry:addCondition(condition_item(254, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten raw diamonds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 39))
talkEntry:addCondition(condition_item(254, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Rohdiamanten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.387596899))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten steel boots. I'll pay twenty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 40))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.387596899))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Stahlschuhe. Ich werde dafür zwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 40))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.387596899))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten steel boots. I'll pay twenty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 40))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.387596899))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Stahlschuhe. Ich werde dafür zwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 40))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 40))
talkEntry:addCondition(condition_item(326, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(326, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 40))
talkEntry:addCondition(condition_item(326, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(326, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 40))
talkEntry:addCondition(condition_item(326, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 40))
talkEntry:addCondition(condition_item(326, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 40))
talkEntry:addCondition(condition_item(326, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 40))
talkEntry:addCondition(condition_item(326, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.389105058))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel caps."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel caps. I'll pay twenty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 41))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.389105058))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlkappen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlkappen. Ich werde dafür zwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 41))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.389105058))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel caps."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel caps. I'll pay twenty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 41))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.389105058))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlkappen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlkappen. Ich werde dafür zwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 41))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 41))
talkEntry:addCondition(condition_item(1429, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(1429, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 41))
talkEntry:addCondition(condition_item(1429, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(1429, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 41))
talkEntry:addCondition(condition_item(1429, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced steel caps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 41))
talkEntry:addCondition(condition_item(1429, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlkappen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 41))
talkEntry:addCondition(condition_item(1429, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced steel caps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 41))
talkEntry:addCondition(condition_item(1429, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlkappen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.390625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced chain gloves. I'll pay twenty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 42))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.390625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Kettenhandschuhe. Ich werde dafür zweiundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 42))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.390625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced chain gloves. I'll pay twenty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 42))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.390625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Kettenhandschuhe. Ich werde dafür zweiundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 42))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 42))
talkEntry:addCondition(condition_item(1462, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2200))
talkEntry:addConsequence(consequence_deleteitem(1462, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 42))
talkEntry:addCondition(condition_item(1462, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2200))
talkEntry:addConsequence(consequence_deleteitem(1462, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 42))
talkEntry:addCondition(condition_item(1462, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 42))
talkEntry:addCondition(condition_item(1462, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 42))
talkEntry:addCondition(condition_item(1462, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 42))
talkEntry:addCondition(condition_item(1462, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.392156863))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel gloves. I'll pay twenty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 43))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.392156863))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlhandschuhe. Ich werde dafür zweiundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 43))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.392156863))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel gloves. I'll pay twenty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 43))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.392156863))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlhandschuhe. Ich werde dafür zweiundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 43))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 43))
talkEntry:addCondition(condition_item(1471, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2200))
talkEntry:addConsequence(consequence_deleteitem(1471, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 43))
talkEntry:addCondition(condition_item(1471, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2200))
talkEntry:addConsequence(consequence_deleteitem(1471, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 43))
talkEntry:addCondition(condition_item(1471, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 43))
talkEntry:addCondition(condition_item(1471, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 43))
talkEntry:addCondition(condition_item(1471, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 43))
talkEntry:addCondition(condition_item(1471, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.393700787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten steel hats."))
talkEntry:addResponse("A reliable client of mine has a demand for ten steel hats. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 44))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.393700787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Stahlhüte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Stahlhüte. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 44))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.393700787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten steel hats."))
talkEntry:addResponse("A reliable client of mine has a demand for ten steel hats. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 44))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.393700787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Stahlhüte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Stahlhüte. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 44))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 44))
talkEntry:addCondition(condition_item(187, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(187, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 44))
talkEntry:addCondition(condition_item(187, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(187, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 44))
talkEntry:addCondition(condition_item(187, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten steel hats. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 44))
talkEntry:addCondition(condition_item(187, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Stahlhüte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 44))
talkEntry:addCondition(condition_item(187, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten steel hats. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 44))
talkEntry:addCondition(condition_item(187, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Stahlhüte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.395256917))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten obsidians."))
talkEntry:addResponse("A reliable client of mine has a demand for ten obsidians. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 45))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.395256917))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Obsidiane."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Obsidiane. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 45))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.395256917))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten obsidians."))
talkEntry:addResponse("A reliable client of mine has a demand for ten obsidians. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 45))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.395256917))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Obsidiane."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Obsidiane. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 45))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 45))
talkEntry:addCondition(condition_item(283, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(283, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 45))
talkEntry:addCondition(condition_item(283, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(283, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 45))
talkEntry:addCondition(condition_item(283, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten obsidians. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 45))
talkEntry:addCondition(condition_item(283, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Obsidiane. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 45))
talkEntry:addCondition(condition_item(283, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten obsidians. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 45))
talkEntry:addCondition(condition_item(283, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Obsidiane. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.396825397))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten sapphires."))
talkEntry:addResponse("A reliable client of mine has a demand for ten sapphires. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 46))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.396825397))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Saphire."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Saphire. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 46))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.396825397))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten sapphires."))
talkEntry:addResponse("A reliable client of mine has a demand for ten sapphires. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 46))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.396825397))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Saphire."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Saphire. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 46))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 46))
talkEntry:addCondition(condition_item(284, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(284, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 46))
talkEntry:addCondition(condition_item(284, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(284, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 46))
talkEntry:addCondition(condition_item(284, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten sapphires. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 46))
talkEntry:addCondition(condition_item(284, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Saphire. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 46))
talkEntry:addCondition(condition_item(284, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten sapphires. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 46))
talkEntry:addCondition(condition_item(284, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Saphire. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.398406375))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered chain helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered chain helmets. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 47))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.398406375))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferter Kettenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferter Kettenhelme. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 47))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.398406375))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered chain helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered chain helmets. I'll pay twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 47))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.398406375))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferter Kettenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferter Kettenhelme. Ich werde dafür vierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 47))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 47))
talkEntry:addCondition(condition_item(1425, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(1425, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 47))
talkEntry:addCondition(condition_item(1425, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2400))
talkEntry:addConsequence(consequence_deleteitem(1425, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 47))
talkEntry:addCondition(condition_item(1425, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten coppered chain helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 47))
talkEntry:addCondition(condition_item(1425, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferter Kettenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 47))
talkEntry:addCondition(condition_item(1425, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten coppered chain helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 47))
talkEntry:addCondition(condition_item(1425, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferter Kettenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.4))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten iron amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten iron amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 48))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.4))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Eisenamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Eisenamulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 48))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.4))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten iron amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten iron amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 48))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.4))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Eisenamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Eisenamulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 48))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 48))
talkEntry:addCondition(condition_item(222, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(222, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 48))
talkEntry:addCondition(condition_item(222, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(222, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 48))
talkEntry:addCondition(condition_item(222, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten iron amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 48))
talkEntry:addCondition(condition_item(222, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Eisenamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 48))
talkEntry:addCondition(condition_item(222, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten iron amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 48))
talkEntry:addCondition(condition_item(222, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Eisenamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.401606426))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden rings. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 49))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.401606426))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Goldringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Goldringe. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 49))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.401606426))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden rings. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 49))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.401606426))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Goldringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Goldringe. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 49))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 49))
talkEntry:addCondition(condition_item(235, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(235, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 49))
talkEntry:addCondition(condition_item(235, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(235, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 49))
talkEntry:addCondition(condition_item(235, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 49))
talkEntry:addCondition(condition_item(235, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Goldringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 49))
talkEntry:addCondition(condition_item(235, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 49))
talkEntry:addCondition(condition_item(235, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Goldringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.403225806))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple short scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple short scale greaves. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 50))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.403225806))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache kurze Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache kurze Schuppenbeinschienen. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 50))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.403225806))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple short scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple short scale greaves. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 50))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.403225806))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache kurze Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache kurze Schuppenbeinschienen. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 50))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 50))
talkEntry:addCondition(condition_item(1485, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(1485, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 50))
talkEntry:addCondition(condition_item(1485, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(1485, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 50))
talkEntry:addCondition(condition_item(1485, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten simple short scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 50))
talkEntry:addCondition(condition_item(1485, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache kurze Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 50))
talkEntry:addCondition(condition_item(1485, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten simple short scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 50))
talkEntry:addCondition(condition_item(1485, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache kurze Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.4048583))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple short iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple short iron greaves. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 51))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.4048583))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache kurze Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache kurze Eisenbeinschienen. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 51))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.4048583))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple short iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple short iron greaves. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 51))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.4048583))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache kurze Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache kurze Eisenbeinschienen. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 51))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 51))
talkEntry:addCondition(condition_item(1492, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(1492, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 51))
talkEntry:addCondition(condition_item(1492, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(1492, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 51))
talkEntry:addCondition(condition_item(1492, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten simple short iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 51))
talkEntry:addCondition(condition_item(1492, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache kurze Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 51))
talkEntry:addCondition(condition_item(1492, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten simple short iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 51))
talkEntry:addCondition(condition_item(1492, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache kurze Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.406504065))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten short iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten short iron greaves. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 52))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.406504065))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kurze Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kurze Eisenbeinschienen. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 52))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.406504065))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten short iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten short iron greaves. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 52))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.406504065))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kurze Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kurze Eisenbeinschienen. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 52))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 52))
talkEntry:addCondition(condition_item(2117, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(2117, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 52))
talkEntry:addCondition(condition_item(2117, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(2117, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 52))
talkEntry:addCondition(condition_item(2117, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten short iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 52))
talkEntry:addCondition(condition_item(2117, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kurze Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 52))
talkEntry:addCondition(condition_item(2117, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten short iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 52))
talkEntry:addCondition(condition_item(2117, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kurze Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.408163265))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten short scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten short scale greaves. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 53))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.408163265))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kurze Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kurze Schuppenbeinschienen. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 53))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.408163265))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten short scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten short scale greaves. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 53))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.408163265))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kurze Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kurze Schuppenbeinschienen. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 53))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 53))
talkEntry:addCondition(condition_item(2194, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(2194, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 53))
talkEntry:addCondition(condition_item(2194, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(2194, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 53))
talkEntry:addCondition(condition_item(2194, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten short scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 53))
talkEntry:addCondition(condition_item(2194, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kurze Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 53))
talkEntry:addCondition(condition_item(2194, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten short scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 53))
talkEntry:addCondition(condition_item(2194, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kurze Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.409836066))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper amethyst amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper amethyst amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 54))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.409836066))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Amethystamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Amethystamulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 54))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.409836066))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper amethyst amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper amethyst amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 54))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.409836066))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Amethystamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Amethystamulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 54))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 54))
talkEntry:addCondition(condition_item(3526, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3526, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 54))
talkEntry:addCondition(condition_item(3526, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3526, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 54))
talkEntry:addCondition(condition_item(3526, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper amethyst amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 54))
talkEntry:addCondition(condition_item(3526, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Amethystamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 54))
talkEntry:addCondition(condition_item(3526, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper amethyst amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 54))
talkEntry:addCondition(condition_item(3526, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Amethystamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.411522634))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper amethyst rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper amethyst rings. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 55))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.411522634))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferner Amethystringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferner Amethystringe. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 55))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.411522634))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper amethyst rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper amethyst rings. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 55))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.411522634))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferner Amethystringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferner Amethystringe. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 55))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 55))
talkEntry:addCondition(condition_item(3527, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3527, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 55))
talkEntry:addCondition(condition_item(3527, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3527, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 55))
talkEntry:addCondition(condition_item(3527, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper amethyst rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 55))
talkEntry:addCondition(condition_item(3527, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferner Amethystringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 55))
talkEntry:addCondition(condition_item(3527, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper amethyst rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 55))
talkEntry:addCondition(condition_item(3527, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferner Amethystringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.41322314))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 56))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.41322314))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Amulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Amulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 56))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.41322314))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 56))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.41322314))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Amulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Amulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 56))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 56))
talkEntry:addCondition(condition_item(3535, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3535, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 56))
talkEntry:addCondition(condition_item(3535, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3535, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 56))
talkEntry:addCondition(condition_item(3535, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 56))
talkEntry:addCondition(condition_item(3535, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Amulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 56))
talkEntry:addCondition(condition_item(3535, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 56))
talkEntry:addCondition(condition_item(3535, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Amulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.414937759))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper rings. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 57))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.414937759))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kupferinge."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kupferinge. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 57))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.414937759))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper rings. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 57))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.414937759))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kupferinge."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kupferinge. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 57))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 57))
talkEntry:addCondition(condition_item(3553, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3553, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 57))
talkEntry:addCondition(condition_item(3553, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3553, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 57))
talkEntry:addCondition(condition_item(3553, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 57))
talkEntry:addCondition(condition_item(3553, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kupferinge. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 57))
talkEntry:addCondition(condition_item(3553, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 57))
talkEntry:addCondition(condition_item(3553, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kupferinge. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.416666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 58))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.416666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Silberamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Silberamulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 58))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.416666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 58))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.416666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Silberamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Silberamulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 58))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 58))
talkEntry:addCondition(condition_item(3554, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3554, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 58))
talkEntry:addCondition(condition_item(3554, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3554, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 58))
talkEntry:addCondition(condition_item(3554, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 58))
talkEntry:addCondition(condition_item(3554, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Silberamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 58))
talkEntry:addCondition(condition_item(3554, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 58))
talkEntry:addCondition(condition_item(3554, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Silberamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.418410042))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver rings. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 59))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.418410042))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Silberringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Silberringe. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 59))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.418410042))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver rings. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 59))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.418410042))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Silberringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Silberringe. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 59))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 59))
talkEntry:addCondition(condition_item(3555, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3555, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 59))
talkEntry:addCondition(condition_item(3555, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3555, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 59))
talkEntry:addCondition(condition_item(3555, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 59))
talkEntry:addCondition(condition_item(3555, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Silberringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 59))
talkEntry:addCondition(condition_item(3555, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 59))
talkEntry:addCondition(condition_item(3555, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Silberringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.420168067))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 60))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.420168067))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kupferamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kupferamulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 60))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.420168067))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper amulets. I'll pay twenty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 60))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.420168067))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kupferamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kupferamulette. Ich werde dafür sechsundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 60))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 60))
talkEntry:addCondition(condition_item(3558, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3558, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 60))
talkEntry:addCondition(condition_item(3558, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2600))
talkEntry:addConsequence(consequence_deleteitem(3558, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 60))
talkEntry:addCondition(condition_item(3558, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 60))
talkEntry:addCondition(condition_item(3558, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kupferamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 60))
talkEntry:addCondition(condition_item(3558, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 60))
talkEntry:addCondition(condition_item(3558, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kupferamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.421940928))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver amethyst amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver amethyst amulets. I'll pay twenty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 61))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.421940928))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Amethystamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Amethystamulette. Ich werde dafür achtundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 61))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.421940928))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver amethyst amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver amethyst amulets. I'll pay twenty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 61))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.421940928))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Amethystamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Amethystamulette. Ich werde dafür achtundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 61))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 61))
talkEntry:addCondition(condition_item(3528, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2800))
talkEntry:addConsequence(consequence_deleteitem(3528, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 61))
talkEntry:addCondition(condition_item(3528, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2800))
talkEntry:addConsequence(consequence_deleteitem(3528, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 61))
talkEntry:addCondition(condition_item(3528, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver amethyst amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 61))
talkEntry:addCondition(condition_item(3528, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Amethystamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 61))
talkEntry:addCondition(condition_item(3528, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver amethyst amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 61))
talkEntry:addCondition(condition_item(3528, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Amethystamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.423728814))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver amethyst rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver amethyst rings. I'll pay twenty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 62))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.423728814))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Amethystringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Amethystringe. Ich werde dafür achtundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 62))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.423728814))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver amethyst rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver amethyst rings. I'll pay twenty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 62))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.423728814))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Amethystringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Amethystringe. Ich werde dafür achtundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 62))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 62))
talkEntry:addCondition(condition_item(3529, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded twenty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 2800))
talkEntry:addConsequence(consequence_deleteitem(3529, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 62))
talkEntry:addCondition(condition_item(3529, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 2800))
talkEntry:addConsequence(consequence_deleteitem(3529, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 62))
talkEntry:addCondition(condition_item(3529, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver amethyst rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 62))
talkEntry:addCondition(condition_item(3529, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Amethystringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 62))
talkEntry:addCondition(condition_item(3529, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver amethyst rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 62))
talkEntry:addCondition(condition_item(3529, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Amethystringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.425531915))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden amethyst amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden amethyst amulets. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 63))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.425531915))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Amethystketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Amethystketten. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 63))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.425531915))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden amethyst amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden amethyst amulets. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 63))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.425531915))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Amethystketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Amethystketten. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 63))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 63))
talkEntry:addCondition(condition_item(79, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(79, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 63))
talkEntry:addCondition(condition_item(79, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(79, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 63))
talkEntry:addCondition(condition_item(79, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden amethyst amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 63))
talkEntry:addCondition(condition_item(79, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Amethystketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 63))
talkEntry:addCondition(condition_item(79, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden amethyst amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 63))
talkEntry:addCondition(condition_item(79, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Amethystketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.427350427))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden amethyst rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden amethyst rings. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 64))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.427350427))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Amethystringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Amethystringe. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 64))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.427350427))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden amethyst rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden amethyst rings. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 64))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.427350427))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Amethystringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Amethystringe. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 64))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 64))
talkEntry:addCondition(condition_item(277, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(277, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 64))
talkEntry:addCondition(condition_item(277, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(277, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 64))
talkEntry:addCondition(condition_item(277, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden amethyst rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 64))
talkEntry:addCondition(condition_item(277, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Amethystringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 64))
talkEntry:addCondition(condition_item(277, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden amethyst rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 64))
talkEntry:addCondition(condition_item(277, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Amethystringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.429184549))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten throwing stars."))
talkEntry:addResponse("A reliable client of mine has a demand for ten throwing stars. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 65))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.429184549))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Wurfsterne."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Wurfsterne. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 65))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.429184549))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten throwing stars."))
talkEntry:addResponse("A reliable client of mine has a demand for ten throwing stars. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 65))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.429184549))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Wurfsterne."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Wurfsterne. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 65))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 65))
talkEntry:addCondition(condition_item(294, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(294, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 65))
talkEntry:addCondition(condition_item(294, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(294, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 65))
talkEntry:addCondition(condition_item(294, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten throwing stars. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 65))
talkEntry:addCondition(condition_item(294, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Wurfsterne. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 65))
talkEntry:addCondition(condition_item(294, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten throwing stars. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 65))
talkEntry:addCondition(condition_item(294, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Wurfsterne. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.431034483))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten guardian's boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten guardian's boots. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 66))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.431034483))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Wächterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Wächterstiefel. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 66))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.431034483))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten guardian's boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten guardian's boots. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 66))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.431034483))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Wächterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Wächterstiefel. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 66))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 66))
talkEntry:addCondition(condition_item(1056, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(1056, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 66))
talkEntry:addCondition(condition_item(1056, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(1056, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 66))
talkEntry:addCondition(condition_item(1056, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten guardian's boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 66))
talkEntry:addCondition(condition_item(1056, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Wächterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 66))
talkEntry:addCondition(condition_item(1056, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten guardian's boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 66))
talkEntry:addCondition(condition_item(1056, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Wächterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.432900433))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel boots. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 67))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.432900433))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlschuhe. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 67))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.432900433))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel boots. I'll pay thirty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 67))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.432900433))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlschuhe. Ich werde dafür dreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 67))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 67))
talkEntry:addCondition(condition_item(1514, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(1514, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 67))
talkEntry:addCondition(condition_item(1514, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(1514, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 67))
talkEntry:addCondition(condition_item(1514, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 67))
talkEntry:addCondition(condition_item(1514, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 67))
talkEntry:addCondition(condition_item(1514, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 67))
talkEntry:addCondition(condition_item(1514, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.434782609))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten emeralds."))
talkEntry:addResponse("A reliable client of mine has a demand for ten emeralds. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 68))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.434782609))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Smaragde."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Smaragde. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 68))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.434782609))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten emeralds."))
talkEntry:addResponse("A reliable client of mine has a demand for ten emeralds. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 68))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.434782609))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Smaragde."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Smaragde. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 68))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 68))
talkEntry:addCondition(condition_item(45, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(45, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 68))
talkEntry:addCondition(condition_item(45, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(45, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 68))
talkEntry:addCondition(condition_item(45, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten emeralds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 68))
talkEntry:addCondition(condition_item(45, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Smaragde. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 68))
talkEntry:addCondition(condition_item(45, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten emeralds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 68))
talkEntry:addCondition(condition_item(45, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Smaragde. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.436681223))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten topazes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten topazes. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 69))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.436681223))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Topase."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Topase. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 69))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.436681223))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten topazes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten topazes. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 69))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.436681223))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Topase."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Topase. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 69))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 69))
talkEntry:addCondition(condition_item(198, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(198, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 69))
talkEntry:addCondition(condition_item(198, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(198, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 69))
talkEntry:addCondition(condition_item(198, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten topazes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 69))
talkEntry:addCondition(condition_item(198, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Topase. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 69))
talkEntry:addCondition(condition_item(198, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten topazes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 69))
talkEntry:addCondition(condition_item(198, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Topase. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.438596491))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden goblets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden goblets. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 70))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.438596491))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Goldkelche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Goldkelche. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 70))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.438596491))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden goblets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden goblets. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 70))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.438596491))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Goldkelche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Goldkelche. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 70))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 70))
talkEntry:addCondition(condition_item(224, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(224, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 70))
talkEntry:addCondition(condition_item(224, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(224, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 70))
talkEntry:addCondition(condition_item(224, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden goblets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 70))
talkEntry:addCondition(condition_item(224, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Goldkelche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 70))
talkEntry:addCondition(condition_item(224, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden goblets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 70))
talkEntry:addCondition(condition_item(224, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Goldkelche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.440528634))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of ruby powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of ruby powder. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 71))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.440528634))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Rubinstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Rubinstaub. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 71))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.440528634))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of ruby powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of ruby powder. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 71))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.440528634))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Rubinstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Rubinstaub. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 71))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 71))
talkEntry:addCondition(condition_item(447, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(447, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 71))
talkEntry:addCondition(condition_item(447, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(447, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 71))
talkEntry:addCondition(condition_item(447, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten bags of ruby powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 71))
talkEntry:addCondition(condition_item(447, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Rubinstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 71))
talkEntry:addCondition(condition_item(447, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten bags of ruby powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 71))
talkEntry:addCondition(condition_item(447, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Rubinstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.442477876))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of amethyst powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of amethyst powder. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 72))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.442477876))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Amethyststaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Amethyststaub. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 72))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.442477876))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of amethyst powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of amethyst powder. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 72))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.442477876))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Amethyststaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Amethyststaub. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 72))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 72))
talkEntry:addCondition(condition_item(450, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(450, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 72))
talkEntry:addCondition(condition_item(450, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(450, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 72))
talkEntry:addCondition(condition_item(450, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten bags of amethyst powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 72))
talkEntry:addCondition(condition_item(450, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Amethyststaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 72))
talkEntry:addCondition(condition_item(450, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten bags of amethyst powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 72))
talkEntry:addCondition(condition_item(450, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Amethyststaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.444444444))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced short scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced short scale greaves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 73))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.444444444))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte kurze Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte kurze Schuppenbeinschienen. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 73))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.444444444))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced short scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced short scale greaves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 73))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.444444444))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte kurze Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte kurze Schuppenbeinschienen. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 73))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 73))
talkEntry:addCondition(condition_item(1486, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1486, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 73))
talkEntry:addCondition(condition_item(1486, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1486, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 73))
talkEntry:addCondition(condition_item(1486, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced short scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 73))
talkEntry:addCondition(condition_item(1486, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte kurze Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 73))
talkEntry:addCondition(condition_item(1486, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced short scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 73))
talkEntry:addCondition(condition_item(1486, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte kurze Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.446428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced short iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced short iron greaves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 74))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.446428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte kurze Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte kurze Eisenbeinschienen. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 74))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.446428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced short iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced short iron greaves. I'll pay thirty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 74))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.446428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte kurze Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte kurze Eisenbeinschienen. Ich werde dafür zweiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 74))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 74))
talkEntry:addCondition(condition_item(1493, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1493, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 74))
talkEntry:addCondition(condition_item(1493, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3200))
talkEntry:addConsequence(consequence_deleteitem(1493, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 74))
talkEntry:addCondition(condition_item(1493, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced short iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 74))
talkEntry:addCondition(condition_item(1493, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte kurze Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 74))
talkEntry:addCondition(condition_item(1493, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced short iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 74))
talkEntry:addCondition(condition_item(1493, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte kurze Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.448430493))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered chain gloves. I'll pay thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 75))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.448430493))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Kettenhandschuhe. Ich werde dafür vierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 75))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.448430493))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered chain gloves. I'll pay thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 75))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.448430493))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Kettenhandschuhe. Ich werde dafür vierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 75))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 75))
talkEntry:addCondition(condition_item(1463, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3400))
talkEntry:addConsequence(consequence_deleteitem(1463, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 75))
talkEntry:addCondition(condition_item(1463, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3400))
talkEntry:addConsequence(consequence_deleteitem(1463, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 75))
talkEntry:addCondition(condition_item(1463, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten coppered chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 75))
talkEntry:addCondition(condition_item(1463, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 75))
talkEntry:addCondition(condition_item(1463, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten coppered chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 75))
talkEntry:addCondition(condition_item(1463, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.45045045))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered steel gloves. I'll pay thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 76))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.45045045))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Stahlhandschuhe. Ich werde dafür vierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 76))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.45045045))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered steel gloves. I'll pay thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 76))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.45045045))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Stahlhandschuhe. Ich werde dafür vierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 76))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 76))
talkEntry:addCondition(condition_item(1472, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3400))
talkEntry:addConsequence(consequence_deleteitem(1472, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 76))
talkEntry:addCondition(condition_item(1472, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3400))
talkEntry:addConsequence(consequence_deleteitem(1472, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 76))
talkEntry:addCondition(condition_item(1472, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten coppered steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 76))
talkEntry:addCondition(condition_item(1472, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 76))
talkEntry:addCondition(condition_item(1472, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten coppered steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 76))
talkEntry:addCondition(condition_item(1472, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.452488688))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper ruby amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper ruby amulets. I'll pay thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 77))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.452488688))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Rubinamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Rubinamulette. Ich werde dafür vierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 77))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.452488688))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper ruby amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper ruby amulets. I'll pay thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 77))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.452488688))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Rubinamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Rubinamulette. Ich werde dafür vierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 77))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 77))
talkEntry:addCondition(condition_item(3539, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3400))
talkEntry:addConsequence(consequence_deleteitem(3539, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 77))
talkEntry:addCondition(condition_item(3539, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3400))
talkEntry:addConsequence(consequence_deleteitem(3539, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 77))
talkEntry:addCondition(condition_item(3539, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper ruby amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 77))
talkEntry:addCondition(condition_item(3539, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Rubinamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 77))
talkEntry:addCondition(condition_item(3539, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper ruby amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 77))
talkEntry:addCondition(condition_item(3539, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Rubinamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.454545455))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper ruby rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper ruby rings. I'll pay thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 78))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.454545455))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Rubinringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Rubinringe. Ich werde dafür vierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 78))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.454545455))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper ruby rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper ruby rings. I'll pay thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 78))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.454545455))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Rubinringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Rubinringe. Ich werde dafür vierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 78))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 78))
talkEntry:addCondition(condition_item(3540, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3400))
talkEntry:addConsequence(consequence_deleteitem(3540, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 78))
talkEntry:addCondition(condition_item(3540, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3400))
talkEntry:addConsequence(consequence_deleteitem(3540, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 78))
talkEntry:addCondition(condition_item(3540, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper ruby rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 78))
talkEntry:addCondition(condition_item(3540, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Rubinringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 78))
talkEntry:addCondition(condition_item(3540, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper ruby rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 78))
talkEntry:addCondition(condition_item(3540, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Rubinringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.456621005))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel hats."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel hats. I'll pay thirty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 79))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.456621005))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlhüte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlhüte. Ich werde dafür achtunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 79))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.456621005))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel hats."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel hats. I'll pay thirty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 79))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.456621005))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlhüte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlhüte. Ich werde dafür achtunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 79))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 79))
talkEntry:addCondition(condition_item(1430, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3800))
talkEntry:addConsequence(consequence_deleteitem(1430, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 79))
talkEntry:addCondition(condition_item(1430, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3800))
talkEntry:addConsequence(consequence_deleteitem(1430, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 79))
talkEntry:addCondition(condition_item(1430, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced steel hats. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 79))
talkEntry:addCondition(condition_item(1430, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlhüte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 79))
talkEntry:addCondition(condition_item(1430, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced steel hats. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 79))
talkEntry:addCondition(condition_item(1430, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlhüte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.458715596))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten serinjah helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten serinjah helmets. I'll pay thirty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 80))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.458715596))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Serinjah-Helme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Serinjah-Helme. Ich werde dafür achtunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 80))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.458715596))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten serinjah helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten serinjah helmets. I'll pay thirty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 80))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.458715596))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Serinjah-Helme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Serinjah-Helme. Ich werde dafür achtunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 80))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 80))
talkEntry:addCondition(condition_item(2444, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded thirty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 3800))
talkEntry:addConsequence(consequence_deleteitem(2444, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 80))
talkEntry:addCondition(condition_item(2444, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 3800))
talkEntry:addConsequence(consequence_deleteitem(2444, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 80))
talkEntry:addCondition(condition_item(2444, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten serinjah helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 80))
talkEntry:addCondition(condition_item(2444, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Serinjah-Helme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 80))
talkEntry:addCondition(condition_item(2444, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten serinjah helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 80))
talkEntry:addCondition(condition_item(2444, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Serinjah-Helme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.460829493))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scissors."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scissors. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 81))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.460829493))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Scheren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Scheren. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 81))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.460829493))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scissors."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scissors. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 81))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.460829493))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Scheren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Scheren. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 81))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 81))
talkEntry:addCondition(condition_item(6, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(6, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 81))
talkEntry:addCondition(condition_item(6, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(6, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 81))
talkEntry:addCondition(condition_item(6, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten scissors. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 81))
talkEntry:addCondition(condition_item(6, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Scheren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 81))
talkEntry:addCondition(condition_item(6, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten scissors. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 81))
talkEntry:addCondition(condition_item(6, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Scheren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.462962963))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten saws."))
talkEntry:addResponse("A reliable client of mine has a demand for ten saws. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 82))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.462962963))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Sägen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Sägen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 82))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.462962963))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten saws."))
talkEntry:addResponse("A reliable client of mine has a demand for ten saws. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 82))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.462962963))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Sägen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Sägen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 82))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 82))
talkEntry:addCondition(condition_item(9, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(9, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 82))
talkEntry:addCondition(condition_item(9, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(9, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 82))
talkEntry:addCondition(condition_item(9, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten saws. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 82))
talkEntry:addCondition(condition_item(9, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Sägen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 82))
talkEntry:addCondition(condition_item(9, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten saws. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 82))
talkEntry:addCondition(condition_item(9, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Sägen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.465116279))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten hammers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten hammers. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 83))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.465116279))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Hammer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Hammer. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 83))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.465116279))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten hammers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten hammers. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 83))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.465116279))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Hammer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Hammer. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 83))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 83))
talkEntry:addCondition(condition_item(23, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(23, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 83))
talkEntry:addCondition(condition_item(23, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(23, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 83))
talkEntry:addCondition(condition_item(23, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten hammers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 83))
talkEntry:addCondition(condition_item(23, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Hammer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 83))
talkEntry:addCondition(condition_item(23, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten hammers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 83))
talkEntry:addCondition(condition_item(23, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Hammer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.46728972))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten shovels."))
talkEntry:addResponse("A reliable client of mine has a demand for ten shovels. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 84))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.46728972))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Schaufeln."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Schaufeln. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 84))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.46728972))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten shovels."))
talkEntry:addResponse("A reliable client of mine has a demand for ten shovels. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 84))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.46728972))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Schaufeln."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Schaufeln. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 84))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 84))
talkEntry:addCondition(condition_item(24, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(24, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 84))
talkEntry:addCondition(condition_item(24, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(24, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 84))
talkEntry:addCondition(condition_item(24, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten shovels. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 84))
talkEntry:addCondition(condition_item(24, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Schaufeln. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 84))
talkEntry:addCondition(condition_item(24, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten shovels. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 84))
talkEntry:addCondition(condition_item(24, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Schaufeln. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.469483568))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten needles."))
talkEntry:addResponse("A reliable client of mine has a demand for ten needles. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 85))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.469483568))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Nadeln."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Nadeln. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 85))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.469483568))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten needles."))
talkEntry:addResponse("A reliable client of mine has a demand for ten needles. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 85))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.469483568))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Nadeln."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Nadeln. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 85))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 85))
talkEntry:addCondition(condition_item(47, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(47, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 85))
talkEntry:addCondition(condition_item(47, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(47, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 85))
talkEntry:addCondition(condition_item(47, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten needles. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 85))
talkEntry:addCondition(condition_item(47, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Nadeln. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 85))
talkEntry:addCondition(condition_item(47, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten needles. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 85))
talkEntry:addCondition(condition_item(47, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Nadeln. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.471698113))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten hatchets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten hatchets. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 86))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.471698113))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beile."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beile. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 86))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.471698113))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten hatchets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten hatchets. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 86))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.471698113))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beile."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beile. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 86))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 86))
talkEntry:addCondition(condition_item(74, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(74, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 86))
talkEntry:addCondition(condition_item(74, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(74, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 86))
talkEntry:addCondition(condition_item(74, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten hatchets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 86))
talkEntry:addCondition(condition_item(74, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beile. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 86))
talkEntry:addCondition(condition_item(74, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten hatchets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 86))
talkEntry:addCondition(condition_item(74, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beile. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.473933649))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten finesmithing hammers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten finesmithing hammers. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 87))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.473933649))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Feinschmiedehammer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Feinschmiedehammer. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 87))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.473933649))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten finesmithing hammers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten finesmithing hammers. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 87))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.473933649))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Feinschmiedehammer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Feinschmiedehammer. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 87))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 87))
talkEntry:addCondition(condition_item(122, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(122, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 87))
talkEntry:addCondition(condition_item(122, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(122, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 87))
talkEntry:addCondition(condition_item(122, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten finesmithing hammers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 87))
talkEntry:addCondition(condition_item(122, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Feinschmiedehammer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 87))
talkEntry:addCondition(condition_item(122, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten finesmithing hammers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 87))
talkEntry:addCondition(condition_item(122, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Feinschmiedehammer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.476190476))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten sickles."))
talkEntry:addResponse("A reliable client of mine has a demand for ten sickles. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 88))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.476190476))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Sicheln."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Sicheln. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 88))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.476190476))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten sickles."))
talkEntry:addResponse("A reliable client of mine has a demand for ten sickles. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 88))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.476190476))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Sicheln."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Sicheln. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 88))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 88))
talkEntry:addCondition(condition_item(126, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(126, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 88))
talkEntry:addCondition(condition_item(126, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(126, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 88))
talkEntry:addCondition(condition_item(126, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten sickles. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 88))
talkEntry:addCondition(condition_item(126, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Sicheln. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 88))
talkEntry:addCondition(condition_item(126, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten sickles. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 88))
talkEntry:addCondition(condition_item(126, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Sicheln. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.4784689))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scythes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scythes. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 89))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.4784689))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Sensen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Sensen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 89))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.4784689))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scythes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scythes. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 89))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.4784689))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Sensen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Sensen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 89))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 89))
talkEntry:addCondition(condition_item(271, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(271, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 89))
talkEntry:addCondition(condition_item(271, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(271, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 89))
talkEntry:addCondition(condition_item(271, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten scythes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 89))
talkEntry:addCondition(condition_item(271, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Sensen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 89))
talkEntry:addCondition(condition_item(271, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten scythes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 89))
talkEntry:addCondition(condition_item(271, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Sensen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.480769231))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten diamonds."))
talkEntry:addResponse("A reliable client of mine has a demand for ten diamonds. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 90))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.480769231))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Diamanten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Diamanten. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 90))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.480769231))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten diamonds."))
talkEntry:addResponse("A reliable client of mine has a demand for ten diamonds. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 90))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.480769231))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Diamanten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Diamanten. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 90))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 90))
talkEntry:addCondition(condition_item(285, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(285, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 90))
talkEntry:addCondition(condition_item(285, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(285, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 90))
talkEntry:addCondition(condition_item(285, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten diamonds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 90))
talkEntry:addCondition(condition_item(285, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Diamanten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 90))
talkEntry:addCondition(condition_item(285, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten diamonds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 90))
talkEntry:addCondition(condition_item(285, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Diamanten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.483091787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten glass blow pipes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten glass blow pipes. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 91))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.483091787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Glasblasrohre."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Glasblasrohre. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 91))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.483091787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten glass blow pipes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten glass blow pipes. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 91))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.483091787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Glasblasrohre."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Glasblasrohre. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 91))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 91))
talkEntry:addCondition(condition_item(311, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(311, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 91))
talkEntry:addCondition(condition_item(311, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(311, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 91))
talkEntry:addCondition(condition_item(311, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten glass blow pipes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 91))
talkEntry:addCondition(condition_item(311, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Glasblasrohre. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 91))
talkEntry:addCondition(condition_item(311, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten glass blow pipes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 91))
talkEntry:addCondition(condition_item(311, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Glasblasrohre. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.485436893))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten small candlesticks."))
talkEntry:addResponse("A reliable client of mine has a demand for ten small candlesticks. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 92))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.485436893))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kleine Kerzenhalter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kleine Kerzenhalter. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 92))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.485436893))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten small candlesticks."))
talkEntry:addResponse("A reliable client of mine has a demand for ten small candlesticks. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 92))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.485436893))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kleine Kerzenhalter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kleine Kerzenhalter. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 92))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 92))
talkEntry:addCondition(condition_item(399, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(399, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 92))
talkEntry:addCondition(condition_item(399, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(399, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 92))
talkEntry:addCondition(condition_item(399, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten small candlesticks. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 92))
talkEntry:addCondition(condition_item(399, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kleine Kerzenhalter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 92))
talkEntry:addCondition(condition_item(399, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten small candlesticks. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 92))
talkEntry:addCondition(condition_item(399, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kleine Kerzenhalter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.487804878))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten chisels."))
talkEntry:addResponse("A reliable client of mine has a demand for ten chisels. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 93))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.487804878))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Meißel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Meißel. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 93))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.487804878))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten chisels."))
talkEntry:addResponse("A reliable client of mine has a demand for ten chisels. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 93))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.487804878))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Meißel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Meißel. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 93))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 93))
talkEntry:addCondition(condition_item(737, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(737, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 93))
talkEntry:addCondition(condition_item(737, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(737, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 93))
talkEntry:addCondition(condition_item(737, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten chisels. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 93))
talkEntry:addCondition(condition_item(737, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Meißel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 93))
talkEntry:addCondition(condition_item(737, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten chisels. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 93))
talkEntry:addCondition(condition_item(737, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Meißel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.490196078))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten lockpicks."))
talkEntry:addResponse("A reliable client of mine has a demand for ten lockpicks. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 94))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.490196078))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Dietriche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Dietriche. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 94))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.490196078))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten lockpicks."))
talkEntry:addResponse("A reliable client of mine has a demand for ten lockpicks. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 94))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.490196078))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Dietriche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Dietriche. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 94))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 94))
talkEntry:addCondition(condition_item(739, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(739, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 94))
talkEntry:addCondition(condition_item(739, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(739, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 94))
talkEntry:addCondition(condition_item(739, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten lockpicks. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 94))
talkEntry:addCondition(condition_item(739, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Dietriche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 94))
talkEntry:addCondition(condition_item(739, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten lockpicks. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 94))
talkEntry:addCondition(condition_item(739, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Dietriche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.492610837))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten tongs."))
talkEntry:addResponse("A reliable client of mine has a demand for ten tongs. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 95))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.492610837))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Zangen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Zangen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 95))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.492610837))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten tongs."))
talkEntry:addResponse("A reliable client of mine has a demand for ten tongs. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 95))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.492610837))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Zangen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Zangen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 95))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 95))
talkEntry:addCondition(condition_item(2140, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2140, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 95))
talkEntry:addCondition(condition_item(2140, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2140, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 95))
talkEntry:addCondition(condition_item(2140, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten tongs. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 95))
talkEntry:addCondition(condition_item(2140, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Zangen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 95))
talkEntry:addCondition(condition_item(2140, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten tongs. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 95))
talkEntry:addCondition(condition_item(2140, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Zangen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.495049505))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten pans."))
talkEntry:addResponse("A reliable client of mine has a demand for ten pans. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 96))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.495049505))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Pfannen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Pfannen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 96))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.495049505))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten pans."))
talkEntry:addResponse("A reliable client of mine has a demand for ten pans. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 96))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.495049505))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Pfannen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Pfannen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 96))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 96))
talkEntry:addCondition(condition_item(2495, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2495, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 96))
talkEntry:addCondition(condition_item(2495, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2495, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 96))
talkEntry:addCondition(condition_item(2495, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten pans. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 96))
talkEntry:addCondition(condition_item(2495, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Pfannen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 96))
talkEntry:addCondition(condition_item(2495, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten pans. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 96))
talkEntry:addCondition(condition_item(2495, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Pfannen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.497512438))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten cutleries."))
talkEntry:addResponse("A reliable client of mine has a demand for ten cutleries. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 97))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.497512438))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Bestecke."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Bestecke. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 97))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.497512438))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten cutleries."))
talkEntry:addResponse("A reliable client of mine has a demand for ten cutleries. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 97))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.497512438))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Bestecke."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Bestecke. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 97))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 97))
talkEntry:addCondition(condition_item(2647, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2647, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 97))
talkEntry:addCondition(condition_item(2647, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2647, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 97))
talkEntry:addCondition(condition_item(2647, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten cutleries. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 97))
talkEntry:addCondition(condition_item(2647, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Bestecke. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 97))
talkEntry:addCondition(condition_item(2647, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten cutleries. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 97))
talkEntry:addCondition(condition_item(2647, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Bestecke. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten rasps."))
talkEntry:addResponse("A reliable client of mine has a demand for ten rasps. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 98))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Feilen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Feilen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 98))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten rasps."))
talkEntry:addResponse("A reliable client of mine has a demand for ten rasps. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 98))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Feilen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Feilen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 98))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 98))
talkEntry:addCondition(condition_item(2697, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2697, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 98))
talkEntry:addCondition(condition_item(2697, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2697, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 98))
talkEntry:addCondition(condition_item(2697, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten rasps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 98))
talkEntry:addCondition(condition_item(2697, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Feilen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 98))
talkEntry:addCondition(condition_item(2697, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten rasps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 98))
talkEntry:addCondition(condition_item(2697, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Feilen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.502512563))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten armourer's hammers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten armourer's hammers. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 99))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.502512563))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Hammer des Rüstschmieds."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Hammer des Rüstschmieds. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 99))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.502512563))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten armourer's hammers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten armourer's hammers. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 99))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.502512563))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Hammer des Rüstschmieds."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Hammer des Rüstschmieds. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 99))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 99))
talkEntry:addCondition(condition_item(2709, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2709, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 99))
talkEntry:addCondition(condition_item(2709, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2709, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 99))
talkEntry:addCondition(condition_item(2709, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten armourer's hammers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 99))
talkEntry:addCondition(condition_item(2709, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Hammer des Rüstschmieds. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 99))
talkEntry:addCondition(condition_item(2709, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten armourer's hammers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 99))
talkEntry:addCondition(condition_item(2709, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Hammer des Rüstschmieds. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.505050505))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten moulds."))
talkEntry:addResponse("A reliable client of mine has a demand for ten moulds. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 100))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.505050505))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Gussformen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Gussformen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 100))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.505050505))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten moulds."))
talkEntry:addResponse("A reliable client of mine has a demand for ten moulds. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 100))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.505050505))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Gussformen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Gussformen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 100))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 100))
talkEntry:addCondition(condition_item(2710, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2710, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 100))
talkEntry:addCondition(condition_item(2710, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2710, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 100))
talkEntry:addCondition(condition_item(2710, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten moulds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 100))
talkEntry:addCondition(condition_item(2710, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Gussformen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 100))
talkEntry:addCondition(condition_item(2710, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten moulds. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 100))
talkEntry:addCondition(condition_item(2710, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Gussformen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.507614213))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten planes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten planes. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 101))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.507614213))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Hobel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Hobel. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 101))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.507614213))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten planes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten planes. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 101))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.507614213))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Hobel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Hobel. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 101))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 101))
talkEntry:addCondition(condition_item(2715, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2715, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 101))
talkEntry:addCondition(condition_item(2715, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2715, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 101))
talkEntry:addCondition(condition_item(2715, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten planes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 101))
talkEntry:addCondition(condition_item(2715, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Hobel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 101))
talkEntry:addCondition(condition_item(2715, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten planes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 101))
talkEntry:addCondition(condition_item(2715, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Hobel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.510204082))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten razor blades."))
talkEntry:addResponse("A reliable client of mine has a demand for ten razor blades. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 102))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.510204082))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Rasierklingen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Rasierklingen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 102))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.510204082))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten razor blades."))
talkEntry:addResponse("A reliable client of mine has a demand for ten razor blades. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 102))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.510204082))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Rasierklingen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Rasierklingen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 102))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 102))
talkEntry:addCondition(condition_item(2746, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2746, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 102))
talkEntry:addCondition(condition_item(2746, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2746, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 102))
talkEntry:addCondition(condition_item(2746, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten razor blades. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 102))
talkEntry:addCondition(condition_item(2746, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Rasierklingen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 102))
talkEntry:addCondition(condition_item(2746, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten razor blades. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 102))
talkEntry:addCondition(condition_item(2746, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Rasierklingen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.512820513))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten crucible-pincers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten crucible-pincers. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 103))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.512820513))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Tiegelzangen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Tiegelzangen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 103))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.512820513))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten crucible-pincers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten crucible-pincers. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 103))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.512820513))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Tiegelzangen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Tiegelzangen. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 103))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 103))
talkEntry:addCondition(condition_item(2751, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2751, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 103))
talkEntry:addCondition(condition_item(2751, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2751, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 103))
talkEntry:addCondition(condition_item(2751, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten crucible-pincers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 103))
talkEntry:addCondition(condition_item(2751, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Tiegelzangen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 103))
talkEntry:addCondition(condition_item(2751, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten crucible-pincers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 103))
talkEntry:addCondition(condition_item(2751, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Tiegelzangen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.515463918))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten carving tools."))
talkEntry:addResponse("A reliable client of mine has a demand for ten carving tools. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 104))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.515463918))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Schnitzmesser."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Schnitzmesser. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 104))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.515463918))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten carving tools."))
talkEntry:addResponse("A reliable client of mine has a demand for ten carving tools. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 104))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.515463918))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Schnitzmesser."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Schnitzmesser. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 104))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 104))
talkEntry:addCondition(condition_item(2752, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2752, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 104))
talkEntry:addCondition(condition_item(2752, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2752, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 104))
talkEntry:addCondition(condition_item(2752, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten carving tools. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 104))
talkEntry:addCondition(condition_item(2752, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Schnitzmesser. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 104))
talkEntry:addCondition(condition_item(2752, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten carving tools. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 104))
talkEntry:addCondition(condition_item(2752, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Schnitzmesser. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.518134715))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten pick-axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten pick-axes. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 105))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.518134715))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Spitzhacken."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Spitzhacken. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 105))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.518134715))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten pick-axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten pick-axes. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 105))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.518134715))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Spitzhacken."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Spitzhacken. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 105))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 105))
talkEntry:addCondition(condition_item(2763, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2763, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 105))
talkEntry:addCondition(condition_item(2763, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(2763, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 105))
talkEntry:addCondition(condition_item(2763, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten pick-axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 105))
talkEntry:addCondition(condition_item(2763, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Spitzhacken. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 105))
talkEntry:addCondition(condition_item(2763, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten pick-axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 105))
talkEntry:addCondition(condition_item(2763, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Spitzhacken. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.520833333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver ruby amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver ruby amulets. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 106))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.520833333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Rubinamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Rubinamulette. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 106))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.520833333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver ruby amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver ruby amulets. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 106))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.520833333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Rubinamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Rubinamulette. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 106))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 106))
talkEntry:addCondition(condition_item(3541, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(3541, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 106))
talkEntry:addCondition(condition_item(3541, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(3541, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 106))
talkEntry:addCondition(condition_item(3541, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver ruby amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 106))
talkEntry:addCondition(condition_item(3541, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Rubinamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 106))
talkEntry:addCondition(condition_item(3541, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver ruby amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 106))
talkEntry:addCondition(condition_item(3541, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Rubinamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.523560209))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver ruby rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver ruby rings. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 107))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.523560209))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Rubinringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Rubinringe. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 107))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.523560209))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver ruby rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver ruby rings. I'll pay forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 107))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.523560209))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Rubinringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Rubinringe. Ich werde dafür vierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 107))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 107))
talkEntry:addCondition(condition_item(3560, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(3560, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 107))
talkEntry:addCondition(condition_item(3560, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4000))
talkEntry:addConsequence(consequence_deleteitem(3560, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 107))
talkEntry:addCondition(condition_item(3560, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver ruby rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 107))
talkEntry:addCondition(condition_item(3560, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Rubinringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 107))
talkEntry:addCondition(condition_item(3560, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver ruby rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 107))
talkEntry:addCondition(condition_item(3560, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Rubinringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.526315789))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of sapphire powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of sapphire powder. I'll pay forty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 108))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.526315789))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Saphirstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Saphirstaub. Ich werde dafür achtundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 108))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.526315789))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of sapphire powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of sapphire powder. I'll pay forty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 108))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.526315789))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Saphirstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Saphirstaub. Ich werde dafür achtundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 108))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 108))
talkEntry:addCondition(condition_item(446, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4800))
talkEntry:addConsequence(consequence_deleteitem(446, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 108))
talkEntry:addCondition(condition_item(446, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4800))
talkEntry:addConsequence(consequence_deleteitem(446, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 108))
talkEntry:addCondition(condition_item(446, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten bags of sapphire powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 108))
talkEntry:addCondition(condition_item(446, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Saphirstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 108))
talkEntry:addCondition(condition_item(446, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten bags of sapphire powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 108))
talkEntry:addCondition(condition_item(446, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Saphirstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.529100529))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of obsidian powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of obsidian powder. I'll pay forty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 109))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.529100529))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Obsidianstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Obsidianstaub. Ich werde dafür achtundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 109))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.529100529))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of obsidian powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of obsidian powder. I'll pay forty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 109))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.529100529))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Obsidianstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Obsidianstaub. Ich werde dafür achtundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 109))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 109))
talkEntry:addCondition(condition_item(449, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded forty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 4800))
talkEntry:addConsequence(consequence_deleteitem(449, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 109))
talkEntry:addCondition(condition_item(449, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 4800))
talkEntry:addConsequence(consequence_deleteitem(449, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 109))
talkEntry:addCondition(condition_item(449, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten bags of obsidian powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 109))
talkEntry:addCondition(condition_item(449, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Obsidianstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 109))
talkEntry:addCondition(condition_item(449, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten bags of obsidian powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 109))
talkEntry:addCondition(condition_item(449, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Obsidianstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.531914894))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten plate armours. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 110))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.531914894))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Plattenpanzer. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 110))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.531914894))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten plate armours. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 110))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.531914894))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Plattenpanzer. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 110))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 110))
talkEntry:addCondition(condition_item(4, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(4, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 110))
talkEntry:addCondition(condition_item(4, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(4, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 110))
talkEntry:addCondition(condition_item(4, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 110))
talkEntry:addCondition(condition_item(4, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 110))
talkEntry:addCondition(condition_item(4, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 110))
talkEntry:addCondition(condition_item(4, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.534759358))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple daggers. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 111))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.534759358))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache Dolche. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 111))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.534759358))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple daggers. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 111))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.534759358))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache Dolche. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 111))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 111))
talkEntry:addCondition(condition_item(27, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(27, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 111))
talkEntry:addCondition(condition_item(27, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(27, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 111))
talkEntry:addCondition(condition_item(27, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten simple daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 111))
talkEntry:addCondition(condition_item(27, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 111))
talkEntry:addCondition(condition_item(27, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten simple daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 111))
talkEntry:addCondition(condition_item(27, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.537634409))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden ruby amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden ruby amulets. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 112))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.537634409))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Rubinketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Rubinketten. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 112))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.537634409))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden ruby amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden ruby amulets. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 112))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.537634409))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Rubinketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Rubinketten. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 112))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 112))
talkEntry:addCondition(condition_item(67, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(67, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 112))
talkEntry:addCondition(condition_item(67, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(67, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 112))
talkEntry:addCondition(condition_item(67, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden ruby amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 112))
talkEntry:addCondition(condition_item(67, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Rubinketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 112))
talkEntry:addCondition(condition_item(67, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden ruby amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 112))
talkEntry:addCondition(condition_item(67, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Rubinketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.540540541))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden ruby rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden ruby rings. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 113))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.540540541))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Rubinringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Rubinringe. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 113))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.540540541))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden ruby rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden ruby rings. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 113))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.540540541))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Rubinringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Rubinringe. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 113))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 113))
talkEntry:addCondition(condition_item(68, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(68, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 113))
talkEntry:addCondition(condition_item(68, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(68, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 113))
talkEntry:addCondition(condition_item(68, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden ruby rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 113))
talkEntry:addCondition(condition_item(68, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Rubinringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 113))
talkEntry:addCondition(condition_item(68, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden ruby rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 113))
talkEntry:addCondition(condition_item(68, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Rubinringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.543478261))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten chain mails."))
talkEntry:addResponse("A reliable client of mine has a demand for ten chain mails. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 114))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.543478261))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kettenhemden."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kettenhemden. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 114))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.543478261))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten chain mails."))
talkEntry:addResponse("A reliable client of mine has a demand for ten chain mails. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 114))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.543478261))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kettenhemden."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kettenhemden. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 114))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 114))
talkEntry:addCondition(condition_item(101, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(101, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 114))
talkEntry:addCondition(condition_item(101, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(101, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 114))
talkEntry:addCondition(condition_item(101, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten chain mails. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 114))
talkEntry:addCondition(condition_item(101, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kettenhemden. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 114))
talkEntry:addCondition(condition_item(101, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten chain mails. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 114))
talkEntry:addCondition(condition_item(101, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kettenhemden. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.546448087))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten piles of merinium ore."))
talkEntry:addResponse("A reliable client of mine has a demand for ten piles of merinium ore. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 115))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.546448087))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Haufen Meriniumerz."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Haufen Meriniumerz. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 115))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.546448087))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten piles of merinium ore."))
talkEntry:addResponse("A reliable client of mine has a demand for ten piles of merinium ore. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 115))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.546448087))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Haufen Meriniumerz."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Haufen Meriniumerz. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 115))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 115))
talkEntry:addCondition(condition_item(2534, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(2534, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 115))
talkEntry:addCondition(condition_item(2534, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(2534, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 115))
talkEntry:addCondition(condition_item(2534, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten piles of merinium ore. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 115))
talkEntry:addCondition(condition_item(2534, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Haufen Meriniumerz. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 115))
talkEntry:addCondition(condition_item(2534, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten piles of merinium ore. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 115))
talkEntry:addCondition(condition_item(2534, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Haufen Meriniumerz. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.549450549))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten light battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten light battle axes. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 116))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.549450549))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn leichte Schlachtäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn leichte Schlachtäxte. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 116))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.549450549))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten light battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten light battle axes. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 116))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.549450549))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn leichte Schlachtäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn leichte Schlachtäxte. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 116))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 116))
talkEntry:addCondition(condition_item(2629, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(2629, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 116))
talkEntry:addCondition(condition_item(2629, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(2629, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 116))
talkEntry:addCondition(condition_item(2629, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten light battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 116))
talkEntry:addCondition(condition_item(2629, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn leichte Schlachtäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 116))
talkEntry:addCondition(condition_item(2629, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten light battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 116))
talkEntry:addCondition(condition_item(2629, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn leichte Schlachtäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.552486188))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten machetes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten machetes. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 117))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.552486188))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Macheten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Macheten. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 117))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.552486188))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten machetes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten machetes. I'll pay fifty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 117))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.552486188))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Macheten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Macheten. Ich werde dafür fünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 117))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 117))
talkEntry:addCondition(condition_item(2776, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(2776, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 117))
talkEntry:addCondition(condition_item(2776, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5000))
talkEntry:addConsequence(consequence_deleteitem(2776, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 117))
talkEntry:addCondition(condition_item(2776, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten machetes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 117))
talkEntry:addCondition(condition_item(2776, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Macheten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 117))
talkEntry:addCondition(condition_item(2776, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten machetes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 117))
talkEntry:addCondition(condition_item(2776, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Macheten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.555555556))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten sabres."))
talkEntry:addResponse("A reliable client of mine has a demand for ten sabres. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 118))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.555555556))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Säbel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Säbel. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 118))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.555555556))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten sabres."))
talkEntry:addResponse("A reliable client of mine has a demand for ten sabres. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 118))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.555555556))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Säbel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Säbel. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 118))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 118))
talkEntry:addCondition(condition_item(25, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(25, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 118))
talkEntry:addCondition(condition_item(25, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(25, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 118))
talkEntry:addCondition(condition_item(25, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten sabres. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 118))
talkEntry:addCondition(condition_item(25, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Säbel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 118))
talkEntry:addCondition(condition_item(25, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten sabres. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 118))
talkEntry:addCondition(condition_item(25, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Säbel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.558659218))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten daggers. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 119))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.558659218))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Dolche. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 119))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.558659218))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten daggers. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 119))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.558659218))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Dolche. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 119))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 119))
talkEntry:addCondition(condition_item(189, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(189, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 119))
talkEntry:addCondition(condition_item(189, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(189, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 119))
talkEntry:addCondition(condition_item(189, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 119))
talkEntry:addCondition(condition_item(189, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 119))
talkEntry:addCondition(condition_item(189, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 119))
talkEntry:addCondition(condition_item(189, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.561797753))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silversteel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silversteel boots. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 120))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.561797753))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Silberstahlstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Silberstahlstiefel. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 120))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.561797753))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silversteel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silversteel boots. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 120))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.561797753))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Silberstahlstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Silberstahlstiefel. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 120))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 120))
talkEntry:addCondition(condition_item(1058, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1058, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 120))
talkEntry:addCondition(condition_item(1058, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1058, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 120))
talkEntry:addCondition(condition_item(1058, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silversteel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 120))
talkEntry:addCondition(condition_item(1058, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Silberstahlstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 120))
talkEntry:addCondition(condition_item(1058, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silversteel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 120))
talkEntry:addCondition(condition_item(1058, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Silberstahlstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.564971751))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced plate armours. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 121))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.564971751))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkter Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkter Plattenpanzer. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 121))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.564971751))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced plate armours. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 121))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.564971751))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkter Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkter Plattenpanzer. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 121))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 121))
talkEntry:addCondition(condition_item(1441, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1441, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 121))
talkEntry:addCondition(condition_item(1441, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1441, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 121))
talkEntry:addCondition(condition_item(1441, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 121))
talkEntry:addCondition(condition_item(1441, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkter Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 121))
talkEntry:addCondition(condition_item(1441, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 121))
talkEntry:addCondition(condition_item(1441, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkter Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.568181818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple scale greaves. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 122))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.568181818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache Schuppenbeinschienen. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 122))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.568181818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple scale greaves. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 122))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.568181818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache Schuppenbeinschienen. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 122))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 122))
talkEntry:addCondition(condition_item(1487, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1487, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 122))
talkEntry:addCondition(condition_item(1487, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1487, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 122))
talkEntry:addCondition(condition_item(1487, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten simple scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 122))
talkEntry:addCondition(condition_item(1487, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 122))
talkEntry:addCondition(condition_item(1487, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten simple scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 122))
talkEntry:addCondition(condition_item(1487, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.571428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple iron greaves. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 123))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.571428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache Eisenbeinschienen. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 123))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.571428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten simple iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten simple iron greaves. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 123))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.571428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn einfache Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn einfache Eisenbeinschienen. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 123))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 123))
talkEntry:addCondition(condition_item(1494, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1494, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 123))
talkEntry:addCondition(condition_item(1494, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1494, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 123))
talkEntry:addCondition(condition_item(1494, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten simple iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 123))
talkEntry:addCondition(condition_item(1494, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 123))
talkEntry:addCondition(condition_item(1494, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten simple iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 123))
talkEntry:addCondition(condition_item(1494, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn einfache Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.574712644))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered steel boots. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 124))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.574712644))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Stahlschuhe. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 124))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.574712644))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered steel boots. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 124))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.574712644))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Stahlschuhe. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 124))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 124))
talkEntry:addCondition(condition_item(1515, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1515, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 124))
talkEntry:addCondition(condition_item(1515, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(1515, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 124))
talkEntry:addCondition(condition_item(1515, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten coppered steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 124))
talkEntry:addCondition(condition_item(1515, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 124))
talkEntry:addCondition(condition_item(1515, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten coppered steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 124))
talkEntry:addCondition(condition_item(1515, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.578034682))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten mercenary armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten mercenary armours. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 125))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.578034682))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Söldnerrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Söldnerrüstungen. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 125))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.578034682))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten mercenary armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten mercenary armours. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 125))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.578034682))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Söldnerrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Söldnerrüstungen. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 125))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 125))
talkEntry:addCondition(condition_item(2359, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(2359, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 125))
talkEntry:addCondition(condition_item(2359, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(2359, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 125))
talkEntry:addCondition(condition_item(2359, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten mercenary armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 125))
talkEntry:addCondition(condition_item(2359, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Söldnerrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 125))
talkEntry:addCondition(condition_item(2359, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten mercenary armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 125))
talkEntry:addCondition(condition_item(2359, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Söldnerrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.581395349))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten halfling axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten halfling axes. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 126))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.581395349))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Halblingsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Halblingsäxte. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 126))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.581395349))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten halfling axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten halfling axes. I'll pay fifty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 126))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.581395349))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Halblingsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Halblingsäxte. Ich werde dafür zweiundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 126))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 126))
talkEntry:addCondition(condition_item(2711, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(2711, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 126))
talkEntry:addCondition(condition_item(2711, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5200))
talkEntry:addConsequence(consequence_deleteitem(2711, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 126))
talkEntry:addCondition(condition_item(2711, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten halfling axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 126))
talkEntry:addCondition(condition_item(2711, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Halblingsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 126))
talkEntry:addCondition(condition_item(2711, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten halfling axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 126))
talkEntry:addCondition(condition_item(2711, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Halblingsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.584795322))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered chain gloves. I'll pay fifty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 127))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.584795322))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Kettenhandschuhe. Ich werde dafür sechsundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 127))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.584795322))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered chain gloves. I'll pay fifty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 127))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.584795322))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Kettenhandschuhe. Ich werde dafür sechsundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 127))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 127))
talkEntry:addCondition(condition_item(1464, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5600))
talkEntry:addConsequence(consequence_deleteitem(1464, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 127))
talkEntry:addCondition(condition_item(1464, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5600))
talkEntry:addConsequence(consequence_deleteitem(1464, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 127))
talkEntry:addCondition(condition_item(1464, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silvered chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 127))
talkEntry:addCondition(condition_item(1464, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 127))
talkEntry:addCondition(condition_item(1464, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silvered chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 127))
talkEntry:addCondition(condition_item(1464, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.588235294))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered steel gloves. I'll pay fifty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 128))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.588235294))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Stahlhandschuhe. Ich werde dafür sechsundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 128))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.588235294))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered steel gloves. I'll pay fifty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 128))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.588235294))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Stahlhandschuhe. Ich werde dafür sechsundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 128))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 128))
talkEntry:addCondition(condition_item(1473, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded fifty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 5600))
talkEntry:addConsequence(consequence_deleteitem(1473, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 128))
talkEntry:addCondition(condition_item(1473, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 5600))
talkEntry:addConsequence(consequence_deleteitem(1473, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 128))
talkEntry:addCondition(condition_item(1473, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silvered steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 128))
talkEntry:addCondition(condition_item(1473, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 128))
talkEntry:addCondition(condition_item(1473, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silvered steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 128))
talkEntry:addCondition(condition_item(1473, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.591715976))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of emerald powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of emerald powder. I'll pay sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 129))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.591715976))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Smaragdstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Smaragdstaub. Ich werde dafür vierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 129))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.591715976))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of emerald powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of emerald powder. I'll pay sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 129))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.591715976))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Smaragdstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Smaragdstaub. Ich werde dafür vierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 129))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 129))
talkEntry:addCondition(condition_item(448, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6400))
talkEntry:addConsequence(consequence_deleteitem(448, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 129))
talkEntry:addCondition(condition_item(448, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6400))
talkEntry:addConsequence(consequence_deleteitem(448, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 129))
talkEntry:addCondition(condition_item(448, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten bags of emerald powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 129))
talkEntry:addCondition(condition_item(448, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Smaragdstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 129))
talkEntry:addCondition(condition_item(448, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten bags of emerald powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 129))
talkEntry:addCondition(condition_item(448, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Smaragdstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.595238095))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of topaz powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of topaz powder. I'll pay sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 130))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.595238095))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Topasstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Topasstaub. Ich werde dafür vierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 130))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.595238095))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of topaz powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of topaz powder. I'll pay sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 130))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.595238095))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Topasstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Topasstaub. Ich werde dafür vierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 130))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 130))
talkEntry:addCondition(condition_item(451, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6400))
talkEntry:addConsequence(consequence_deleteitem(451, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 130))
talkEntry:addCondition(condition_item(451, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6400))
talkEntry:addConsequence(consequence_deleteitem(451, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 130))
talkEntry:addCondition(condition_item(451, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten bags of topaz powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 130))
talkEntry:addCondition(condition_item(451, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Topasstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 130))
talkEntry:addCondition(condition_item(451, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten bags of topaz powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 130))
talkEntry:addCondition(condition_item(451, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Topasstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.598802395))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper obsidian amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper obsidian amulets. I'll pay sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 131))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.598802395))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Obsidianamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Obsidianamulette. Ich werde dafür vierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 131))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.598802395))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper obsidian amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper obsidian amulets. I'll pay sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 131))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.598802395))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Obsidianamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Obsidianamulette. Ich werde dafür vierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 131))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 131))
talkEntry:addCondition(condition_item(3536, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6400))
talkEntry:addConsequence(consequence_deleteitem(3536, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 131))
talkEntry:addCondition(condition_item(3536, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6400))
talkEntry:addConsequence(consequence_deleteitem(3536, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 131))
talkEntry:addCondition(condition_item(3536, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper obsidian amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 131))
talkEntry:addCondition(condition_item(3536, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Obsidianamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 131))
talkEntry:addCondition(condition_item(3536, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper obsidian amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 131))
talkEntry:addCondition(condition_item(3536, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Obsidianamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.602409639))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper obsidian rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper obsidian rings. I'll pay sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 132))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.602409639))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Obsidianringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Obsidianringe. Ich werde dafür vierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 132))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.602409639))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper obsidian rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper obsidian rings. I'll pay sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 132))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.602409639))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Obsidianringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Obsidianringe. Ich werde dafür vierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 132))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 132))
talkEntry:addCondition(condition_item(3537, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6400))
talkEntry:addConsequence(consequence_deleteitem(3537, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 132))
talkEntry:addCondition(condition_item(3537, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6400))
talkEntry:addConsequence(consequence_deleteitem(3537, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 132))
talkEntry:addCondition(condition_item(3537, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper obsidian rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 132))
talkEntry:addCondition(condition_item(3537, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Obsidianringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 132))
talkEntry:addCondition(condition_item(3537, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper obsidian rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 132))
talkEntry:addCondition(condition_item(3537, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Obsidianringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.606060606))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten short swords."))
talkEntry:addResponse("A reliable client of mine has a demand for ten short swords. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 133))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.606060606))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kurzschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kurzschwerter. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 133))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.606060606))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten short swords."))
talkEntry:addResponse("A reliable client of mine has a demand for ten short swords. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 133))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.606060606))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kurzschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kurzschwerter. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 133))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 133))
talkEntry:addCondition(condition_item(78, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(78, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 133))
talkEntry:addCondition(condition_item(78, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(78, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 133))
talkEntry:addCondition(condition_item(78, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten short swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 133))
talkEntry:addCondition(condition_item(78, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kurzschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 133))
talkEntry:addCondition(condition_item(78, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten short swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 133))
talkEntry:addCondition(condition_item(78, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kurzschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.609756098))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered chain helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered chain helmets. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 134))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.609756098))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Kettenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Kettenhelme. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 134))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.609756098))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered chain helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered chain helmets. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 134))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.609756098))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Kettenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Kettenhelme. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 134))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 134))
talkEntry:addCondition(condition_item(1426, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(1426, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 134))
talkEntry:addCondition(condition_item(1426, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(1426, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 134))
talkEntry:addCondition(condition_item(1426, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silvered chain helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 134))
talkEntry:addCondition(condition_item(1426, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Kettenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 134))
talkEntry:addCondition(condition_item(1426, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silvered chain helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 134))
talkEntry:addCondition(condition_item(1426, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Kettenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.613496933))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten sharp daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten sharp daggers. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 135))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.613496933))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn scharfe Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn scharfe Dolche. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 135))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.613496933))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten sharp daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten sharp daggers. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 135))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.613496933))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn scharfe Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn scharfe Dolche. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 135))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 135))
talkEntry:addCondition(condition_item(1524, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(1524, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 135))
talkEntry:addCondition(condition_item(1524, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(1524, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 135))
talkEntry:addCondition(condition_item(1524, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten sharp daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 135))
talkEntry:addCondition(condition_item(1524, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn scharfe Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 135))
talkEntry:addCondition(condition_item(1524, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten sharp daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 135))
talkEntry:addCondition(condition_item(1524, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn scharfe Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.617283951))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten round steel hats."))
talkEntry:addResponse("A reliable client of mine has a demand for ten round steel hats. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 136))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.617283951))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn runde Stahlhüte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn runde Stahlhüte. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 136))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.617283951))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten round steel hats."))
talkEntry:addResponse("A reliable client of mine has a demand for ten round steel hats. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 136))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.617283951))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn runde Stahlhüte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn runde Stahlhüte. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 136))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 136))
talkEntry:addCondition(condition_item(2290, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(2290, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 136))
talkEntry:addCondition(condition_item(2290, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(2290, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 136))
talkEntry:addCondition(condition_item(2290, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten round steel hats. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 136))
talkEntry:addCondition(condition_item(2290, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn runde Stahlhüte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 136))
talkEntry:addCondition(condition_item(2290, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten round steel hats. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 136))
talkEntry:addCondition(condition_item(2290, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn runde Stahlhüte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.621118012))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten guardian's armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten guardian's armours. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 137))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.621118012))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Wächterrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Wächterrüstungen. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 137))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.621118012))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten guardian's armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten guardian's armours. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 137))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.621118012))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Wächterrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Wächterrüstungen. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 137))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 137))
talkEntry:addCondition(condition_item(2360, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(2360, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 137))
talkEntry:addCondition(condition_item(2360, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(2360, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 137))
talkEntry:addCondition(condition_item(2360, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten guardian's armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 137))
talkEntry:addCondition(condition_item(2360, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Wächterrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 137))
talkEntry:addCondition(condition_item(2360, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten guardian's armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 137))
talkEntry:addCondition(condition_item(2360, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Wächterrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten steel plates."))
talkEntry:addResponse("A reliable client of mine has a demand for ten steel plates. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 138))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Stahlharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Stahlharnische. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 138))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten steel plates."))
talkEntry:addResponse("A reliable client of mine has a demand for ten steel plates. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 138))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Stahlharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Stahlharnische. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 138))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 138))
talkEntry:addCondition(condition_item(2364, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(2364, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 138))
talkEntry:addCondition(condition_item(2364, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(2364, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 138))
talkEntry:addCondition(condition_item(2364, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten steel plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 138))
talkEntry:addCondition(condition_item(2364, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Stahlharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 138))
talkEntry:addCondition(condition_item(2364, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten steel plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 138))
talkEntry:addCondition(condition_item(2364, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Stahlharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.628930818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten executioner's axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten executioner's axes. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 139))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.628930818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Henkersäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Henkersäxte. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 139))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.628930818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten executioner's axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten executioner's axes. I'll pay sixty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 139))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.628930818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Henkersäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Henkersäxte. Ich werde dafür sechsundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 139))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 139))
talkEntry:addCondition(condition_item(2723, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(2723, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 139))
talkEntry:addCondition(condition_item(2723, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6600))
talkEntry:addConsequence(consequence_deleteitem(2723, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 139))
talkEntry:addCondition(condition_item(2723, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten executioner's axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 139))
talkEntry:addCondition(condition_item(2723, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Henkersäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 139))
talkEntry:addCondition(condition_item(2723, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten executioner's axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 139))
talkEntry:addCondition(condition_item(2723, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Henkersäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.632911392))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten dwarven boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten dwarven boots. I'll pay sixty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 140))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.632911392))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Zwergenstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Zwergenstiefel. Ich werde dafür achtundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 140))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.632911392))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten dwarven boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten dwarven boots. I'll pay sixty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 140))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.632911392))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Zwergenstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Zwergenstiefel. Ich werde dafür achtundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 140))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 140))
talkEntry:addCondition(condition_item(1055, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded sixty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 6800))
talkEntry:addConsequence(consequence_deleteitem(1055, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 140))
talkEntry:addCondition(condition_item(1055, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 6800))
talkEntry:addConsequence(consequence_deleteitem(1055, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 140))
talkEntry:addCondition(condition_item(1055, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten dwarven boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 140))
talkEntry:addCondition(condition_item(1055, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Zwergenstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 140))
talkEntry:addCondition(condition_item(1055, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten dwarven boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 140))
talkEntry:addCondition(condition_item(1055, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Zwergenstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.636942675))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten longaxes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten longaxes. I'll pay seventy silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 141))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.636942675))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Langäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Langäxte. Ich werde dafür siebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 141))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.636942675))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten longaxes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten longaxes. I'll pay seventy silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 141))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.636942675))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Langäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Langäxte. Ich werde dafür siebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 141))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 141))
talkEntry:addCondition(condition_item(88, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seventy silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 7000))
talkEntry:addConsequence(consequence_deleteitem(88, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 141))
talkEntry:addCondition(condition_item(88, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 7000))
talkEntry:addConsequence(consequence_deleteitem(88, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 141))
talkEntry:addCondition(condition_item(88, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten longaxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 141))
talkEntry:addCondition(condition_item(88, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Langäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 141))
talkEntry:addCondition(condition_item(88, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten longaxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 141))
talkEntry:addCondition(condition_item(88, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Langäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.641025641))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten dwarven metal gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten dwarven metal gloves. I'll pay seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 142))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.641025641))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn zwergische Metallhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn zwergische Metallhandschuhe. Ich werde dafür vierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 142))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.641025641))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten dwarven metal gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten dwarven metal gloves. I'll pay seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 142))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.641025641))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn zwergische Metallhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn zwergische Metallhandschuhe. Ich werde dafür vierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 142))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 142))
talkEntry:addCondition(condition_item(529, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seventy four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 7400))
talkEntry:addConsequence(consequence_deleteitem(529, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 142))
talkEntry:addCondition(condition_item(529, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 7400))
talkEntry:addConsequence(consequence_deleteitem(529, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 142))
talkEntry:addCondition(condition_item(529, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten dwarven metal gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 142))
talkEntry:addCondition(condition_item(529, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn zwergische Metallhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 142))
talkEntry:addCondition(condition_item(529, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten dwarven metal gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 142))
talkEntry:addCondition(condition_item(529, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn zwergische Metallhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.64516129))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of diamond powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of diamond powder. I'll pay eighty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 143))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.64516129))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Diamantstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Diamantstaub. Ich werde dafür achtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 143))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.64516129))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten bags of diamond powder."))
talkEntry:addResponse("A reliable client of mine has a demand for ten bags of diamond powder. I'll pay eighty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 143))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.64516129))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Beutel Diamantstaub."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Beutel Diamantstaub. Ich werde dafür achtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 143))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 143))
talkEntry:addCondition(condition_item(452, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8000))
talkEntry:addConsequence(consequence_deleteitem(452, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 143))
talkEntry:addCondition(condition_item(452, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8000))
talkEntry:addConsequence(consequence_deleteitem(452, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 143))
talkEntry:addCondition(condition_item(452, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten bags of diamond powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 143))
talkEntry:addCondition(condition_item(452, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Diamantstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 143))
talkEntry:addCondition(condition_item(452, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten bags of diamond powder. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 143))
talkEntry:addCondition(condition_item(452, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Beutel Diamantstaub. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.649350649))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten handcuffs."))
talkEntry:addResponse("A reliable client of mine has a demand for ten handcuffs. I'll pay eighty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 144))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.649350649))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Handfesseln."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Handfesseln. Ich werde dafür achtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 144))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.649350649))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten handcuffs."))
talkEntry:addResponse("A reliable client of mine has a demand for ten handcuffs. I'll pay eighty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 144))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.649350649))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Handfesseln."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Handfesseln. Ich werde dafür achtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 144))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 144))
talkEntry:addCondition(condition_item(466, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8000))
talkEntry:addConsequence(consequence_deleteitem(466, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 144))
talkEntry:addCondition(condition_item(466, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8000))
talkEntry:addConsequence(consequence_deleteitem(466, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 144))
talkEntry:addCondition(condition_item(466, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten handcuffs. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 144))
talkEntry:addCondition(condition_item(466, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Handfesseln. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 144))
talkEntry:addCondition(condition_item(466, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten handcuffs. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 144))
talkEntry:addCondition(condition_item(466, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Handfesseln. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.653594771))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver obsidian amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver obsidian amulets. I'll pay eighty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 145))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.653594771))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Obsidianamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Obsidianamulette. Ich werde dafür zweiundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 145))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.653594771))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver obsidian amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver obsidian amulets. I'll pay eighty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 145))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.653594771))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Obsidianamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Obsidianamulette. Ich werde dafür zweiundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 145))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 145))
talkEntry:addCondition(condition_item(3538, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8200))
talkEntry:addConsequence(consequence_deleteitem(3538, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 145))
talkEntry:addCondition(condition_item(3538, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8200))
talkEntry:addConsequence(consequence_deleteitem(3538, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 145))
talkEntry:addCondition(condition_item(3538, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver obsidian amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 145))
talkEntry:addCondition(condition_item(3538, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Obsidianamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 145))
talkEntry:addCondition(condition_item(3538, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver obsidian amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 145))
talkEntry:addCondition(condition_item(3538, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Obsidianamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.657894737))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver obsidian rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver obsidian rings. I'll pay eighty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 146))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.657894737))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Obsidianringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Obsidianringe. Ich werde dafür zweiundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 146))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.657894737))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver obsidian rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver obsidian rings. I'll pay eighty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 146))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.657894737))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Obsidianringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Obsidianringe. Ich werde dafür zweiundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 146))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 146))
talkEntry:addCondition(condition_item(3561, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8200))
talkEntry:addConsequence(consequence_deleteitem(3561, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 146))
talkEntry:addCondition(condition_item(3561, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweiundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8200))
talkEntry:addConsequence(consequence_deleteitem(3561, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 146))
talkEntry:addCondition(condition_item(3561, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver obsidian rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 146))
talkEntry:addCondition(condition_item(3561, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Obsidianringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 146))
talkEntry:addCondition(condition_item(3561, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver obsidian rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 146))
talkEntry:addCondition(condition_item(3561, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Obsidianringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.662251656))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered guardian's boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered guardian's boots. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 147))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.662251656))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Wächterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Wächterstiefel. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 147))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.662251656))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered guardian's boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered guardian's boots. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 147))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.662251656))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Wächterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Wächterstiefel. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 147))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 147))
talkEntry:addCondition(condition_item(1509, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(1509, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 147))
talkEntry:addCondition(condition_item(1509, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(1509, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 147))
talkEntry:addCondition(condition_item(1509, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten coppered guardian's boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 147))
talkEntry:addCondition(condition_item(1509, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Wächterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 147))
talkEntry:addCondition(condition_item(1509, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten coppered guardian's boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 147))
talkEntry:addCondition(condition_item(1509, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Wächterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered steel boots. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 148))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Stahlschuhe. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 148))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered steel boots. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 148))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Stahlschuhe. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 148))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 148))
talkEntry:addCondition(condition_item(1516, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(1516, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 148))
talkEntry:addCondition(condition_item(1516, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(1516, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 148))
talkEntry:addCondition(condition_item(1516, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silvered steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 148))
talkEntry:addCondition(condition_item(1516, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 148))
talkEntry:addCondition(condition_item(1516, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silvered steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 148))
talkEntry:addCondition(condition_item(1516, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.67114094))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten flamberges."))
talkEntry:addResponse("A reliable client of mine has a demand for ten flamberges. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 149))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.67114094))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Flamberges."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Flamberges. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 149))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.67114094))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten flamberges."))
talkEntry:addResponse("A reliable client of mine has a demand for ten flamberges. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 149))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.67114094))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Flamberges."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Flamberges. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 149))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 149))
talkEntry:addCondition(condition_item(1525, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(1525, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 149))
talkEntry:addCondition(condition_item(1525, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(1525, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 149))
talkEntry:addCondition(condition_item(1525, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten flamberges. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 149))
talkEntry:addCondition(condition_item(1525, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Flamberges. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 149))
talkEntry:addCondition(condition_item(1525, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten flamberges. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 149))
talkEntry:addCondition(condition_item(1525, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Flamberges. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.675675676))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten iron greaves. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 150))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.675675676))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Eisenbeinschienen. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 150))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.675675676))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten iron greaves. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 150))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.675675676))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Eisenbeinschienen. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 150))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 150))
talkEntry:addCondition(condition_item(2116, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(2116, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 150))
talkEntry:addCondition(condition_item(2116, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(2116, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 150))
talkEntry:addCondition(condition_item(2116, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 150))
talkEntry:addCondition(condition_item(2116, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 150))
talkEntry:addCondition(condition_item(2116, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 150))
talkEntry:addCondition(condition_item(2116, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.680272109))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scale greaves. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 151))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.680272109))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Schuppenbeinschienen. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 151))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.680272109))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scale greaves. I'll pay eighty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 151))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.680272109))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Schuppenbeinschienen. Ich werde dafür achtundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 151))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 151))
talkEntry:addCondition(condition_item(2193, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded eighty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(2193, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 151))
talkEntry:addCondition(condition_item(2193, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst achtundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 8800))
talkEntry:addConsequence(consequence_deleteitem(2193, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 151))
talkEntry:addCondition(condition_item(2193, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 151))
talkEntry:addCondition(condition_item(2193, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 151))
talkEntry:addCondition(condition_item(2193, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 151))
talkEntry:addCondition(condition_item(2193, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.684931507))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten salkamaerian chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten salkamaerian chain gloves. I'll pay ninety six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 152))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.684931507))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn salkamaerische Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn salkamaerische Kettenhandschuhe. Ich werde dafür sechsundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 152))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.684931507))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten salkamaerian chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten salkamaerian chain gloves. I'll pay ninety six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 152))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.684931507))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn salkamaerische Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn salkamaerische Kettenhandschuhe. Ich werde dafür sechsundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 152))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 152))
talkEntry:addCondition(condition_item(528, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded ninety six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 9600))
talkEntry:addConsequence(consequence_deleteitem(528, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 152))
talkEntry:addCondition(condition_item(528, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 9600))
talkEntry:addConsequence(consequence_deleteitem(528, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 152))
talkEntry:addCondition(condition_item(528, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten salkamaerian chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 152))
talkEntry:addCondition(condition_item(528, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn salkamaerische Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 152))
talkEntry:addCondition(condition_item(528, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten salkamaerian chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 152))
talkEntry:addCondition(condition_item(528, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn salkamaerische Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.689655172))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten gilded steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten gilded steel gloves. I'll pay ninety six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 153))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.689655172))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn vergoldete Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn vergoldete Stahlhandschuhe. Ich werde dafür sechsundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 153))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.689655172))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten gilded steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten gilded steel gloves. I'll pay ninety six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 153))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.689655172))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn vergoldete Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn vergoldete Stahlhandschuhe. Ich werde dafür sechsundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 153))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 153))
talkEntry:addCondition(condition_item(1474, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded ninety six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 9600))
talkEntry:addConsequence(consequence_deleteitem(1474, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 153))
talkEntry:addCondition(condition_item(1474, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechsundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 9600))
talkEntry:addConsequence(consequence_deleteitem(1474, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 153))
talkEntry:addCondition(condition_item(1474, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten gilded steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 153))
talkEntry:addCondition(condition_item(1474, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn vergoldete Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 153))
talkEntry:addCondition(condition_item(1474, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten gilded steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 153))
talkEntry:addCondition(condition_item(1474, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn vergoldete Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.694444444))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten oil lamps."))
talkEntry:addResponse("A reliable client of mine has a demand for ten oil lamps. I'll pay one hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 154))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.694444444))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Öllampen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Öllampen. Ich werde dafür einhundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 154))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.694444444))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten oil lamps."))
talkEntry:addResponse("A reliable client of mine has a demand for ten oil lamps. I'll pay one hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 154))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.694444444))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Öllampen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Öllampen. Ich werde dafür einhundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 154))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 154))
talkEntry:addCondition(condition_item(92, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10000))
talkEntry:addConsequence(consequence_deleteitem(92, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 154))
talkEntry:addCondition(condition_item(92, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundert Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10000))
talkEntry:addConsequence(consequence_deleteitem(92, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 154))
talkEntry:addCondition(condition_item(92, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten oil lamps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 154))
talkEntry:addCondition(condition_item(92, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Öllampen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 154))
talkEntry:addCondition(condition_item(92, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten oil lamps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 154))
talkEntry:addCondition(condition_item(92, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Öllampen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.699300699))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten merinium ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten merinium ingots. I'll pay one hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 155))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.699300699))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Meriniumbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Meriniumbarren. Ich werde dafür einhundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 155))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.699300699))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten merinium ingots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten merinium ingots. I'll pay one hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 155))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.699300699))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Meriniumbarren."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Meriniumbarren. Ich werde dafür einhundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 155))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 155))
talkEntry:addCondition(condition_item(2571, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10000))
talkEntry:addConsequence(consequence_deleteitem(2571, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 155))
talkEntry:addCondition(condition_item(2571, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundert Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10000))
talkEntry:addConsequence(consequence_deleteitem(2571, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 155))
talkEntry:addCondition(condition_item(2571, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten merinium ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 155))
talkEntry:addCondition(condition_item(2571, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Meriniumbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 155))
talkEntry:addCondition(condition_item(2571, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten merinium ingots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 155))
talkEntry:addCondition(condition_item(2571, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Meriniumbarren. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.704225352))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten serinjah swords."))
talkEntry:addResponse("A reliable client of mine has a demand for ten serinjah swords. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 156))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.704225352))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Serinjahschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Serinjahschwerter. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 156))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.704225352))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten serinjah swords."))
talkEntry:addResponse("A reliable client of mine has a demand for ten serinjah swords. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 156))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.704225352))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Serinjahschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Serinjahschwerter. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 156))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 156))
talkEntry:addCondition(condition_item(1, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(1, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 156))
talkEntry:addCondition(condition_item(1, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertzwei Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(1, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 156))
talkEntry:addCondition(condition_item(1, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten serinjah swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 156))
talkEntry:addCondition(condition_item(1, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Serinjahschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 156))
talkEntry:addCondition(condition_item(1, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten serinjah swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 156))
talkEntry:addCondition(condition_item(1, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Serinjahschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.709219858))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered daggers. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 157))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.709219858))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Dolche. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 157))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.709219858))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered daggers. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 157))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.709219858))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Dolche. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 157))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 157))
talkEntry:addCondition(condition_item(398, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(398, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 157))
talkEntry:addCondition(condition_item(398, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertzwei Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(398, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 157))
talkEntry:addCondition(condition_item(398, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten coppered daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 157))
talkEntry:addCondition(condition_item(398, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 157))
talkEntry:addCondition(condition_item(398, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten coppered daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 157))
talkEntry:addCondition(condition_item(398, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.714285714))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scale armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scale armours. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 158))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.714285714))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Schuppenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Schuppenpanzer. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 158))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.714285714))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scale armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scale armours. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 158))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.714285714))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Schuppenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Schuppenpanzer. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 158))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 158))
talkEntry:addCondition(condition_item(1095, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(1095, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 158))
talkEntry:addCondition(condition_item(1095, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertzwei Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(1095, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 158))
talkEntry:addCondition(condition_item(1095, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten scale armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 158))
talkEntry:addCondition(condition_item(1095, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Schuppenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 158))
talkEntry:addCondition(condition_item(1095, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten scale armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 158))
talkEntry:addCondition(condition_item(1095, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Schuppenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.71942446))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered plate armours. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 159))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.71942446))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Plattenpanzer. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 159))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.71942446))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered plate armours. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 159))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.71942446))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Plattenpanzer. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 159))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 159))
talkEntry:addCondition(condition_item(1443, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(1443, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 159))
talkEntry:addCondition(condition_item(1443, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertzwei Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(1443, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 159))
talkEntry:addCondition(condition_item(1443, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten coppered plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 159))
talkEntry:addCondition(condition_item(1443, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 159))
talkEntry:addCondition(condition_item(1443, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten coppered plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 159))
talkEntry:addCondition(condition_item(1443, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.724637681))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten battle axes. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 160))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.724637681))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Streitäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Streitäxte. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 160))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.724637681))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten battle axes. I'll pay one hundred two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 160))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.724637681))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Streitäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Streitäxte. Ich werde dafür einhundertzwei Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 160))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 160))
talkEntry:addCondition(condition_item(2946, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(2946, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 160))
talkEntry:addCondition(condition_item(2946, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertzwei Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10200))
talkEntry:addConsequence(consequence_deleteitem(2946, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 160))
talkEntry:addCondition(condition_item(2946, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 160))
talkEntry:addCondition(condition_item(2946, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Streitäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 160))
talkEntry:addCondition(condition_item(2946, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 160))
talkEntry:addCondition(condition_item(2946, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Streitäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.729927007))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden obsidian amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden obsidian amulets. I'll pay one hundred six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 161))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.729927007))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Obsidianketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Obsidianketten. Ich werde dafür einhundertsechs Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 161))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.729927007))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden obsidian amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden obsidian amulets. I'll pay one hundred six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 161))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.729927007))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Obsidianketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Obsidianketten. Ich werde dafür einhundertsechs Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 161))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 161))
talkEntry:addCondition(condition_item(82, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10600))
talkEntry:addConsequence(consequence_deleteitem(82, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 161))
talkEntry:addCondition(condition_item(82, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechs Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10600))
talkEntry:addConsequence(consequence_deleteitem(82, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 161))
talkEntry:addCondition(condition_item(82, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden obsidian amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 161))
talkEntry:addCondition(condition_item(82, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Obsidianketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 161))
talkEntry:addCondition(condition_item(82, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden obsidian amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 161))
talkEntry:addCondition(condition_item(82, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Obsidianketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.735294118))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden obsidian rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden obsidian rings. I'll pay one hundred six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 162))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.735294118))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Obsidianringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Obsidianringe. Ich werde dafür einhundertsechs Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 162))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.735294118))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten golden obsidian rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten golden obsidian rings. I'll pay one hundred six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 162))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.735294118))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn goldene Obsidianringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn goldene Obsidianringe. Ich werde dafür einhundertsechs Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 162))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 162))
talkEntry:addCondition(condition_item(278, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10600))
talkEntry:addConsequence(consequence_deleteitem(278, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 162))
talkEntry:addCondition(condition_item(278, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechs Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10600))
talkEntry:addConsequence(consequence_deleteitem(278, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 162))
talkEntry:addCondition(condition_item(278, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten golden obsidian rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 162))
talkEntry:addCondition(condition_item(278, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Obsidianringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 162))
talkEntry:addCondition(condition_item(278, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten golden obsidian rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 162))
talkEntry:addCondition(condition_item(278, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn goldene Obsidianringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.740740741))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten pot helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten pot helmets. I'll pay one hundred ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 163))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.740740741))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Topfhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Topfhelme. Ich werde dafür einhundertzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 163))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.740740741))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten pot helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten pot helmets. I'll pay one hundred ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 163))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.740740741))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Topfhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Topfhelme. Ich werde dafür einhundertzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 163))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 163))
talkEntry:addCondition(condition_item(94, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred ten silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11000))
talkEntry:addConsequence(consequence_deleteitem(94, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 163))
talkEntry:addCondition(condition_item(94, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11000))
talkEntry:addConsequence(consequence_deleteitem(94, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 163))
talkEntry:addCondition(condition_item(94, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten pot helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 163))
talkEntry:addCondition(condition_item(94, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Topfhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 163))
talkEntry:addCondition(condition_item(94, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten pot helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 163))
talkEntry:addCondition(condition_item(94, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Topfhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.746268657))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten storm caps."))
talkEntry:addResponse("A reliable client of mine has a demand for ten storm caps. I'll pay one hundred ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 164))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.746268657))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Sturmhauben."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Sturmhauben. Ich werde dafür einhundertzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 164))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.746268657))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten storm caps."))
talkEntry:addResponse("A reliable client of mine has a demand for ten storm caps. I'll pay one hundred ten silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 164))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.746268657))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Sturmhauben."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Sturmhauben. Ich werde dafür einhundertzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 164))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 164))
talkEntry:addCondition(condition_item(2441, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred ten silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11000))
talkEntry:addConsequence(consequence_deleteitem(2441, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 164))
talkEntry:addCondition(condition_item(2441, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11000))
talkEntry:addConsequence(consequence_deleteitem(2441, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 164))
talkEntry:addCondition(condition_item(2441, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten storm caps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 164))
talkEntry:addCondition(condition_item(2441, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Sturmhauben. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 164))
talkEntry:addCondition(condition_item(2441, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten storm caps. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 164))
talkEntry:addCondition(condition_item(2441, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Sturmhauben. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.751879699))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten diadems."))
talkEntry:addResponse("A reliable client of mine has a demand for ten diadems. I'll pay one hundred sixteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 165))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.751879699))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Diademe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Diademe. Ich werde dafür einhundertsechzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 165))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.751879699))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten diadems."))
talkEntry:addResponse("A reliable client of mine has a demand for ten diadems. I'll pay one hundred sixteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 165))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.751879699))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Diademe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Diademe. Ich werde dafür einhundertsechzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 165))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 165))
talkEntry:addCondition(condition_item(465, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred sixteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11600))
talkEntry:addConsequence(consequence_deleteitem(465, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 165))
talkEntry:addCondition(condition_item(465, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11600))
talkEntry:addConsequence(consequence_deleteitem(465, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 165))
talkEntry:addCondition(condition_item(465, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten diadems. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 165))
talkEntry:addCondition(condition_item(465, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Diademe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 165))
talkEntry:addCondition(condition_item(465, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten diadems. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 165))
talkEntry:addCondition(condition_item(465, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Diademe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.757575758))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel plates."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel plates. I'll pay one hundred thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 166))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.757575758))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlharnische. Ich werde dafür einhundertvierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 166))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.757575758))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced steel plates."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced steel plates. I'll pay one hundred thirty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 166))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.757575758))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Stahlharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Stahlharnische. Ich werde dafür einhundertvierunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 166))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 166))
talkEntry:addCondition(condition_item(1442, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 13400))
talkEntry:addConsequence(consequence_deleteitem(1442, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 166))
talkEntry:addCondition(condition_item(1442, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 13400))
talkEntry:addConsequence(consequence_deleteitem(1442, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 166))
talkEntry:addCondition(condition_item(1442, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced steel plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 166))
talkEntry:addCondition(condition_item(1442, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 166))
talkEntry:addCondition(condition_item(1442, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced steel plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 166))
talkEntry:addCondition(condition_item(1442, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Stahlharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.763358779))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten greatswords."))
talkEntry:addResponse("A reliable client of mine has a demand for ten greatswords. I'll pay one hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 167))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.763358779))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Großschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Großschwerter. Ich werde dafür einhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 167))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.763358779))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten greatswords."))
talkEntry:addResponse("A reliable client of mine has a demand for ten greatswords. I'll pay one hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 167))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.763358779))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Großschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Großschwerter. Ich werde dafür einhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 167))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 167))
talkEntry:addCondition(condition_item(204, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 13600))
talkEntry:addConsequence(consequence_deleteitem(204, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 167))
talkEntry:addCondition(condition_item(204, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 13600))
talkEntry:addConsequence(consequence_deleteitem(204, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 167))
talkEntry:addCondition(condition_item(204, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten greatswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 167))
talkEntry:addCondition(condition_item(204, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Großschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 167))
talkEntry:addCondition(condition_item(204, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten greatswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 167))
talkEntry:addCondition(condition_item(204, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Großschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.769230769))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper sapphire rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper sapphire rings. I'll pay one hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 168))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.769230769))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Saphirringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Saphirringe. Ich werde dafür einhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 168))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.769230769))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper sapphire rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper sapphire rings. I'll pay one hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 168))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.769230769))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Saphirringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Saphirringe. Ich werde dafür einhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 168))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 168))
talkEntry:addCondition(condition_item(3542, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 13600))
talkEntry:addConsequence(consequence_deleteitem(3542, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 168))
talkEntry:addCondition(condition_item(3542, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 13600))
talkEntry:addConsequence(consequence_deleteitem(3542, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 168))
talkEntry:addCondition(condition_item(3542, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper sapphire rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 168))
talkEntry:addCondition(condition_item(3542, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Saphirringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 168))
talkEntry:addCondition(condition_item(3542, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper sapphire rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 168))
talkEntry:addCondition(condition_item(3542, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Saphirringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.775193798))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper sapphire amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper sapphire amulets. I'll pay one hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 169))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.775193798))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Saphiramulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Saphiramulette. Ich werde dafür einhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 169))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.775193798))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten copper sapphire amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten copper sapphire amulets. I'll pay one hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 169))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.775193798))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn kupferne Saphiramulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn kupferne Saphiramulette. Ich werde dafür einhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 169))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 169))
talkEntry:addCondition(condition_item(3559, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 13600))
talkEntry:addConsequence(consequence_deleteitem(3559, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 169))
talkEntry:addCondition(condition_item(3559, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 13600))
talkEntry:addConsequence(consequence_deleteitem(3559, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 169))
talkEntry:addCondition(condition_item(3559, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten copper sapphire amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 169))
talkEntry:addCondition(condition_item(3559, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Saphiramulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 169))
talkEntry:addCondition(condition_item(3559, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten copper sapphire amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 169))
talkEntry:addCondition(condition_item(3559, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn kupferne Saphiramulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.78125))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten lanterns."))
talkEntry:addResponse("A reliable client of mine has a demand for ten lanterns. I'll pay one hundred forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 170))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.78125))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Laternen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Laternen. Ich werde dafür einhundertvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 170))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.78125))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten lanterns."))
talkEntry:addResponse("A reliable client of mine has a demand for ten lanterns. I'll pay one hundred forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 170))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.78125))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Laternen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Laternen. Ich werde dafür einhundertvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 170))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 170))
talkEntry:addCondition(condition_item(393, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14000))
talkEntry:addConsequence(consequence_deleteitem(393, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 170))
talkEntry:addCondition(condition_item(393, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14000))
talkEntry:addConsequence(consequence_deleteitem(393, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 170))
talkEntry:addCondition(condition_item(393, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten lanterns. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 170))
talkEntry:addCondition(condition_item(393, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Laternen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 170))
talkEntry:addCondition(condition_item(393, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten lanterns. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 170))
talkEntry:addCondition(condition_item(393, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Laternen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.787401575))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten albarian steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten albarian steel boots. I'll pay one hundred forty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 171))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.787401575))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn albarische Stahlstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn albarische Stahlstiefel. Ich werde dafür einhundertzweiundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 171))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.787401575))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten albarian steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for ten albarian steel boots. I'll pay one hundred forty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 171))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.787401575))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn albarische Stahlstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn albarische Stahlstiefel. Ich werde dafür einhundertzweiundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 171))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 171))
talkEntry:addCondition(condition_item(771, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14200))
talkEntry:addConsequence(consequence_deleteitem(771, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 171))
talkEntry:addCondition(condition_item(771, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertzweiundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14200))
talkEntry:addConsequence(consequence_deleteitem(771, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 171))
talkEntry:addCondition(condition_item(771, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten albarian steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 171))
talkEntry:addCondition(condition_item(771, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn albarische Stahlstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 171))
talkEntry:addCondition(condition_item(771, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten albarian steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 171))
talkEntry:addCondition(condition_item(771, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn albarische Stahlstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.793650794))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced scale greaves. I'll pay one hundred forty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 172))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.793650794))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Schuppenbeinschienen. Ich werde dafür einhundertsechsundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 172))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.793650794))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced scale greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced scale greaves. I'll pay one hundred forty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 172))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.793650794))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Schuppenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Schuppenbeinschienen. Ich werde dafür einhundertsechsundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 172))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 172))
talkEntry:addCondition(condition_item(1488, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14600))
talkEntry:addConsequence(consequence_deleteitem(1488, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 172))
talkEntry:addCondition(condition_item(1488, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechsundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14600))
talkEntry:addConsequence(consequence_deleteitem(1488, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 172))
talkEntry:addCondition(condition_item(1488, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 172))
talkEntry:addCondition(condition_item(1488, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 172))
talkEntry:addCondition(condition_item(1488, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced scale greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 172))
talkEntry:addCondition(condition_item(1488, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Schuppenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.8))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced iron greaves. I'll pay one hundred forty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 173))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.8))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Eisenbeinschienen. Ich werde dafür einhundertsechsundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 173))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.8))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced iron greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced iron greaves. I'll pay one hundred forty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 173))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.8))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Eisenbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Eisenbeinschienen. Ich werde dafür einhundertsechsundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 173))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 173))
talkEntry:addCondition(condition_item(1495, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14600))
talkEntry:addConsequence(consequence_deleteitem(1495, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 173))
talkEntry:addCondition(condition_item(1495, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechsundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14600))
talkEntry:addConsequence(consequence_deleteitem(1495, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 173))
talkEntry:addCondition(condition_item(1495, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 173))
talkEntry:addCondition(condition_item(1495, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 173))
talkEntry:addCondition(condition_item(1495, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced iron greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 173))
talkEntry:addCondition(condition_item(1495, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Eisenbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.806451613))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten gilded chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten gilded chain gloves. I'll pay one hundred fifty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 174))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.806451613))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn vergoldete Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn vergoldete Kettenhandschuhe. Ich werde dafür einhundertvierundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 174))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.806451613))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten gilded chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten gilded chain gloves. I'll pay one hundred fifty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 174))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.806451613))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn vergoldete Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn vergoldete Kettenhandschuhe. Ich werde dafür einhundertvierundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 174))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 174))
talkEntry:addCondition(condition_item(1465, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred fifty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 15400))
talkEntry:addConsequence(consequence_deleteitem(1465, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 174))
talkEntry:addCondition(condition_item(1465, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 15400))
talkEntry:addConsequence(consequence_deleteitem(1465, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 174))
talkEntry:addCondition(condition_item(1465, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten gilded chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 174))
talkEntry:addCondition(condition_item(1465, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn vergoldete Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 174))
talkEntry:addCondition(condition_item(1465, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten gilded chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 174))
talkEntry:addCondition(condition_item(1465, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn vergoldete Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.81300813))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten squire's gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten squire's gloves. I'll pay one hundred fifty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 175))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.81300813))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Knappenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Knappenhandschuhe. Ich werde dafür einhundertvierundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 175))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.81300813))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten squire's gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for ten squire's gloves. I'll pay one hundred fifty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 175))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.81300813))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Knappenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Knappenhandschuhe. Ich werde dafür einhundertvierundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 175))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 175))
talkEntry:addCondition(condition_item(1475, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred fifty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 15400))
talkEntry:addConsequence(consequence_deleteitem(1475, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 175))
talkEntry:addCondition(condition_item(1475, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 15400))
talkEntry:addConsequence(consequence_deleteitem(1475, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 175))
talkEntry:addCondition(condition_item(1475, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten squire's gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 175))
talkEntry:addCondition(condition_item(1475, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Knappenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 175))
talkEntry:addCondition(condition_item(1475, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten squire's gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 175))
talkEntry:addCondition(condition_item(1475, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Knappenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.819672131))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten crowns."))
talkEntry:addResponse("A reliable client of mine has a demand for ten crowns. I'll pay one hundred sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 176))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.819672131))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kronen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kronen. Ich werde dafür einhundertvierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 176))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.819672131))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten crowns."))
talkEntry:addResponse("A reliable client of mine has a demand for ten crowns. I'll pay one hundred sixty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 176))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.819672131))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Kronen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Kronen. Ich werde dafür einhundertvierundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 176))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 176))
talkEntry:addCondition(condition_item(225, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred sixty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 16400))
talkEntry:addConsequence(consequence_deleteitem(225, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 176))
talkEntry:addCondition(condition_item(225, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 16400))
talkEntry:addConsequence(consequence_deleteitem(225, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 176))
talkEntry:addCondition(condition_item(225, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten crowns. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 176))
talkEntry:addCondition(condition_item(225, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kronen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 176))
talkEntry:addCondition(condition_item(225, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten crowns. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 176))
talkEntry:addCondition(condition_item(225, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Kronen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.826446281))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten ornate daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten ornate daggers. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 177))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.826446281))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verzierte Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verzierte Dolche. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 177))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.826446281))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten ornate daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for ten ornate daggers. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 177))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.826446281))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verzierte Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verzierte Dolche. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 177))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 177))
talkEntry:addCondition(condition_item(190, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(190, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 177))
talkEntry:addCondition(condition_item(190, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(190, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 177))
talkEntry:addCondition(condition_item(190, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten ornate daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 177))
talkEntry:addCondition(condition_item(190, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verzierte Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 177))
talkEntry:addCondition(condition_item(190, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten ornate daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 177))
talkEntry:addCondition(condition_item(190, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verzierte Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.833333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered battle axes. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 178))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.833333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Kriegsäxte. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 178))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.833333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten coppered battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for ten coppered battle axes. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 178))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.833333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verkupferte Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verkupferte Kriegsäxte. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 178))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 178))
talkEntry:addCondition(condition_item(192, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(192, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 178))
talkEntry:addCondition(condition_item(192, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(192, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 178))
talkEntry:addCondition(condition_item(192, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten coppered battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 178))
talkEntry:addCondition(condition_item(192, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 178))
talkEntry:addCondition(condition_item(192, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten coppered battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 178))
talkEntry:addCondition(condition_item(192, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verkupferte Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.840336134))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered plate armours. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 179))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.840336134))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Plattenpanzer. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 179))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.840336134))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silvered plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silvered plate armours. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 179))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.840336134))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn versilberte Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn versilberte Plattenpanzer. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 179))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 179))
talkEntry:addCondition(condition_item(1444, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(1444, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 179))
talkEntry:addCondition(condition_item(1444, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(1444, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 179))
talkEntry:addCondition(condition_item(1444, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silvered plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 179))
talkEntry:addCondition(condition_item(1444, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 179))
talkEntry:addCondition(condition_item(1444, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silvered plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 179))
talkEntry:addCondition(condition_item(1444, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn versilberte Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.847457627))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silversteel armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silversteel armours. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 180))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.847457627))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Silberstahlrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Silberstahlrüstungen. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 180))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.847457627))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silversteel armours."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silversteel armours. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 180))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.847457627))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Silberstahlrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Silberstahlrüstungen. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 180))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 180))
talkEntry:addCondition(condition_item(2403, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(2403, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 180))
talkEntry:addCondition(condition_item(2403, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(2403, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 180))
talkEntry:addCondition(condition_item(2403, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silversteel armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 180))
talkEntry:addCondition(condition_item(2403, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Silberstahlrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 180))
talkEntry:addCondition(condition_item(2403, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silversteel armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 180))
talkEntry:addCondition(condition_item(2403, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Silberstahlrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.854700855))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scimitars."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scimitars. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 181))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.854700855))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Krummsäbel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Krummsäbel. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 181))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.854700855))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten scimitars."))
talkEntry:addResponse("A reliable client of mine has a demand for ten scimitars. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 181))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.854700855))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn Krummsäbel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn Krummsäbel. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 181))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 181))
talkEntry:addCondition(condition_item(2757, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(2757, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 181))
talkEntry:addCondition(condition_item(2757, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(2757, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 181))
talkEntry:addCondition(condition_item(2757, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten scimitars. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 181))
talkEntry:addCondition(condition_item(2757, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Krummsäbel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 181))
talkEntry:addCondition(condition_item(2757, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten scimitars. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 181))
talkEntry:addCondition(condition_item(2757, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn Krummsäbel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.862068966))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver sapphire amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver sapphire amulets. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 182))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.862068966))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Saphiramulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Saphiramulette. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 182))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.862068966))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver sapphire amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver sapphire amulets. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 182))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.862068966))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Saphiramulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Saphiramulette. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 182))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 182))
talkEntry:addCondition(condition_item(3543, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(3543, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 182))
talkEntry:addCondition(condition_item(3543, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(3543, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 182))
talkEntry:addCondition(condition_item(3543, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver sapphire amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 182))
talkEntry:addCondition(condition_item(3543, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Saphiramulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 182))
talkEntry:addCondition(condition_item(3543, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver sapphire amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 182))
talkEntry:addCondition(condition_item(3543, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Saphiramulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.869565217))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver sapphire rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver sapphire rings. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 183))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.869565217))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Saphirringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Saphirringe. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 183))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.869565217))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten silver sapphire rings."))
talkEntry:addResponse("A reliable client of mine has a demand for ten silver sapphire rings. I'll pay one hundred seventy four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 183))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.869565217))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn silberne Saphirringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn silberne Saphirringe. Ich werde dafür einhundertvierundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 183))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 183))
talkEntry:addCondition(condition_item(3544, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(3544, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 183))
talkEntry:addCondition(condition_item(3544, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17400))
talkEntry:addConsequence(consequence_deleteitem(3544, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 183))
talkEntry:addCondition(condition_item(3544, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten silver sapphire rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 183))
talkEntry:addCondition(condition_item(3544, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Saphirringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 183))
talkEntry:addCondition(condition_item(3544, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten silver sapphire rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 183))
talkEntry:addCondition(condition_item(3544, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn silberne Saphirringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.877192982))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten gilded chain helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten gilded chain helmets. I'll pay one hundred seventy six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 184))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.877192982))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn vergoldete Kettenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn vergoldete Kettenhelme. Ich werde dafür einhundertsechsundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 184))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.877192982))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten gilded chain helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten gilded chain helmets. I'll pay one hundred seventy six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 184))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.877192982))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn vergoldete Kettenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn vergoldete Kettenhelme. Ich werde dafür einhundertsechsundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 184))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 184))
talkEntry:addCondition(condition_item(1427, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17600))
talkEntry:addConsequence(consequence_deleteitem(1427, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 184))
talkEntry:addCondition(condition_item(1427, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechsundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17600))
talkEntry:addConsequence(consequence_deleteitem(1427, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 184))
talkEntry:addCondition(condition_item(1427, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten gilded chain helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 184))
talkEntry:addCondition(condition_item(1427, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn vergoldete Kettenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 184))
talkEntry:addCondition(condition_item(1427, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten gilded chain helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 184))
talkEntry:addCondition(condition_item(1427, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn vergoldete Kettenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.884955752))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced pot helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced pot helmets. I'll pay one hundred seventy six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 185))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.884955752))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Topfhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Topfhelme. Ich werde dafür einhundertsechsundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 185))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.884955752))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get ten reinforced pot helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for ten reinforced pot helmets. I'll pay one hundred seventy six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 185))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.884955752))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe zehn verstärkte Topfhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt zehn verstärkte Topfhelme. Ich werde dafür einhundertsechsundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 185))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 185))
talkEntry:addCondition(condition_item(1431, "all", "=>", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17600))
talkEntry:addConsequence(consequence_deleteitem(1431, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 185))
talkEntry:addCondition(condition_item(1431, "all", "=>", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechsundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17600))
talkEntry:addConsequence(consequence_deleteitem(1431, 10, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 185))
talkEntry:addCondition(condition_item(1431, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires ten reinforced pot helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 185))
talkEntry:addCondition(condition_item(1431, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Topfhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 185))
talkEntry:addCondition(condition_item(1431, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires ten reinforced pot helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 185))
talkEntry:addCondition(condition_item(1431, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt zehn verstärkte Topfhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.892857143))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered guardian's boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered guardian's boots. I'll pay one hundred eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 186))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.892857143))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Wächterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Wächterstiefel. Ich werde dafür einhundertacht Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 186))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.892857143))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered guardian's boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered guardian's boots. I'll pay one hundred eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 186))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.892857143))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Wächterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Wächterstiefel. Ich werde dafür einhundertacht Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 186))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 186))
talkEntry:addCondition(condition_item(1510, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10800))
talkEntry:addConsequence(consequence_deleteitem(1510, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 186))
talkEntry:addCondition(condition_item(1510, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertacht Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10800))
talkEntry:addConsequence(consequence_deleteitem(1510, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 186))
talkEntry:addCondition(condition_item(1510, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silvered guardian's boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 186))
talkEntry:addCondition(condition_item(1510, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Wächterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 186))
talkEntry:addCondition(condition_item(1510, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silvered guardian's boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 186))
talkEntry:addCondition(condition_item(1510, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Wächterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.900900901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded steel boots. I'll pay one hundred eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 187))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.900900901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Stahlschuhe. Ich werde dafür einhundertacht Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 187))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.900900901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded steel boots. I'll pay one hundred eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 187))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.900900901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Stahlschuhe. Ich werde dafür einhundertacht Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 187))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 187))
talkEntry:addCondition(condition_item(1517, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10800))
talkEntry:addConsequence(consequence_deleteitem(1517, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 187))
talkEntry:addCondition(condition_item(1517, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertacht Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10800))
talkEntry:addConsequence(consequence_deleteitem(1517, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 187))
talkEntry:addCondition(condition_item(1517, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gilded steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 187))
talkEntry:addCondition(condition_item(1517, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 187))
talkEntry:addCondition(condition_item(1517, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gilded steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 187))
talkEntry:addCondition(condition_item(1517, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.909090909))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden sapphire amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden sapphire amulets. I'll pay one hundred nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 188))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.909090909))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Saphirketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Saphirketten. Ich werde dafür einhundertneun Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 188))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.909090909))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden sapphire amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden sapphire amulets. I'll pay one hundred nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 188))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.909090909))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Saphirketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Saphirketten. Ich werde dafür einhundertneun Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 188))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 188))
talkEntry:addCondition(condition_item(71, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10900))
talkEntry:addConsequence(consequence_deleteitem(71, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 188))
talkEntry:addCondition(condition_item(71, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertneun Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10900))
talkEntry:addConsequence(consequence_deleteitem(71, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 188))
talkEntry:addCondition(condition_item(71, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five golden sapphire amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 188))
talkEntry:addCondition(condition_item(71, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Saphirketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 188))
talkEntry:addCondition(condition_item(71, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five golden sapphire amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 188))
talkEntry:addCondition(condition_item(71, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Saphirketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.917431193))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden sapphire rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden sapphire rings. I'll pay one hundred nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 189))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.917431193))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Saphirringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Saphirringe. Ich werde dafür einhundertneun Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 189))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.917431193))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden sapphire rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden sapphire rings. I'll pay one hundred nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 189))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.917431193))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Saphirringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Saphirringe. Ich werde dafür einhundertneun Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 189))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 189))
talkEntry:addCondition(condition_item(279, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 10900))
talkEntry:addConsequence(consequence_deleteitem(279, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 189))
talkEntry:addCondition(condition_item(279, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertneun Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 10900))
talkEntry:addConsequence(consequence_deleteitem(279, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 189))
talkEntry:addCondition(condition_item(279, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five golden sapphire rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 189))
talkEntry:addCondition(condition_item(279, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Saphirringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 189))
talkEntry:addCondition(condition_item(279, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five golden sapphire rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 189))
talkEntry:addCondition(condition_item(279, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Saphirringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.925925926))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five queen's crowns."))
talkEntry:addResponse("A reliable client of mine has a demand for five queen's crowns. I'll pay one hundred thirteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 190))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.925925926))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Königinnenkronen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Königinnenkronen. Ich werde dafür einhundertdreizehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 190))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.925925926))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five queen's crowns."))
talkEntry:addResponse("A reliable client of mine has a demand for five queen's crowns. I'll pay one hundred thirteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 190))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.925925926))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Königinnenkronen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Königinnenkronen. Ich werde dafür einhundertdreizehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 190))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 190))
talkEntry:addCondition(condition_item(3556, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11300))
talkEntry:addConsequence(consequence_deleteitem(3556, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 190))
talkEntry:addCondition(condition_item(3556, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertdreizehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11300))
talkEntry:addConsequence(consequence_deleteitem(3556, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 190))
talkEntry:addCondition(condition_item(3556, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five queen's crowns. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 190))
talkEntry:addCondition(condition_item(3556, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Königinnenkronen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 190))
talkEntry:addCondition(condition_item(3556, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five queen's crowns. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 190))
talkEntry:addCondition(condition_item(3556, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Königinnenkronen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.934579439))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five king's crowns."))
talkEntry:addResponse("A reliable client of mine has a demand for five king's crowns. I'll pay one hundred thirteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 191))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.934579439))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Königskronen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Königskronen. Ich werde dafür einhundertdreizehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 191))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.934579439))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five king's crowns."))
talkEntry:addResponse("A reliable client of mine has a demand for five king's crowns. I'll pay one hundred thirteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 191))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.934579439))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Königskronen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Königskronen. Ich werde dafür einhundertdreizehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 191))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 191))
talkEntry:addCondition(condition_item(3557, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11300))
talkEntry:addConsequence(consequence_deleteitem(3557, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 191))
talkEntry:addCondition(condition_item(3557, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertdreizehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11300))
talkEntry:addConsequence(consequence_deleteitem(3557, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 191))
talkEntry:addCondition(condition_item(3557, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five king's crowns. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 191))
talkEntry:addCondition(condition_item(3557, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Königskronen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 191))
talkEntry:addCondition(condition_item(3557, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five king's crowns. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 191))
talkEntry:addCondition(condition_item(3557, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Königskronen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.943396226))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five dwarven plates."))
talkEntry:addResponse("A reliable client of mine has a demand for five dwarven plates. I'll pay one hundred fourteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 192))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.943396226))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Zwergenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Zwergenpanzer. Ich werde dafür einhundertvierzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 192))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.943396226))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five dwarven plates."))
talkEntry:addResponse("A reliable client of mine has a demand for five dwarven plates. I'll pay one hundred fourteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 192))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.943396226))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Zwergenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Zwergenpanzer. Ich werde dafür einhundertvierzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 192))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 192))
talkEntry:addCondition(condition_item(2395, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred fourteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11400))
talkEntry:addConsequence(consequence_deleteitem(2395, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 192))
talkEntry:addCondition(condition_item(2395, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertvierzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11400))
talkEntry:addConsequence(consequence_deleteitem(2395, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 192))
talkEntry:addCondition(condition_item(2395, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five dwarven plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 192))
talkEntry:addCondition(condition_item(2395, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Zwergenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 192))
talkEntry:addCondition(condition_item(2395, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five dwarven plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 192))
talkEntry:addCondition(condition_item(2395, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Zwergenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.952380952))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian steel gloves. I'll pay one hundred seventeen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 193))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.952380952))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Stahlhandschuhe. Ich werde dafür einhundertsiebzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 193))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.952380952))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian steel gloves. I'll pay one hundred seventeen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 193))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.952380952))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Stahlhandschuhe. Ich werde dafür einhundertsiebzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 193))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 193))
talkEntry:addCondition(condition_item(530, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventeen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11700))
talkEntry:addConsequence(consequence_deleteitem(530, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 193))
talkEntry:addCondition(condition_item(530, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11700))
talkEntry:addConsequence(consequence_deleteitem(530, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 193))
talkEntry:addCondition(condition_item(530, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five albarian steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 193))
talkEntry:addCondition(condition_item(530, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 193))
talkEntry:addCondition(condition_item(530, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five albarian steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 193))
talkEntry:addCondition(condition_item(530, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.961538462))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five guard's chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five guard's chain gloves. I'll pay one hundred seventeen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 194))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.961538462))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhandschuhe des Wächters."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhandschuhe des Wächters. Ich werde dafür einhundertsiebzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 194))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.961538462))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five guard's chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five guard's chain gloves. I'll pay one hundred seventeen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 194))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.961538462))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhandschuhe des Wächters."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhandschuhe des Wächters. Ich werde dafür einhundertsiebzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 194))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 194))
talkEntry:addCondition(condition_item(1466, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventeen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11700))
talkEntry:addConsequence(consequence_deleteitem(1466, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 194))
talkEntry:addCondition(condition_item(1466, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11700))
talkEntry:addConsequence(consequence_deleteitem(1466, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 194))
talkEntry:addCondition(condition_item(1466, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five guard's chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 194))
talkEntry:addCondition(condition_item(1466, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhandschuhe des Wächters. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 194))
talkEntry:addCondition(condition_item(1466, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five guard's chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 194))
talkEntry:addCondition(condition_item(1466, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhandschuhe des Wächters. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.970873786))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five claymores."))
talkEntry:addResponse("A reliable client of mine has a demand for five claymores. I'll pay one hundred seventeen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 195))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.970873786))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Claymores."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Claymores. Ich werde dafür einhundertsiebzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 195))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.970873786))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five claymores."))
talkEntry:addResponse("A reliable client of mine has a demand for five claymores. I'll pay one hundred seventeen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 195))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.970873786))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Claymores."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Claymores. Ich werde dafür einhundertsiebzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 195))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 195))
talkEntry:addCondition(condition_item(1526, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventeen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11700))
talkEntry:addConsequence(consequence_deleteitem(1526, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 195))
talkEntry:addCondition(condition_item(1526, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11700))
talkEntry:addConsequence(consequence_deleteitem(1526, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 195))
talkEntry:addCondition(condition_item(1526, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five claymores. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 195))
talkEntry:addCondition(condition_item(1526, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Claymores. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 195))
talkEntry:addCondition(condition_item(1526, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five claymores. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 195))
talkEntry:addCondition(condition_item(1526, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Claymores. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.980392157))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five simple chain trousers."))
talkEntry:addResponse("A reliable client of mine has a demand for five simple chain trousers. I'll pay one hundred eighteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 196))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.980392157))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf einfache kurze Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf einfache kurze Kettenhosen. Ich werde dafür einhundertachtzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 196))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.980392157))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five simple chain trousers."))
talkEntry:addResponse("A reliable client of mine has a demand for five simple chain trousers. I'll pay one hundred eighteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 196))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.980392157))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf einfache kurze Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf einfache kurze Kettenhosen. Ich werde dafür einhundertachtzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 196))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 196))
talkEntry:addCondition(condition_item(1489, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred eighteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11800))
talkEntry:addConsequence(consequence_deleteitem(1489, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 196))
talkEntry:addCondition(condition_item(1489, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertachtzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11800))
talkEntry:addConsequence(consequence_deleteitem(1489, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 196))
talkEntry:addCondition(condition_item(1489, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five simple chain trousers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 196))
talkEntry:addCondition(condition_item(1489, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf einfache kurze Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 196))
talkEntry:addCondition(condition_item(1489, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five simple chain trousers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 196))
talkEntry:addCondition(condition_item(1489, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf einfache kurze Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(0.99009901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five simple steel greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for five simple steel greaves. I'll pay one hundred eighteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 197))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(0.99009901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf einfache Stahlbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf einfache Stahlbeinschienen. Ich werde dafür einhundertachtzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 197))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.99009901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five simple steel greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for five simple steel greaves. I'll pay one hundred eighteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 197))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(0.99009901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf einfache Stahlbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf einfache Stahlbeinschienen. Ich werde dafür einhundertachtzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 197))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 197))
talkEntry:addCondition(condition_item(1496, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred eighteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 11800))
talkEntry:addConsequence(consequence_deleteitem(1496, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 197))
talkEntry:addCondition(condition_item(1496, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertachtzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 11800))
talkEntry:addConsequence(consequence_deleteitem(1496, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 197))
talkEntry:addCondition(condition_item(1496, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five simple steel greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 197))
talkEntry:addCondition(condition_item(1496, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf einfache Stahlbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 197))
talkEntry:addCondition(condition_item(1496, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five simple steel greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 197))
talkEntry:addCondition(condition_item(1496, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf einfache Stahlbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian mercenary's helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian mercenary's helmets. I'll pay one hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 198))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarischer Söldnerhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarischer Söldnerhelme. Ich werde dafür einhundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 198))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian mercenary's helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian mercenary's helmets. I'll pay one hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 198))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarischer Söldnerhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarischer Söldnerhelme. Ich werde dafür einhundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 198))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 198))
talkEntry:addCondition(condition_item(1432, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 13500))
talkEntry:addConsequence(consequence_deleteitem(1432, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 198))
talkEntry:addCondition(condition_item(1432, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertfünfunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 13500))
talkEntry:addConsequence(consequence_deleteitem(1432, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 198))
talkEntry:addCondition(condition_item(1432, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five albarian mercenary's helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 198))
talkEntry:addCondition(condition_item(1432, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarischer Söldnerhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 198))
talkEntry:addCondition(condition_item(1432, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five albarian mercenary's helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 198))
talkEntry:addCondition(condition_item(1432, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarischer Söldnerhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.01010101))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gynkese mercenary's helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five gynkese mercenary's helmets. I'll pay one hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 199))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.01010101))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf gynkesischer Söldnerhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf gynkesischer Söldnerhelme. Ich werde dafür einhundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 199))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.01010101))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gynkese mercenary's helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five gynkese mercenary's helmets. I'll pay one hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 199))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.01010101))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf gynkesischer Söldnerhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf gynkesischer Söldnerhelme. Ich werde dafür einhundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 199))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 199))
talkEntry:addCondition(condition_item(2302, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 13500))
talkEntry:addConsequence(consequence_deleteitem(2302, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 199))
talkEntry:addCondition(condition_item(2302, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertfünfunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 13500))
talkEntry:addConsequence(consequence_deleteitem(2302, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 199))
talkEntry:addCondition(condition_item(2302, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gynkese mercenary's helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 199))
talkEntry:addCondition(condition_item(2302, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf gynkesischer Söldnerhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 199))
talkEntry:addCondition(condition_item(2302, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gynkese mercenary's helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 199))
talkEntry:addCondition(condition_item(2302, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf gynkesischer Söldnerhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.020408163))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper emerald amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper emerald amulets. I'll pay one hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 200))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.020408163))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Smaragdmulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Smaragdmulette. Ich werde dafür einhundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 200))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.020408163))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper emerald amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper emerald amulets. I'll pay one hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 200))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.020408163))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Smaragdmulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Smaragdmulette. Ich werde dafür einhundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 200))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 200))
talkEntry:addCondition(condition_item(3546, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 13500))
talkEntry:addConsequence(consequence_deleteitem(3546, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 200))
talkEntry:addCondition(condition_item(3546, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertfünfunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 13500))
talkEntry:addConsequence(consequence_deleteitem(3546, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 200))
talkEntry:addCondition(condition_item(3546, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five copper emerald amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 200))
talkEntry:addCondition(condition_item(3546, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Smaragdmulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 200))
talkEntry:addCondition(condition_item(3546, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five copper emerald amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 200))
talkEntry:addCondition(condition_item(3546, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Smaragdmulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.030927835))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper emerald rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper emerald rings. I'll pay one hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 201))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.030927835))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Smaragdringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Smaragdringe. Ich werde dafür einhundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 201))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.030927835))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper emerald rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper emerald rings. I'll pay one hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 201))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.030927835))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Smaragdringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Smaragdringe. Ich werde dafür einhundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 201))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 201))
talkEntry:addCondition(condition_item(3547, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred thirty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 13500))
talkEntry:addConsequence(consequence_deleteitem(3547, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 201))
talkEntry:addCondition(condition_item(3547, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertfünfunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 13500))
talkEntry:addConsequence(consequence_deleteitem(3547, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 201))
talkEntry:addCondition(condition_item(3547, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five copper emerald rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 201))
talkEntry:addCondition(condition_item(3547, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Smaragdringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 201))
talkEntry:addCondition(condition_item(3547, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five copper emerald rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 201))
talkEntry:addCondition(condition_item(3547, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Smaragdringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.041666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered battle axes. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 202))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.041666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Kriegsäxte. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 202))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.041666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered battle axes. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 202))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.041666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Kriegsäxte. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 202))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 202))
talkEntry:addCondition(condition_item(229, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(229, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 202))
talkEntry:addCondition(condition_item(229, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(229, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 202))
talkEntry:addCondition(condition_item(229, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silvered battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 202))
talkEntry:addCondition(condition_item(229, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 202))
talkEntry:addCondition(condition_item(229, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silvered battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 202))
talkEntry:addCondition(condition_item(229, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.052631579))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five coppered scale armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five coppered scale armours. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 203))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.052631579))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf verkupferte Schuppenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf verkupferte Schuppenpanzer. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 203))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.052631579))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five coppered scale armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five coppered scale armours. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 203))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.052631579))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf verkupferte Schuppenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf verkupferte Schuppenpanzer. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 203))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 203))
talkEntry:addCondition(condition_item(1438, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(1438, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 203))
talkEntry:addCondition(condition_item(1438, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(1438, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 203))
talkEntry:addCondition(condition_item(1438, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five coppered scale armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 203))
talkEntry:addCondition(condition_item(1438, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf verkupferte Schuppenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 203))
talkEntry:addCondition(condition_item(1438, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five coppered scale armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 203))
talkEntry:addCondition(condition_item(1438, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf verkupferte Schuppenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.063829787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded plate armours. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 204))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.063829787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Plattenpanzer. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 204))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.063829787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded plate armours. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 204))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.063829787))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Plattenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Plattenpanzer. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 204))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 204))
talkEntry:addCondition(condition_item(1445, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(1445, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 204))
talkEntry:addCondition(condition_item(1445, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(1445, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 204))
talkEntry:addCondition(condition_item(1445, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gilded plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 204))
talkEntry:addCondition(condition_item(1445, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 204))
talkEntry:addCondition(condition_item(1445, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gilded plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 204))
talkEntry:addCondition(condition_item(1445, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Plattenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.075268817))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five longswords. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 205))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.075268817))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Langschwerter. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 205))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.075268817))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five longswords. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 205))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.075268817))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Langschwerter. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 205))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 205))
talkEntry:addCondition(condition_item(2701, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(2701, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 205))
talkEntry:addCondition(condition_item(2701, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(2701, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 205))
talkEntry:addCondition(condition_item(2701, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 205))
talkEntry:addCondition(condition_item(2701, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 205))
talkEntry:addCondition(condition_item(2701, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 205))
talkEntry:addCondition(condition_item(2701, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.086956522))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five red daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five red daggers. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 206))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.086956522))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf rote Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf rote Dolche. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 206))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.086956522))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five red daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five red daggers. I'll pay one hundred forty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 206))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.086956522))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf rote Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf rote Dolche. Ich werde dafür einhundertsiebenundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 206))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 206))
talkEntry:addCondition(condition_item(2740, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred forty seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(2740, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 206))
talkEntry:addCondition(condition_item(2740, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 14700))
talkEntry:addConsequence(consequence_deleteitem(2740, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 206))
talkEntry:addCondition(condition_item(2740, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five red daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 206))
talkEntry:addCondition(condition_item(2740, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf rote Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 206))
talkEntry:addCondition(condition_item(2740, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five red daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 206))
talkEntry:addCondition(condition_item(2740, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf rote Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.098901099))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded guardian's boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded guardian's boots. I'll pay one hundred fifty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 207))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.098901099))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Wächterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Wächterstiefel. Ich werde dafür einhundertsiebenundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 207))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.098901099))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded guardian's boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded guardian's boots. I'll pay one hundred fifty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 207))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.098901099))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Wächterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Wächterstiefel. Ich werde dafür einhundertsiebenundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 207))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 207))
talkEntry:addCondition(condition_item(1511, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred fifty seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 15700))
talkEntry:addConsequence(consequence_deleteitem(1511, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 207))
talkEntry:addCondition(condition_item(1511, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 15700))
talkEntry:addConsequence(consequence_deleteitem(1511, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 207))
talkEntry:addCondition(condition_item(1511, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gilded guardian's boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 207))
talkEntry:addCondition(condition_item(1511, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Wächterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 207))
talkEntry:addCondition(condition_item(1511, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gilded guardian's boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 207))
talkEntry:addCondition(condition_item(1511, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Wächterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.111111111))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five paladin's steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five paladin's steel boots. I'll pay one hundred fifty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 208))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.111111111))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Stahlstiefel des Paladins."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Stahlstiefel des Paladins. Ich werde dafür einhundertsiebenundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 208))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.111111111))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five paladin's steel boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five paladin's steel boots. I'll pay one hundred fifty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 208))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.111111111))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Stahlstiefel des Paladins."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Stahlstiefel des Paladins. Ich werde dafür einhundertsiebenundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 208))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 208))
talkEntry:addCondition(condition_item(1518, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred fifty seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 15700))
talkEntry:addConsequence(consequence_deleteitem(1518, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 208))
talkEntry:addCondition(condition_item(1518, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 15700))
talkEntry:addConsequence(consequence_deleteitem(1518, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 208))
talkEntry:addCondition(condition_item(1518, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five paladin's steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 208))
talkEntry:addCondition(condition_item(1518, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Stahlstiefel des Paladins. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 208))
talkEntry:addCondition(condition_item(1518, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five paladin's steel boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 208))
talkEntry:addCondition(condition_item(1518, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Stahlstiefel des Paladins. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.123595506))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver emerald rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver emerald rings. I'll pay one hundred sixty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 209))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.123595506))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Smaragdringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Smaragdringe. Ich werde dafür einhundertfünfundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 209))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.123595506))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver emerald rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver emerald rings. I'll pay one hundred sixty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 209))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.123595506))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Smaragdringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Smaragdringe. Ich werde dafür einhundertfünfundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 209))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 209))
talkEntry:addCondition(condition_item(3545, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred sixty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 16500))
talkEntry:addConsequence(consequence_deleteitem(3545, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 209))
talkEntry:addCondition(condition_item(3545, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertfünfundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 16500))
talkEntry:addConsequence(consequence_deleteitem(3545, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 209))
talkEntry:addCondition(condition_item(3545, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silver emerald rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 209))
talkEntry:addCondition(condition_item(3545, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Smaragdringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 209))
talkEntry:addCondition(condition_item(3545, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silver emerald rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 209))
talkEntry:addCondition(condition_item(3545, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Smaragdringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.136363636))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver emerald amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver emerald amulets. I'll pay one hundred sixty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 210))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.136363636))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Smaragdmulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Smaragdmulette. Ich werde dafür einhundertfünfundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 210))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.136363636))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver emerald amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver emerald amulets. I'll pay one hundred sixty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 210))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.136363636))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Smaragdmulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Smaragdmulette. Ich werde dafür einhundertfünfundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 210))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 210))
talkEntry:addCondition(condition_item(3548, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred sixty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 16500))
talkEntry:addConsequence(consequence_deleteitem(3548, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 210))
talkEntry:addCondition(condition_item(3548, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertfünfundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 16500))
talkEntry:addConsequence(consequence_deleteitem(3548, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 210))
talkEntry:addCondition(condition_item(3548, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silver emerald amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 210))
talkEntry:addCondition(condition_item(3548, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Smaragdmulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 210))
talkEntry:addCondition(condition_item(3548, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silver emerald amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 210))
talkEntry:addCondition(condition_item(3548, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Smaragdmulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.149425287))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five knight gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five knight gloves. I'll pay one hundred seventy silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 211))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.149425287))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ritterhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ritterhandschuhe. Ich werde dafür einhundertsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 211))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.149425287))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five knight gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five knight gloves. I'll pay one hundred seventy silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 211))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.149425287))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ritterhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ritterhandschuhe. Ich werde dafür einhundertsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 211))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 211))
talkEntry:addCondition(condition_item(531, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17000))
talkEntry:addConsequence(consequence_deleteitem(531, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 211))
talkEntry:addCondition(condition_item(531, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17000))
talkEntry:addConsequence(consequence_deleteitem(531, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 211))
talkEntry:addCondition(condition_item(531, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five knight gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 211))
talkEntry:addCondition(condition_item(531, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ritterhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 211))
talkEntry:addCondition(condition_item(531, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five knight gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 211))
talkEntry:addCondition(condition_item(531, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ritterhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.162790698))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gladiator's chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five gladiator's chain gloves. I'll pay one hundred seventy silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 212))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.162790698))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhandschuhe des Gladiators."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhandschuhe des Gladiators. Ich werde dafür einhundertsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 212))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.162790698))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gladiator's chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five gladiator's chain gloves. I'll pay one hundred seventy silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 212))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.162790698))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhandschuhe des Gladiators."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhandschuhe des Gladiators. Ich werde dafür einhundertsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 212))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 212))
talkEntry:addCondition(condition_item(1467, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred seventy silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 17000))
talkEntry:addConsequence(consequence_deleteitem(1467, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 212))
talkEntry:addCondition(condition_item(1467, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 17000))
talkEntry:addConsequence(consequence_deleteitem(1467, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 212))
talkEntry:addCondition(condition_item(1467, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gladiator's chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 212))
talkEntry:addCondition(condition_item(1467, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhandschuhe des Gladiators. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 212))
talkEntry:addCondition(condition_item(1467, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gladiator's chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 212))
talkEntry:addCondition(condition_item(1467, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhandschuhe des Gladiators. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.176470588))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five short chain trousers."))
talkEntry:addResponse("A reliable client of mine has a demand for five short chain trousers. I'll pay one hundred eighty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 213))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.176470588))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kurze Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kurze Kettenhosen. Ich werde dafür einhundertachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 213))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.176470588))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five short chain trousers."))
talkEntry:addResponse("A reliable client of mine has a demand for five short chain trousers. I'll pay one hundred eighty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 213))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.176470588))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kurze Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kurze Kettenhosen. Ich werde dafür einhundertachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 213))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 213))
talkEntry:addCondition(condition_item(2112, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred eighty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 18000))
talkEntry:addConsequence(consequence_deleteitem(2112, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 213))
talkEntry:addCondition(condition_item(2112, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 18000))
talkEntry:addConsequence(consequence_deleteitem(2112, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 213))
talkEntry:addCondition(condition_item(2112, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five short chain trousers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 213))
talkEntry:addCondition(condition_item(2112, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kurze Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 213))
talkEntry:addCondition(condition_item(2112, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five short chain trousers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 213))
talkEntry:addCondition(condition_item(2112, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kurze Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.19047619))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five steel greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for five steel greaves. I'll pay one hundred eighty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 214))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.19047619))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Stahlbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Stahlbeinschienen. Ich werde dafür einhundertachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 214))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.19047619))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five steel greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for five steel greaves. I'll pay one hundred eighty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 214))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.19047619))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Stahlbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Stahlbeinschienen. Ich werde dafür einhundertachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 214))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 214))
talkEntry:addCondition(condition_item(2172, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred eighty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 18000))
talkEntry:addConsequence(consequence_deleteitem(2172, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 214))
talkEntry:addCondition(condition_item(2172, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 18000))
talkEntry:addConsequence(consequence_deleteitem(2172, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 214))
talkEntry:addCondition(condition_item(2172, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five steel greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 214))
talkEntry:addCondition(condition_item(2172, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Stahlbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 214))
talkEntry:addCondition(condition_item(2172, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five steel greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 214))
talkEntry:addCondition(condition_item(2172, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Stahlbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.204819277))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five lizard armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five lizard armours. I'll pay one hundred eighty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 215))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.204819277))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Echsenrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Echsenrüstungen. Ich werde dafür einhundertsiebenundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 215))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.204819277))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five lizard armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five lizard armours. I'll pay one hundred eighty seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 215))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.204819277))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Echsenrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Echsenrüstungen. Ich werde dafür einhundertsiebenundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 215))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 215))
talkEntry:addCondition(condition_item(696, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred eighty seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 18700))
talkEntry:addConsequence(consequence_deleteitem(696, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 215))
talkEntry:addCondition(condition_item(696, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 18700))
talkEntry:addConsequence(consequence_deleteitem(696, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 215))
talkEntry:addCondition(condition_item(696, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five lizard armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 215))
talkEntry:addCondition(condition_item(696, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Echsenrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 215))
talkEntry:addCondition(condition_item(696, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five lizard armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 215))
talkEntry:addCondition(condition_item(696, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Echsenrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.219512195))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five waraxes. I'll pay one hundred ninety six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 216))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.219512195))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kriegsäxte. Ich werde dafür einhundertsechsundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 216))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.219512195))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five waraxes. I'll pay one hundred ninety six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 216))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.219512195))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kriegsäxte. Ich werde dafür einhundertsechsundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 216))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 216))
talkEntry:addCondition(condition_item(383, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred ninety six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 19600))
talkEntry:addConsequence(consequence_deleteitem(383, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 216))
talkEntry:addCondition(condition_item(383, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsechsundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 19600))
talkEntry:addConsequence(consequence_deleteitem(383, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 216))
talkEntry:addCondition(condition_item(383, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 216))
talkEntry:addCondition(condition_item(383, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 216))
talkEntry:addCondition(condition_item(383, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 216))
talkEntry:addCondition(condition_item(383, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.234567901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five chain helmets of darkness."))
talkEntry:addResponse("A reliable client of mine has a demand for five chain helmets of darkness. I'll pay one hundred ninety seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 217))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.234567901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhelme der Dunkelheit."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhelme der Dunkelheit. Ich werde dafür einhundertsiebenundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 217))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.234567901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five chain helmets of darkness."))
talkEntry:addResponse("A reliable client of mine has a demand for five chain helmets of darkness. I'll pay one hundred ninety seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 217))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.234567901))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhelme der Dunkelheit."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhelme der Dunkelheit. Ich werde dafür einhundertsiebenundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 217))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 217))
talkEntry:addCondition(condition_item(1428, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred ninety seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 19700))
talkEntry:addConsequence(consequence_deleteitem(1428, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 217))
talkEntry:addCondition(condition_item(1428, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 19700))
talkEntry:addConsequence(consequence_deleteitem(1428, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 217))
talkEntry:addCondition(condition_item(1428, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five chain helmets of darkness. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 217))
talkEntry:addCondition(condition_item(1428, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhelme der Dunkelheit. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 217))
talkEntry:addCondition(condition_item(1428, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five chain helmets of darkness. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 217))
talkEntry:addCondition(condition_item(1428, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhelme der Dunkelheit. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian soldier's helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian soldier's helmets. I'll pay one hundred ninety seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 218))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Soldatenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Soldatenhelme. Ich werde dafür einhundertsiebenundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 218))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian soldier's helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian soldier's helmets. I'll pay one hundred ninety seven silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 218))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Soldatenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Soldatenhelme. Ich werde dafür einhundertsiebenundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 218))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 218))
talkEntry:addCondition(condition_item(2287, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one hundred ninety seven silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 19700))
talkEntry:addConsequence(consequence_deleteitem(2287, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 218))
talkEntry:addCondition(condition_item(2287, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst einhundertsiebenundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 19700))
talkEntry:addConsequence(consequence_deleteitem(2287, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 218))
talkEntry:addCondition(condition_item(2287, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five albarian soldier's helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 218))
talkEntry:addCondition(condition_item(2287, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Soldatenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 218))
talkEntry:addCondition(condition_item(2287, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five albarian soldier's helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 218))
talkEntry:addCondition(condition_item(2287, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Soldatenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.265822785))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden emerald amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden emerald amulets. I'll pay two hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 219))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.265822785))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Smaragdamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Smaragdamulette. Ich werde dafür zweihundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 219))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.265822785))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden emerald amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden emerald amulets. I'll pay two hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 219))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.265822785))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Smaragdamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Smaragdamulette. Ich werde dafür zweihundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 219))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 219))
talkEntry:addCondition(condition_item(62, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 20000))
talkEntry:addConsequence(consequence_deleteitem(62, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 219))
talkEntry:addCondition(condition_item(62, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundert Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 20000))
talkEntry:addConsequence(consequence_deleteitem(62, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 219))
talkEntry:addCondition(condition_item(62, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five golden emerald amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 219))
talkEntry:addCondition(condition_item(62, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Smaragdamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 219))
talkEntry:addCondition(condition_item(62, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five golden emerald amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 219))
talkEntry:addCondition(condition_item(62, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Smaragdamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.282051282))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden emerald rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden emerald rings. I'll pay two hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 220))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.282051282))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Smaragdringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Smaragdringe. Ich werde dafür zweihundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 220))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.282051282))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden emerald rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden emerald rings. I'll pay two hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 220))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.282051282))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Smaragdringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Smaragdringe. Ich werde dafür zweihundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 220))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 220))
talkEntry:addCondition(condition_item(281, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 20000))
talkEntry:addConsequence(consequence_deleteitem(281, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 220))
talkEntry:addCondition(condition_item(281, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundert Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 20000))
talkEntry:addConsequence(consequence_deleteitem(281, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 220))
talkEntry:addCondition(condition_item(281, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five golden emerald rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 220))
talkEntry:addCondition(condition_item(281, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Smaragdringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 220))
talkEntry:addCondition(condition_item(281, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five golden emerald rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 220))
talkEntry:addCondition(condition_item(281, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Smaragdringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.298701299))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five salkamaerian steel shoes."))
talkEntry:addResponse("A reliable client of mine has a demand for five salkamaerian steel shoes. I'll pay two hundred twenty one silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 221))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.298701299))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf salkamaerische Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf salkamaerische Stahlschuhe. Ich werde dafür zweihunderteinundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 221))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.298701299))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five salkamaerian steel shoes."))
talkEntry:addResponse("A reliable client of mine has a demand for five salkamaerian steel shoes. I'll pay two hundred twenty one silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 221))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.298701299))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf salkamaerische Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf salkamaerische Stahlschuhe. Ich werde dafür zweihunderteinundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 221))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 221))
talkEntry:addCondition(condition_item(699, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred twenty one silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 22100))
talkEntry:addConsequence(consequence_deleteitem(699, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 221))
talkEntry:addCondition(condition_item(699, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihunderteinundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 22100))
talkEntry:addConsequence(consequence_deleteitem(699, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 221))
talkEntry:addCondition(condition_item(699, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five salkamaerian steel shoes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 221))
talkEntry:addCondition(condition_item(699, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf salkamaerische Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 221))
talkEntry:addCondition(condition_item(699, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five salkamaerian steel shoes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 221))
talkEntry:addCondition(condition_item(699, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf salkamaerische Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.315789474))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five knight boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five knight boots. I'll pay two hundred twenty one silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 222))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.315789474))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ritterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ritterstiefel. Ich werde dafür zweihunderteinundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 222))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.315789474))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five knight boots."))
talkEntry:addResponse("A reliable client of mine has a demand for five knight boots. I'll pay two hundred twenty one silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 222))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.315789474))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ritterstiefel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ritterstiefel. Ich werde dafür zweihunderteinundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 222))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 222))
talkEntry:addCondition(condition_item(770, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred twenty one silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 22100))
talkEntry:addConsequence(consequence_deleteitem(770, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 222))
talkEntry:addCondition(condition_item(770, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihunderteinundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 22100))
talkEntry:addConsequence(consequence_deleteitem(770, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 222))
talkEntry:addCondition(condition_item(770, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five knight boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 222))
talkEntry:addCondition(condition_item(770, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ritterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 222))
talkEntry:addCondition(condition_item(770, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five knight boots. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 222))
talkEntry:addCondition(condition_item(770, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ritterstiefel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five coppered longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five coppered longswords. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 223))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf verkupferte Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf verkupferte Langschwerter. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 223))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five coppered longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five coppered longswords. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 223))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf verkupferte Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf verkupferte Langschwerter. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 223))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 223))
talkEntry:addCondition(condition_item(85, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(85, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 223))
talkEntry:addCondition(condition_item(85, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(85, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 223))
talkEntry:addCondition(condition_item(85, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five coppered longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 223))
talkEntry:addCondition(condition_item(85, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf verkupferte Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 223))
talkEntry:addCondition(condition_item(85, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five coppered longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 223))
talkEntry:addCondition(condition_item(85, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf verkupferte Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.351351351))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded battle axes. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 224))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.351351351))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Kriegsäxte. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 224))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.351351351))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded battle axes. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 224))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.351351351))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Kriegsäxte. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 224))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 224))
talkEntry:addCondition(condition_item(124, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(124, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 224))
talkEntry:addCondition(condition_item(124, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(124, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 224))
talkEntry:addCondition(condition_item(124, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gilded battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 224))
talkEntry:addCondition(condition_item(124, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 224))
talkEntry:addCondition(condition_item(124, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gilded battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 224))
talkEntry:addCondition(condition_item(124, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.369863014))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered daggers. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 225))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.369863014))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Dolche. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 225))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.369863014))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered daggers. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 225))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.369863014))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Dolche. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 225))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 225))
talkEntry:addCondition(condition_item(389, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(389, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 225))
talkEntry:addCondition(condition_item(389, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(389, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 225))
talkEntry:addCondition(condition_item(389, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silvered daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 225))
talkEntry:addCondition(condition_item(389, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 225))
talkEntry:addCondition(condition_item(389, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silvered daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 225))
talkEntry:addCondition(condition_item(389, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.388888889))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered scale armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered scale armours. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 226))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.388888889))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Schuppenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Schuppenpanzer. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 226))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.388888889))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered scale armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered scale armours. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 226))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.388888889))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Schuppenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Schuppenpanzer. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 226))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 226))
talkEntry:addCondition(condition_item(1439, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(1439, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 226))
talkEntry:addCondition(condition_item(1439, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(1439, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 226))
talkEntry:addCondition(condition_item(1439, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silvered scale armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 226))
talkEntry:addCondition(condition_item(1439, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Schuppenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 226))
talkEntry:addCondition(condition_item(1439, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silvered scale armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 226))
talkEntry:addCondition(condition_item(1439, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Schuppenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.408450704))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian steel plates."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian steel plates. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 227))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.408450704))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Stahlharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Stahlharnische. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 227))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.408450704))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian steel plates."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian steel plates. I'll pay two hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 227))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.408450704))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Stahlharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Stahlharnische. Ich werde dafür zweihundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 227))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 227))
talkEntry:addCondition(condition_item(2369, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(2369, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 227))
talkEntry:addCondition(condition_item(2369, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 23600))
talkEntry:addConsequence(consequence_deleteitem(2369, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 227))
talkEntry:addCondition(condition_item(2369, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five albarian steel plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 227))
talkEntry:addCondition(condition_item(2369, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Stahlharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 227))
talkEntry:addCondition(condition_item(2369, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five albarian steel plates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 227))
talkEntry:addCondition(condition_item(2369, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Stahlharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.428571429))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium plated chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium plated chain gloves. I'll pay two hundred thirty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 228))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.428571429))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf meriniumbeschlagene Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf meriniumbeschlagene Kettenhandschuhe. Ich werde dafür zweihundertneununddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 228))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.428571429))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium plated chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium plated chain gloves. I'll pay two hundred thirty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 228))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.428571429))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf meriniumbeschlagene Kettenhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf meriniumbeschlagene Kettenhandschuhe. Ich werde dafür zweihundertneununddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 228))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 228))
talkEntry:addCondition(condition_item(1468, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred thirty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 23900))
talkEntry:addConsequence(consequence_deleteitem(1468, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 228))
talkEntry:addCondition(condition_item(1468, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertneununddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 23900))
talkEntry:addConsequence(consequence_deleteitem(1468, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 228))
talkEntry:addCondition(condition_item(1468, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five merinium plated chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 228))
talkEntry:addCondition(condition_item(1468, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf meriniumbeschlagene Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 228))
talkEntry:addCondition(condition_item(1468, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five merinium plated chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 228))
talkEntry:addCondition(condition_item(1468, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf meriniumbeschlagene Kettenhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.449275362))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium plated steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium plated steel gloves. I'll pay two hundred thirty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 229))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.449275362))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf meriniumbeschlagene Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf meriniumbeschlagene Stahlhandschuhe. Ich werde dafür zweihundertneununddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 229))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.449275362))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium plated steel gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium plated steel gloves. I'll pay two hundred thirty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 229))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.449275362))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf meriniumbeschlagene Stahlhandschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf meriniumbeschlagene Stahlhandschuhe. Ich werde dafür zweihundertneununddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 229))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 229))
talkEntry:addCondition(condition_item(1476, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred thirty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 23900))
talkEntry:addConsequence(consequence_deleteitem(1476, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 229))
talkEntry:addCondition(condition_item(1476, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertneununddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 23900))
talkEntry:addConsequence(consequence_deleteitem(1476, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 229))
talkEntry:addCondition(condition_item(1476, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five merinium plated steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 229))
talkEntry:addCondition(condition_item(1476, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf meriniumbeschlagene Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 229))
talkEntry:addCondition(condition_item(1476, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five merinium plated steel gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 229))
talkEntry:addCondition(condition_item(1476, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf meriniumbeschlagene Stahlhandschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.470588235))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper topaz amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper topaz amulets. I'll pay two hundred forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 230))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.470588235))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Topasamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Topasamulette. Ich werde dafür zweihundertvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 230))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.470588235))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper topaz amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper topaz amulets. I'll pay two hundred forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 230))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.470588235))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Topasamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Topasamulette. Ich werde dafür zweihundertvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 230))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 230))
talkEntry:addCondition(condition_item(3549, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 24000))
talkEntry:addConsequence(consequence_deleteitem(3549, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 230))
talkEntry:addCondition(condition_item(3549, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 24000))
talkEntry:addConsequence(consequence_deleteitem(3549, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 230))
talkEntry:addCondition(condition_item(3549, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five copper topaz amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 230))
talkEntry:addCondition(condition_item(3549, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Topasamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 230))
talkEntry:addCondition(condition_item(3549, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five copper topaz amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 230))
talkEntry:addCondition(condition_item(3549, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Topasamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.492537313))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper topaz rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper topaz rings. I'll pay two hundred forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 231))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.492537313))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Topasringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Topasringe. Ich werde dafür zweihundertvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 231))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.492537313))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper topaz rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper topaz rings. I'll pay two hundred forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 231))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.492537313))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Topasringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Topasringe. Ich werde dafür zweihundertvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 231))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 231))
talkEntry:addCondition(condition_item(3550, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 24000))
talkEntry:addConsequence(consequence_deleteitem(3550, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 231))
talkEntry:addCondition(condition_item(3550, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 24000))
talkEntry:addConsequence(consequence_deleteitem(3550, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 231))
talkEntry:addCondition(condition_item(3550, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five copper topaz rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 231))
talkEntry:addCondition(condition_item(3550, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Topasringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 231))
talkEntry:addCondition(condition_item(3550, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five copper topaz rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 231))
talkEntry:addCondition(condition_item(3550, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Topasringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.515151515))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five reinforced chain trousers."))
talkEntry:addResponse("A reliable client of mine has a demand for five reinforced chain trousers. I'll pay two hundred sixty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 232))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.515151515))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf verstärkte kurze Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf verstärkte kurze Kettenhosen. Ich werde dafür zweihundertzweiundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 232))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.515151515))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five reinforced chain trousers."))
talkEntry:addResponse("A reliable client of mine has a demand for five reinforced chain trousers. I'll pay two hundred sixty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 232))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.515151515))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf verstärkte kurze Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf verstärkte kurze Kettenhosen. Ich werde dafür zweihundertzweiundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 232))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 232))
talkEntry:addCondition(condition_item(1490, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred sixty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 26200))
talkEntry:addConsequence(consequence_deleteitem(1490, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 232))
talkEntry:addCondition(condition_item(1490, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertzweiundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 26200))
talkEntry:addConsequence(consequence_deleteitem(1490, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 232))
talkEntry:addCondition(condition_item(1490, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five reinforced chain trousers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 232))
talkEntry:addCondition(condition_item(1490, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf verstärkte kurze Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 232))
talkEntry:addCondition(condition_item(1490, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five reinforced chain trousers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 232))
talkEntry:addCondition(condition_item(1490, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf verstärkte kurze Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.538461538))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five reinforced steel greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for five reinforced steel greaves. I'll pay two hundred sixty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 233))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.538461538))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf verstärkte Stahlbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf verstärkte Stahlbeinschienen. Ich werde dafür zweihundertzweiundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 233))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.538461538))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five reinforced steel greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for five reinforced steel greaves. I'll pay two hundred sixty two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 233))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.538461538))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf verstärkte Stahlbeinschienen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf verstärkte Stahlbeinschienen. Ich werde dafür zweihundertzweiundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 233))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 233))
talkEntry:addCondition(condition_item(1497, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred sixty two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 26200))
talkEntry:addConsequence(consequence_deleteitem(1497, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 233))
talkEntry:addCondition(condition_item(1497, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertzweiundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 26200))
talkEntry:addConsequence(consequence_deleteitem(1497, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 233))
talkEntry:addCondition(condition_item(1497, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five reinforced steel greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 233))
talkEntry:addCondition(condition_item(1497, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf verstärkte Stahlbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 233))
talkEntry:addCondition(condition_item(1497, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five reinforced steel greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 233))
talkEntry:addCondition(condition_item(1497, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf verstärkte Stahlbeinschienen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.5625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five visored helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five visored helmets. I'll pay two hundred seventy six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 234))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.5625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Visierhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Visierhelme. Ich werde dafür zweihundertsechsundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 234))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.5625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five visored helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five visored helmets. I'll pay two hundred seventy six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 234))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.5625))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Visierhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Visierhelme. Ich werde dafür zweihundertsechsundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 234))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 234))
talkEntry:addCondition(condition_item(184, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred seventy six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 27600))
talkEntry:addConsequence(consequence_deleteitem(184, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 234))
talkEntry:addCondition(condition_item(184, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertsechsundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 27600))
talkEntry:addConsequence(consequence_deleteitem(184, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 234))
talkEntry:addCondition(condition_item(184, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five visored helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 234))
talkEntry:addCondition(condition_item(184, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Visierhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 234))
talkEntry:addCondition(condition_item(184, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five visored helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 234))
talkEntry:addCondition(condition_item(184, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Visierhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.587301587))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five salkamaerian paladin's helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five salkamaerian paladin's helmets. I'll pay two hundred seventy six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 235))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.587301587))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf salkamaerischer Paladinhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf salkamaerischer Paladinhelme. Ich werde dafür zweihundertsechsundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 235))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.587301587))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five salkamaerian paladin's helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five salkamaerian paladin's helmets. I'll pay two hundred seventy six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 235))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.587301587))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf salkamaerischer Paladinhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf salkamaerischer Paladinhelme. Ich werde dafür zweihundertsechsundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 235))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 235))
talkEntry:addCondition(condition_item(2291, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred seventy six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 27600))
talkEntry:addConsequence(consequence_deleteitem(2291, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 235))
talkEntry:addCondition(condition_item(2291, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertsechsundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 27600))
talkEntry:addConsequence(consequence_deleteitem(2291, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 235))
talkEntry:addCondition(condition_item(2291, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five salkamaerian paladin's helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 235))
talkEntry:addCondition(condition_item(2291, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf salkamaerischer Paladinhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 235))
talkEntry:addCondition(condition_item(2291, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five salkamaerian paladin's helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 235))
talkEntry:addCondition(condition_item(2291, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf salkamaerischer Paladinhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.612903226))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver topaz amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver topaz amulets. I'll pay two hundred eighty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 236))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.612903226))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Topasamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Topasamulette. Ich werde dafür zweihundertfünfundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 236))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.612903226))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver topaz amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver topaz amulets. I'll pay two hundred eighty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 236))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.612903226))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Topasamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Topasamulette. Ich werde dafür zweihundertfünfundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 236))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 236))
talkEntry:addCondition(condition_item(3551, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred eighty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 28500))
talkEntry:addConsequence(consequence_deleteitem(3551, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 236))
talkEntry:addCondition(condition_item(3551, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertfünfundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 28500))
talkEntry:addConsequence(consequence_deleteitem(3551, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 236))
talkEntry:addCondition(condition_item(3551, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silver topaz amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 236))
talkEntry:addCondition(condition_item(3551, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Topasamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 236))
talkEntry:addCondition(condition_item(3551, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silver topaz amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 236))
talkEntry:addCondition(condition_item(3551, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Topasamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.639344262))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver topaz rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver topaz rings. I'll pay two hundred eighty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 237))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.639344262))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Topasringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Topasringe. Ich werde dafür zweihundertfünfundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 237))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.639344262))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver topaz rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver topaz rings. I'll pay two hundred eighty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 237))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.639344262))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Topasringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Topasringe. Ich werde dafür zweihundertfünfundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 237))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 237))
talkEntry:addCondition(condition_item(3552, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred eighty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 28500))
talkEntry:addConsequence(consequence_deleteitem(3552, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 237))
talkEntry:addCondition(condition_item(3552, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertfünfundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 28500))
talkEntry:addConsequence(consequence_deleteitem(3552, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 237))
talkEntry:addCondition(condition_item(3552, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silver topaz rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 237))
talkEntry:addCondition(condition_item(3552, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Topasringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 237))
talkEntry:addCondition(condition_item(3552, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silver topaz rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 237))
talkEntry:addCondition(condition_item(3552, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Topasringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five dwarven state armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five dwarven state armours. I'll pay two hundred ninety three silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 238))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Zwergen-Prunkrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Zwergen-Prunkrüstungen. Ich werde dafür zweihundertdreiundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 238))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five dwarven state armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five dwarven state armours. I'll pay two hundred ninety three silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 238))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Zwergen-Prunkrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Zwergen-Prunkrüstungen. Ich werde dafür zweihundertdreiundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 238))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 238))
talkEntry:addCondition(condition_item(2390, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded two hundred ninety three silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 29300))
talkEntry:addConsequence(consequence_deleteitem(2390, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 238))
talkEntry:addCondition(condition_item(2390, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst zweihundertdreiundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 29300))
talkEntry:addConsequence(consequence_deleteitem(2390, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 238))
talkEntry:addCondition(condition_item(2390, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five dwarven state armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 238))
talkEntry:addCondition(condition_item(2390, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Zwergen-Prunkrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 238))
talkEntry:addCondition(condition_item(2390, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five dwarven state armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 238))
talkEntry:addCondition(condition_item(2390, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Zwergen-Prunkrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.694915254))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five master's steel shoes."))
talkEntry:addResponse("A reliable client of mine has a demand for five master's steel shoes. I'll pay three hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 239))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.694915254))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf meisterhafte Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf meisterhafte Stahlschuhe. Ich werde dafür dreihundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 239))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.694915254))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five master's steel shoes."))
talkEntry:addResponse("A reliable client of mine has a demand for five master's steel shoes. I'll pay three hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 239))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.694915254))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf meisterhafte Stahlschuhe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf meisterhafte Stahlschuhe. Ich werde dafür dreihundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 239))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 239))
talkEntry:addCondition(condition_item(1512, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 30000))
talkEntry:addConsequence(consequence_deleteitem(1512, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 239))
talkEntry:addCondition(condition_item(1512, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundert Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 30000))
talkEntry:addConsequence(consequence_deleteitem(1512, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 239))
talkEntry:addCondition(condition_item(1512, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five master's steel shoes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 239))
talkEntry:addCondition(condition_item(1512, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf meisterhafte Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 239))
talkEntry:addCondition(condition_item(1512, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five master's steel shoes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 239))
talkEntry:addCondition(condition_item(1512, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf meisterhafte Stahlschuhe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.724137931))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five knight boots of swiftness."))
talkEntry:addResponse("A reliable client of mine has a demand for five knight boots of swiftness. I'll pay three hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 240))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.724137931))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ritterstiefel der Flinkheit."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ritterstiefel der Flinkheit. Ich werde dafür dreihundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 240))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.724137931))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five knight boots of swiftness."))
talkEntry:addResponse("A reliable client of mine has a demand for five knight boots of swiftness. I'll pay three hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 240))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.724137931))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ritterstiefel der Flinkheit."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ritterstiefel der Flinkheit. Ich werde dafür dreihundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 240))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 240))
talkEntry:addCondition(condition_item(1519, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 30000))
talkEntry:addConsequence(consequence_deleteitem(1519, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 240))
talkEntry:addCondition(condition_item(1519, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundert Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 30000))
talkEntry:addConsequence(consequence_deleteitem(1519, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 240))
talkEntry:addCondition(condition_item(1519, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five knight boots of swiftness. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 240))
talkEntry:addCondition(condition_item(1519, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ritterstiefel der Flinkheit. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 240))
talkEntry:addCondition(condition_item(1519, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five knight boots of swiftness. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 240))
talkEntry:addCondition(condition_item(1519, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ritterstiefel der Flinkheit. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.754385965))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five large waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five large waraxes. I'll pay three hundred fourteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 241))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.754385965))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf große Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf große Kriegsäxte. Ich werde dafür dreihundertvierzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 241))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.754385965))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five large waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five large waraxes. I'll pay three hundred fourteen silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 241))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.754385965))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf große Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf große Kriegsäxte. Ich werde dafür dreihundertvierzehn Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 241))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 241))
talkEntry:addCondition(condition_item(188, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred fourteen silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 31400))
talkEntry:addConsequence(consequence_deleteitem(188, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 241))
talkEntry:addCondition(condition_item(188, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertvierzehn Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 31400))
talkEntry:addConsequence(consequence_deleteitem(188, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 241))
talkEntry:addCondition(condition_item(188, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five large waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 241))
talkEntry:addCondition(condition_item(188, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf große Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 241))
talkEntry:addCondition(condition_item(188, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five large waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 241))
talkEntry:addCondition(condition_item(188, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf große Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.785714286))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five templar's chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five templar's chain gloves. I'll pay three hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 242))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.785714286))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhandschuhe des Templers."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhandschuhe des Templers. Ich werde dafür dreihundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 242))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.785714286))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five templar's chain gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five templar's chain gloves. I'll pay three hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 242))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.785714286))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhandschuhe des Templers."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhandschuhe des Templers. Ich werde dafür dreihundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 242))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 242))
talkEntry:addCondition(condition_item(1469, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred twenty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 32500))
talkEntry:addConsequence(consequence_deleteitem(1469, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 242))
talkEntry:addCondition(condition_item(1469, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertfünfundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 32500))
talkEntry:addConsequence(consequence_deleteitem(1469, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 242))
talkEntry:addCondition(condition_item(1469, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five templar's chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 242))
talkEntry:addCondition(condition_item(1469, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhandschuhe des Templers. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 242))
talkEntry:addCondition(condition_item(1469, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five templar's chain gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 242))
talkEntry:addCondition(condition_item(1469, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhandschuhe des Templers. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.818181818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five grand master's gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five grand master's gloves. I'll pay three hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 243))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.818181818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Handschuhe des Großmeisters."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Handschuhe des Großmeisters. Ich werde dafür dreihundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 243))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.818181818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five grand master's gloves."))
talkEntry:addResponse("A reliable client of mine has a demand for five grand master's gloves. I'll pay three hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 243))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.818181818))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Handschuhe des Großmeisters."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Handschuhe des Großmeisters. Ich werde dafür dreihundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 243))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 243))
talkEntry:addCondition(condition_item(1477, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred twenty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 32500))
talkEntry:addConsequence(consequence_deleteitem(1477, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 243))
talkEntry:addCondition(condition_item(1477, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertfünfundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 32500))
talkEntry:addConsequence(consequence_deleteitem(1477, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 243))
talkEntry:addCondition(condition_item(1477, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five grand master's gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 243))
talkEntry:addCondition(condition_item(1477, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Handschuhe des Großmeisters. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 243))
talkEntry:addCondition(condition_item(1477, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five grand master's gloves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 243))
talkEntry:addCondition(condition_item(1477, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Handschuhe des Großmeisters. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.851851852))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden topaz amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden topaz amulets. I'll pay three hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 244))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.851851852))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Topasketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Topasketten. Ich werde dafür dreihundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 244))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.851851852))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden topaz amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden topaz amulets. I'll pay three hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 244))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.851851852))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Topasketten."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Topasketten. Ich werde dafür dreihundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 244))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 244))
talkEntry:addCondition(condition_item(83, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred thirty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 33500))
talkEntry:addConsequence(consequence_deleteitem(83, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 244))
talkEntry:addCondition(condition_item(83, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertfünfunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 33500))
talkEntry:addConsequence(consequence_deleteitem(83, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 244))
talkEntry:addCondition(condition_item(83, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five golden topaz amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 244))
talkEntry:addCondition(condition_item(83, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Topasketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 244))
talkEntry:addCondition(condition_item(83, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five golden topaz amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 244))
talkEntry:addCondition(condition_item(83, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Topasketten. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.886792453))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden topaz rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden topaz rings. I'll pay three hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 245))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.886792453))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Topasringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Topasringe. Ich werde dafür dreihundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 245))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.886792453))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden topaz rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden topaz rings. I'll pay three hundred thirty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 245))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.886792453))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Topasringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Topasringe. Ich werde dafür dreihundertfünfunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 245))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 245))
talkEntry:addCondition(condition_item(282, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred thirty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 33500))
talkEntry:addConsequence(consequence_deleteitem(282, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 245))
talkEntry:addCondition(condition_item(282, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertfünfunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 33500))
talkEntry:addConsequence(consequence_deleteitem(282, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 245))
talkEntry:addCondition(condition_item(282, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five golden topaz rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 245))
talkEntry:addCondition(condition_item(282, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Topasringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 245))
talkEntry:addCondition(condition_item(282, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five golden topaz rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 245))
talkEntry:addCondition(condition_item(282, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Topasringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.923076923))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five mirrors."))
talkEntry:addResponse("A reliable client of mine has a demand for five mirrors. I'll pay three hundred forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 246))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.923076923))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Spiegel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Spiegel. Ich werde dafür dreihundertvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 246))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.923076923))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five mirrors."))
talkEntry:addResponse("A reliable client of mine has a demand for five mirrors. I'll pay three hundred forty silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 246))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.923076923))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Spiegel."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Spiegel. Ich werde dafür dreihundertvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 246))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 246))
talkEntry:addCondition(condition_item(336, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred forty silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 34000))
talkEntry:addConsequence(consequence_deleteitem(336, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 246))
talkEntry:addCondition(condition_item(336, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 34000))
talkEntry:addConsequence(consequence_deleteitem(336, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 246))
talkEntry:addCondition(condition_item(336, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five mirrors. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 246))
talkEntry:addCondition(condition_item(336, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Spiegel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 246))
talkEntry:addCondition(condition_item(336, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five mirrors. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 246))
talkEntry:addCondition(condition_item(336, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Spiegel. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(1.960784314))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered longswords. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 247))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(1.960784314))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Langschwerter. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 247))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.960784314))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silvered longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five silvered longswords. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 247))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(1.960784314))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf versilberte Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf versilberte Langschwerter. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 247))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 247))
talkEntry:addCondition(condition_item(98, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred fifty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(98, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 247))
talkEntry:addCondition(condition_item(98, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertneunundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(98, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 247))
talkEntry:addCondition(condition_item(98, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silvered longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 247))
talkEntry:addCondition(condition_item(98, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 247))
talkEntry:addCondition(condition_item(98, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silvered longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 247))
talkEntry:addCondition(condition_item(98, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf versilberte Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded daggers. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 248))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Dolche. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 248))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded daggers. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 248))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Dolche. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 248))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 248))
talkEntry:addCondition(condition_item(297, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred fifty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(297, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 248))
talkEntry:addCondition(condition_item(297, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertneunundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(297, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 248))
talkEntry:addCondition(condition_item(297, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gilded daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 248))
talkEntry:addCondition(condition_item(297, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 248))
talkEntry:addCondition(condition_item(297, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gilded daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 248))
talkEntry:addCondition(condition_item(297, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.040816327))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian knight's armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian knight's armours. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 249))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.040816327))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Ritterrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Ritterrüstungen. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 249))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.040816327))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian knight's armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian knight's armours. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 249))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.040816327))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Ritterrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Ritterrüstungen. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 249))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 249))
talkEntry:addCondition(condition_item(1446, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred fifty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(1446, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 249))
talkEntry:addCondition(condition_item(1446, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertneunundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(1446, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 249))
talkEntry:addCondition(condition_item(1446, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five albarian knight's armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 249))
talkEntry:addCondition(condition_item(1446, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Ritterrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 249))
talkEntry:addCondition(condition_item(1446, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five albarian knight's armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 249))
talkEntry:addCondition(condition_item(1446, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Ritterrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.083333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five salkamaerian armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five salkamaerian armours. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 250))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.083333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf salkamaerische Rüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf salkamaerische Rüstungen. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 250))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.083333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five salkamaerian armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five salkamaerian armours. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 250))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.083333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf salkamaerische Rüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf salkamaerische Rüstungen. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 250))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 250))
talkEntry:addCondition(condition_item(2389, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred fifty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(2389, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 250))
talkEntry:addCondition(condition_item(2389, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertneunundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(2389, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 250))
talkEntry:addCondition(condition_item(2389, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five salkamaerian armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 250))
talkEntry:addCondition(condition_item(2389, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf salkamaerische Rüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 250))
talkEntry:addCondition(condition_item(2389, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five salkamaerian armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 250))
talkEntry:addCondition(condition_item(2389, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf salkamaerische Rüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.127659574))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five orc axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five orc axes. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 251))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.127659574))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Orkäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Orkäxte. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 251))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.127659574))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five orc axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five orc axes. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 251))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.127659574))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Orkäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Orkäxte. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 251))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 251))
talkEntry:addCondition(condition_item(2642, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred fifty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(2642, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 251))
talkEntry:addCondition(condition_item(2642, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertneunundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(2642, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 251))
talkEntry:addCondition(condition_item(2642, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five orc axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 251))
talkEntry:addCondition(condition_item(2642, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Orkäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 251))
talkEntry:addCondition(condition_item(2642, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five orc axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 251))
talkEntry:addCondition(condition_item(2642, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Orkäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.173913043))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five broadswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five broadswords. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 252))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.173913043))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Breitschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Breitschwerter. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 252))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.173913043))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five broadswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five broadswords. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 252))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.173913043))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Breitschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Breitschwerter. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 252))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 252))
talkEntry:addCondition(condition_item(2658, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred fifty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(2658, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 252))
talkEntry:addCondition(condition_item(2658, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertneunundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(2658, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 252))
talkEntry:addCondition(condition_item(2658, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five broadswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 252))
talkEntry:addCondition(condition_item(2658, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Breitschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 252))
talkEntry:addCondition(condition_item(2658, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five broadswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 252))
talkEntry:addCondition(condition_item(2658, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Breitschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.222222222))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five elven swords."))
talkEntry:addResponse("A reliable client of mine has a demand for five elven swords. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 253))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.222222222))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Elfenschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Elfenschwerter. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 253))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.222222222))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five elven swords."))
talkEntry:addResponse("A reliable client of mine has a demand for five elven swords. I'll pay three hundred fifty nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 253))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.222222222))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Elfenschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Elfenschwerter. Ich werde dafür dreihundertneunundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 253))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 253))
talkEntry:addCondition(condition_item(2778, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred fifty nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(2778, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 253))
talkEntry:addCondition(condition_item(2778, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertneunundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 35900))
talkEntry:addConsequence(consequence_deleteitem(2778, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 253))
talkEntry:addCondition(condition_item(2778, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five elven swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 253))
talkEntry:addCondition(condition_item(2778, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Elfenschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 253))
talkEntry:addCondition(condition_item(2778, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five elven swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 253))
talkEntry:addCondition(condition_item(2778, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Elfenschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.272727273))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five knight's steel greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for five knight's steel greaves. I'll pay three hundred sixty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 254))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.272727273))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Stahlbeinschienen des Ritters."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Stahlbeinschienen des Ritters. Ich werde dafür dreihundertachtundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 254))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.272727273))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five knight's steel greaves."))
talkEntry:addResponse("A reliable client of mine has a demand for five knight's steel greaves. I'll pay three hundred sixty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 254))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.272727273))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Stahlbeinschienen des Ritters."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Stahlbeinschienen des Ritters. Ich werde dafür dreihundertachtundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 254))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 254))
talkEntry:addCondition(condition_item(1498, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred sixty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 36800))
talkEntry:addConsequence(consequence_deleteitem(1498, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 254))
talkEntry:addCondition(condition_item(1498, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertachtundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 36800))
talkEntry:addConsequence(consequence_deleteitem(1498, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 254))
talkEntry:addCondition(condition_item(1498, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five knight's steel greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 254))
talkEntry:addCondition(condition_item(1498, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Stahlbeinschienen des Ritters. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 254))
talkEntry:addCondition(condition_item(1498, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five knight's steel greaves. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 254))
talkEntry:addCondition(condition_item(1498, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Stahlbeinschienen des Ritters. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.325581395))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five chain pants."))
talkEntry:addResponse("A reliable client of mine has a demand for five chain pants. I'll pay three hundred sixty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 255))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.325581395))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhosen. Ich werde dafür dreihundertachtundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 255))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.325581395))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five chain pants."))
talkEntry:addResponse("A reliable client of mine has a demand for five chain pants. I'll pay three hundred sixty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 255))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.325581395))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Kettenhosen. Ich werde dafür dreihundertachtundsechzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 255))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 255))
talkEntry:addCondition(condition_item(2111, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred sixty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 36800))
talkEntry:addConsequence(consequence_deleteitem(2111, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 255))
talkEntry:addCondition(condition_item(2111, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertachtundsechzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 36800))
talkEntry:addConsequence(consequence_deleteitem(2111, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 255))
talkEntry:addCondition(condition_item(2111, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five chain pants. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 255))
talkEntry:addCondition(condition_item(2111, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 255))
talkEntry:addCondition(condition_item(2111, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five chain pants. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 255))
talkEntry:addCondition(condition_item(2111, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.380952381))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five visored helmets of darkness."))
talkEntry:addResponse("A reliable client of mine has a demand for five visored helmets of darkness. I'll pay three hundred seventy five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 256))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.380952381))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Visierhelme der Dunkelheit."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Visierhelme der Dunkelheit. Ich werde dafür dreihundertfünfundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 256))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.380952381))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five visored helmets of darkness."))
talkEntry:addResponse("A reliable client of mine has a demand for five visored helmets of darkness. I'll pay three hundred seventy five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 256))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.380952381))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Visierhelme der Dunkelheit."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Visierhelme der Dunkelheit. Ich werde dafür dreihundertfünfundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 256))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 256))
talkEntry:addCondition(condition_item(185, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred seventy five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 37500))
talkEntry:addConsequence(consequence_deleteitem(185, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 256))
talkEntry:addCondition(condition_item(185, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertfünfundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 37500))
talkEntry:addConsequence(consequence_deleteitem(185, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 256))
talkEntry:addCondition(condition_item(185, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five visored helmets of darkness. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 256))
talkEntry:addCondition(condition_item(185, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Visierhelme der Dunkelheit. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 256))
talkEntry:addCondition(condition_item(185, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five visored helmets of darkness. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 256))
talkEntry:addCondition(condition_item(185, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Visierhelme der Dunkelheit. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.43902439))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five flame helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five flame helmets. I'll pay three hundred seventy five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 257))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.43902439))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Flammenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Flammenhelme. Ich werde dafür dreihundertfünfundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 257))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.43902439))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five flame helmets."))
talkEntry:addResponse("A reliable client of mine has a demand for five flame helmets. I'll pay three hundred seventy five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 257))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.43902439))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Flammenhelme."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Flammenhelme. Ich werde dafür dreihundertfünfundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 257))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 257))
talkEntry:addCondition(condition_item(2286, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred seventy five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 37500))
talkEntry:addConsequence(consequence_deleteitem(2286, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 257))
talkEntry:addCondition(condition_item(2286, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertfünfundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 37500))
talkEntry:addConsequence(consequence_deleteitem(2286, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 257))
talkEntry:addCondition(condition_item(2286, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five flame helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 257))
talkEntry:addCondition(condition_item(2286, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Flammenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 257))
talkEntry:addCondition(condition_item(2286, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five flame helmets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 257))
talkEntry:addCondition(condition_item(2286, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Flammenhelme. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper diamond amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper diamond amulets. I'll pay three hundred ninety two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 258))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Diamantamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Diamantamulette. Ich werde dafür dreihundertzweiundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 258))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper diamond amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper diamond amulets. I'll pay three hundred ninety two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 258))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Diamantamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Diamantamulette. Ich werde dafür dreihundertzweiundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 258))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 258))
talkEntry:addCondition(condition_item(3530, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred ninety two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 39200))
talkEntry:addConsequence(consequence_deleteitem(3530, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 258))
talkEntry:addCondition(condition_item(3530, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertzweiundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 39200))
talkEntry:addConsequence(consequence_deleteitem(3530, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 258))
talkEntry:addCondition(condition_item(3530, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five copper diamond amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 258))
talkEntry:addCondition(condition_item(3530, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Diamantamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 258))
talkEntry:addCondition(condition_item(3530, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five copper diamond amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 258))
talkEntry:addCondition(condition_item(3530, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Diamantamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.564102564))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper diamond rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper diamond rings. I'll pay three hundred ninety two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 259))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.564102564))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Diamantringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Diamantringe. Ich werde dafür dreihundertzweiundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 259))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.564102564))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five copper diamond rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five copper diamond rings. I'll pay three hundred ninety two silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 259))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.564102564))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf kupferne Diamantringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf kupferne Diamantringe. Ich werde dafür dreihundertzweiundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 259))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 259))
talkEntry:addCondition(condition_item(3531, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded three hundred ninety two silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 39200))
talkEntry:addConsequence(consequence_deleteitem(3531, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 259))
talkEntry:addCondition(condition_item(3531, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst dreihundertzweiundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 39200))
talkEntry:addConsequence(consequence_deleteitem(3531, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 259))
talkEntry:addCondition(condition_item(3531, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five copper diamond rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 259))
talkEntry:addCondition(condition_item(3531, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Diamantringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 259))
talkEntry:addCondition(condition_item(3531, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five copper diamond rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 259))
talkEntry:addCondition(condition_item(3531, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf kupferne Diamantringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.631578947))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five ritual daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five ritual daggers. I'll pay four hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 260))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.631578947))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ritualdolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ritualdolche. Ich werde dafür vierhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 260))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.631578947))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five ritual daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five ritual daggers. I'll pay four hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 260))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.631578947))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ritualdolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ritualdolche. Ich werde dafür vierhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 260))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 260))
talkEntry:addCondition(condition_item(2672, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded four hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 43600))
talkEntry:addConsequence(consequence_deleteitem(2672, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 260))
talkEntry:addCondition(condition_item(2672, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 43600))
talkEntry:addConsequence(consequence_deleteitem(2672, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 260))
talkEntry:addCondition(condition_item(2672, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five ritual daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 260))
talkEntry:addCondition(condition_item(2672, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ritualdolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 260))
talkEntry:addCondition(condition_item(2672, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five ritual daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 260))
talkEntry:addCondition(condition_item(2672, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ritualdolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.702702703))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver diamond amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver diamond amulets. I'll pay four hundred fifty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 261))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.702702703))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Diamantamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Diamantamulette. Ich werde dafür vierhundertfünfundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 261))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.702702703))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver diamond amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver diamond amulets. I'll pay four hundred fifty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 261))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.702702703))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Diamantamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Diamantamulette. Ich werde dafür vierhundertfünfundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 261))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 261))
talkEntry:addCondition(condition_item(3532, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded four hundred fifty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 45500))
talkEntry:addConsequence(consequence_deleteitem(3532, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 261))
talkEntry:addCondition(condition_item(3532, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierhundertfünfundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 45500))
talkEntry:addConsequence(consequence_deleteitem(3532, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 261))
talkEntry:addCondition(condition_item(3532, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silver diamond amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 261))
talkEntry:addCondition(condition_item(3532, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Diamantamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 261))
talkEntry:addCondition(condition_item(3532, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silver diamond amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 261))
talkEntry:addCondition(condition_item(3532, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Diamantamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.777777778))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver diamond rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver diamond rings. I'll pay four hundred fifty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 262))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.777777778))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Diamantringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Diamantringe. Ich werde dafür vierhundertfünfundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 262))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.777777778))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five silver diamond rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five silver diamond rings. I'll pay four hundred fifty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 262))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.777777778))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf silberne Diamantringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf silberne Diamantringe. Ich werde dafür vierhundertfünfundfünfzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 262))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 262))
talkEntry:addCondition(condition_item(3533, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded four hundred fifty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 45500))
talkEntry:addConsequence(consequence_deleteitem(3533, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 262))
talkEntry:addCondition(condition_item(3533, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierhundertfünfundfünfzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 45500))
talkEntry:addConsequence(consequence_deleteitem(3533, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 262))
talkEntry:addCondition(condition_item(3533, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five silver diamond rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 262))
talkEntry:addCondition(condition_item(3533, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Diamantringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 262))
talkEntry:addCondition(condition_item(3533, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five silver diamond rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 262))
talkEntry:addCondition(condition_item(3533, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf silberne Diamantringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.857142857))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five cleaver axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five cleaver axes. I'll pay four hundred seventy nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 263))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.857142857))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Spaltäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Spaltäxte. Ich werde dafür vierhundertneunundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 263))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.857142857))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five cleaver axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five cleaver axes. I'll pay four hundred seventy nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 263))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.857142857))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Spaltäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Spaltäxte. Ich werde dafür vierhundertneunundsiebzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 263))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 263))
talkEntry:addCondition(condition_item(1527, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded four hundred seventy nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 47900))
talkEntry:addConsequence(consequence_deleteitem(1527, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 263))
talkEntry:addCondition(condition_item(1527, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst vierhundertneunundsiebzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 47900))
talkEntry:addConsequence(consequence_deleteitem(1527, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 263))
talkEntry:addCondition(condition_item(1527, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five cleaver axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 263))
talkEntry:addCondition(condition_item(1527, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Spaltäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 263))
talkEntry:addCondition(condition_item(1527, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five cleaver axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 263))
talkEntry:addCondition(condition_item(1527, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Spaltäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(2.941176471))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five holy chain pants."))
talkEntry:addResponse("A reliable client of mine has a demand for five holy chain pants. I'll pay five hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 264))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(2.941176471))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf heilige Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf heilige Kettenhosen. Ich werde dafür fünfhundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 264))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.941176471))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five holy chain pants."))
talkEntry:addResponse("A reliable client of mine has a demand for five holy chain pants. I'll pay five hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 264))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(2.941176471))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf heilige Kettenhosen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf heilige Kettenhosen. Ich werde dafür fünfhundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 264))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 264))
talkEntry:addCondition(condition_item(1491, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 50000))
talkEntry:addConsequence(consequence_deleteitem(1491, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 264))
talkEntry:addCondition(condition_item(1491, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundert Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 50000))
talkEntry:addConsequence(consequence_deleteitem(1491, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 264))
talkEntry:addCondition(condition_item(1491, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five holy chain pants. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 264))
talkEntry:addCondition(condition_item(1491, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf heilige Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 264))
talkEntry:addCondition(condition_item(1491, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five holy chain pants. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 264))
talkEntry:addCondition(condition_item(1491, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf heilige Kettenhosen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(3.03030303))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five steel greaves of eternal night."))
talkEntry:addResponse("A reliable client of mine has a demand for five steel greaves of eternal night. I'll pay five hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 265))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(3.03030303))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Stahlbeinschienen der ewigen Nacht."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Stahlbeinschienen der ewigen Nacht. Ich werde dafür fünfhundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 265))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.03030303))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five steel greaves of eternal night."))
talkEntry:addResponse("A reliable client of mine has a demand for five steel greaves of eternal night. I'll pay five hundred silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 265))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.03030303))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Stahlbeinschienen der ewigen Nacht."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Stahlbeinschienen der ewigen Nacht. Ich werde dafür fünfhundert Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 265))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 265))
talkEntry:addCondition(condition_item(1499, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 50000))
talkEntry:addConsequence(consequence_deleteitem(1499, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 265))
talkEntry:addCondition(condition_item(1499, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundert Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 50000))
talkEntry:addConsequence(consequence_deleteitem(1499, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 265))
talkEntry:addCondition(condition_item(1499, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five steel greaves of eternal night. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 265))
talkEntry:addCondition(condition_item(1499, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Stahlbeinschienen der ewigen Nacht. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 265))
talkEntry:addCondition(condition_item(1499, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five steel greaves of eternal night. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 265))
talkEntry:addCondition(condition_item(1499, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Stahlbeinschienen der ewigen Nacht. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(3.125))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded longswords. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 266))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(3.125))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Langschwerter. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 266))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.125))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded longswords. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 266))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.125))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Langschwerter. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 266))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 266))
talkEntry:addCondition(condition_item(84, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(84, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 266))
talkEntry:addCondition(condition_item(84, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertvierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(84, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 266))
talkEntry:addCondition(condition_item(84, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gilded longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 266))
talkEntry:addCondition(condition_item(84, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 266))
talkEntry:addCondition(condition_item(84, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gilded longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 266))
talkEntry:addCondition(condition_item(84, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(3.225806452))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded scale armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded scale armours. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 267))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(3.225806452))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Schuppenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Schuppenpanzer. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 267))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.225806452))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five gilded scale armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five gilded scale armours. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 267))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.225806452))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf vergoldete Schuppenpanzer."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf vergoldete Schuppenpanzer. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 267))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 267))
talkEntry:addCondition(condition_item(1440, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(1440, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 267))
talkEntry:addCondition(condition_item(1440, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertvierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(1440, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 267))
talkEntry:addCondition(condition_item(1440, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five gilded scale armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 267))
talkEntry:addCondition(condition_item(1440, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Schuppenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 267))
talkEntry:addCondition(condition_item(1440, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five gilded scale armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 267))
talkEntry:addCondition(condition_item(1440, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf vergoldete Schuppenpanzer. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(3.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian noble's armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian noble's armours. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 268))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(3.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Adeligenrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Adeligenrüstungen. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 268))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five albarian noble's armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five albarian noble's armours. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 268))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf albarische Adeligenrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf albarische Adeligenrüstungen. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 268))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 268))
talkEntry:addCondition(condition_item(2367, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2367, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 268))
talkEntry:addCondition(condition_item(2367, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertvierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2367, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 268))
talkEntry:addCondition(condition_item(2367, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five albarian noble's armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 268))
talkEntry:addCondition(condition_item(2367, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Adeligenrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 268))
talkEntry:addCondition(condition_item(2367, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five albarian noble's armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 268))
talkEntry:addCondition(condition_item(2367, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf albarische Adeligenrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(3.448275862))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five dwarven axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five dwarven axes. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 269))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(3.448275862))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Zwergenäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Zwergenäxte. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 269))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.448275862))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five dwarven axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five dwarven axes. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 269))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.448275862))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Zwergenäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Zwergenäxte. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 269))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 269))
talkEntry:addCondition(condition_item(2660, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2660, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 269))
talkEntry:addCondition(condition_item(2660, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertvierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2660, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 269))
talkEntry:addCondition(condition_item(2660, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five dwarven axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 269))
talkEntry:addCondition(condition_item(2660, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Zwergenäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 269))
talkEntry:addCondition(condition_item(2660, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five dwarven axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 269))
talkEntry:addCondition(condition_item(2660, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Zwergenäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(3.571428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five rapiers."))
talkEntry:addResponse("A reliable client of mine has a demand for five rapiers. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 270))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(3.571428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Degen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Degen. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 270))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.571428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five rapiers."))
talkEntry:addResponse("A reliable client of mine has a demand for five rapiers. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 270))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.571428571))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Degen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Degen. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 270))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 270))
talkEntry:addCondition(condition_item(2675, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2675, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 270))
talkEntry:addCondition(condition_item(2675, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertvierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2675, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 270))
talkEntry:addCondition(condition_item(2675, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five rapiers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 270))
talkEntry:addCondition(condition_item(2675, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Degen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 270))
talkEntry:addCondition(condition_item(2675, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five rapiers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 270))
talkEntry:addCondition(condition_item(2675, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Degen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(3.703703704))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five elven rainbowswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five elven rainbowswords. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 271))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(3.703703704))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Elfen-Regenbogenschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Elfen-Regenbogenschwerter. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 271))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.703703704))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five elven rainbowswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five elven rainbowswords. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 271))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.703703704))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Elfen-Regenbogenschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Elfen-Regenbogenschwerter. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 271))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 271))
talkEntry:addCondition(condition_item(2775, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2775, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 271))
talkEntry:addCondition(condition_item(2775, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertvierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2775, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 271))
talkEntry:addCondition(condition_item(2775, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five elven rainbowswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 271))
talkEntry:addCondition(condition_item(2775, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Elfen-Regenbogenschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 271))
talkEntry:addCondition(condition_item(2775, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five elven rainbowswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 271))
talkEntry:addCondition(condition_item(2775, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Elfen-Regenbogenschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(3.846153846))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five snake swords."))
talkEntry:addResponse("A reliable client of mine has a demand for five snake swords. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 272))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(3.846153846))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Schlangenschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Schlangenschwerter. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 272))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.846153846))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five snake swords."))
talkEntry:addResponse("A reliable client of mine has a demand for five snake swords. I'll pay five hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 272))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(3.846153846))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Schlangenschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Schlangenschwerter. Ich werde dafür fünfhundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 272))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 272))
talkEntry:addCondition(condition_item(2788, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2788, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 272))
talkEntry:addCondition(condition_item(2788, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertvierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52400))
talkEntry:addConsequence(consequence_deleteitem(2788, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 272))
talkEntry:addCondition(condition_item(2788, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five snake swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 272))
talkEntry:addCondition(condition_item(2788, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Schlangenschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 272))
talkEntry:addCondition(condition_item(2788, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five snake swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 272))
talkEntry:addCondition(condition_item(2788, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Schlangenschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden diamond rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden diamond rings. I'll pay five hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 273))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Diamantringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Diamantringe. Ich werde dafür fünfhundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 273))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden diamond rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden diamond rings. I'll pay five hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 273))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Diamantringe."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Diamantringe. Ich werde dafür fünfhundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 273))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 273))
talkEntry:addCondition(condition_item(280, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52500))
talkEntry:addConsequence(consequence_deleteitem(280, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 273))
talkEntry:addCondition(condition_item(280, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertfünfundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52500))
talkEntry:addConsequence(consequence_deleteitem(280, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 273))
talkEntry:addCondition(condition_item(280, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five golden diamond rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 273))
talkEntry:addCondition(condition_item(280, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Diamantringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 273))
talkEntry:addCondition(condition_item(280, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five golden diamond rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 273))
talkEntry:addCondition(condition_item(280, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Diamantringe. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.166666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five charms of the icebird."))
talkEntry:addResponse("A reliable client of mine has a demand for five charms of the icebird. I'll pay five hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 274))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.166666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Eisvogelamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Eisvogelamulette. Ich werde dafür fünfhundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 274))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.166666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five charms of the icebird."))
talkEntry:addResponse("A reliable client of mine has a demand for five charms of the icebird. I'll pay five hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 274))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.166666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Eisvogelamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Eisvogelamulette. Ich werde dafür fünfhundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 274))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 274))
talkEntry:addCondition(condition_item(334, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52500))
talkEntry:addConsequence(consequence_deleteitem(334, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 274))
talkEntry:addCondition(condition_item(334, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertfünfundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52500))
talkEntry:addConsequence(consequence_deleteitem(334, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 274))
talkEntry:addCondition(condition_item(334, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five charms of the icebird. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 274))
talkEntry:addCondition(condition_item(334, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Eisvogelamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 274))
talkEntry:addCondition(condition_item(334, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five charms of the icebird. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 274))
talkEntry:addCondition(condition_item(334, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Eisvogelamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.347826087))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five archmage rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five archmage rings. I'll pay five hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 275))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.347826087))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ringe des Erzmagiers."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ringe des Erzmagiers. Ich werde dafür fünfhundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 275))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.347826087))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five archmage rings."))
talkEntry:addResponse("A reliable client of mine has a demand for five archmage rings. I'll pay five hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 275))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.347826087))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Ringe des Erzmagiers."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Ringe des Erzmagiers. Ich werde dafür fünfhundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 275))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 275))
talkEntry:addCondition(condition_item(2559, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52500))
talkEntry:addConsequence(consequence_deleteitem(2559, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 275))
talkEntry:addCondition(condition_item(2559, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertfünfundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52500))
talkEntry:addConsequence(consequence_deleteitem(2559, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 275))
talkEntry:addCondition(condition_item(2559, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five archmage rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 275))
talkEntry:addCondition(condition_item(2559, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ringe des Erzmagiers. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 275))
talkEntry:addCondition(condition_item(2559, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five archmage rings. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 275))
talkEntry:addCondition(condition_item(2559, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Ringe des Erzmagiers. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.545454545))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden diamond amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden diamond amulets. I'll pay five hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 276))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.545454545))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Diamantamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Diamantamulette. Ich werde dafür fünfhundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 276))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.545454545))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five golden diamond amulets."))
talkEntry:addResponse("A reliable client of mine has a demand for five golden diamond amulets. I'll pay five hundred twenty five silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 276))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.545454545))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf goldene Diamantamulette."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf goldene Diamantamulette. Ich werde dafür fünfhundertfünfundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 276))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 276))
talkEntry:addCondition(condition_item(3534, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded five hundred twenty five silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 52500))
talkEntry:addConsequence(consequence_deleteitem(3534, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 276))
talkEntry:addCondition(condition_item(3534, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst fünfhundertfünfundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 52500))
talkEntry:addConsequence(consequence_deleteitem(3534, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 276))
talkEntry:addCondition(condition_item(3534, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five golden diamond amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 276))
talkEntry:addCondition(condition_item(3534, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Diamantamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 276))
talkEntry:addCondition(condition_item(3534, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five golden diamond amulets. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 276))
talkEntry:addCondition(condition_item(3534, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf goldene Diamantamulette. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.761904762))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five Malachín daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five Malachín daggers. I'll pay six hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 277))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.761904762))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Malachíndolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Malachíndolche. Ich werde dafür sechshundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 277))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.761904762))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five Malachín daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five Malachín daggers. I'll pay six hundred twenty four silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 277))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(4.761904762))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Malachíndolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Malachíndolche. Ich werde dafür sechshundertvierundzwanzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 277))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 277))
talkEntry:addCondition(condition_item(91, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded six hundred twenty four silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 62400))
talkEntry:addConsequence(consequence_deleteitem(91, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 277))
talkEntry:addCondition(condition_item(91, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechshundertvierundzwanzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 62400))
talkEntry:addConsequence(consequence_deleteitem(91, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 277))
talkEntry:addCondition(condition_item(91, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five Malachín daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 277))
talkEntry:addCondition(condition_item(91, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Malachíndolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 277))
talkEntry:addCondition(condition_item(91, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five Malachín daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 277))
talkEntry:addCondition(condition_item(91, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Malachíndolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five double axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five double axes. I'll pay six hundred ninety nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 278))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Doppeläxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Doppeläxte. Ich werde dafür sechshundertneunundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 278))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five double axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five double axes. I'll pay six hundred ninety nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 278))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Doppeläxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Doppeläxte. Ich werde dafür sechshundertneunundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 278))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 278))
talkEntry:addCondition(condition_item(205, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded six hundred ninety nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 69900))
talkEntry:addConsequence(consequence_deleteitem(205, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 278))
talkEntry:addCondition(condition_item(205, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechshundertneunundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 69900))
talkEntry:addConsequence(consequence_deleteitem(205, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 278))
talkEntry:addCondition(condition_item(205, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five double axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 278))
talkEntry:addCondition(condition_item(205, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Doppeläxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 278))
talkEntry:addCondition(condition_item(205, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five double axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 278))
talkEntry:addCondition(condition_item(205, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Doppeläxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.263157895))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five two-handed swords."))
talkEntry:addResponse("A reliable client of mine has a demand for five two-handed swords. I'll pay six hundred ninety nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 279))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.263157895))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Zweihänder."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Zweihänder. Ich werde dafür sechshundertneunundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 279))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(5.263157895))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five two-handed swords."))
talkEntry:addResponse("A reliable client of mine has a demand for five two-handed swords. I'll pay six hundred ninety nine silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 279))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(5.263157895))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Zweihänder."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Zweihänder. Ich werde dafür sechshundertneunundneunzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 279))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 279))
talkEntry:addCondition(condition_item(2731, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded six hundred ninety nine silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 69900))
talkEntry:addConsequence(consequence_deleteitem(2731, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 279))
talkEntry:addCondition(condition_item(2731, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst sechshundertneunundneunzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 69900))
talkEntry:addConsequence(consequence_deleteitem(2731, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 279))
talkEntry:addCondition(condition_item(2731, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five two-handed swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 279))
talkEntry:addCondition(condition_item(2731, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Zweihänder. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 279))
talkEntry:addCondition(condition_item(2731, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five two-handed swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 279))
talkEntry:addCondition(condition_item(2731, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Zweihänder. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.555555556))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium-plated longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium-plated longswords. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 280))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.555555556))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf merinium-beschichtete Schwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf merinium-beschichtete Schwerter. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 280))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(5.555555556))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium-plated longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium-plated longswords. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 280))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(5.555555556))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf merinium-beschichtete Schwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf merinium-beschichtete Schwerter. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 280))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 280))
talkEntry:addCondition(condition_item(123, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seven hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(123, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 280))
talkEntry:addCondition(condition_item(123, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebenhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(123, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 280))
talkEntry:addCondition(condition_item(123, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five merinium-plated longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 280))
talkEntry:addCondition(condition_item(123, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf merinium-beschichtete Schwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 280))
talkEntry:addCondition(condition_item(123, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five merinium-plated longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 280))
talkEntry:addCondition(condition_item(123, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf merinium-beschichtete Schwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.882352941))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five fire longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five fire longswords. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 281))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.882352941))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Feuer-Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Feuer-Langschwerter. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 281))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(5.882352941))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five fire longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five fire longswords. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 281))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(5.882352941))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Feuer-Langschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Feuer-Langschwerter. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 281))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 281))
talkEntry:addCondition(condition_item(206, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seven hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(206, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 281))
talkEntry:addCondition(condition_item(206, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebenhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(206, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 281))
talkEntry:addCondition(condition_item(206, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five fire longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 281))
talkEntry:addCondition(condition_item(206, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Feuer-Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 281))
talkEntry:addCondition(condition_item(206, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five fire longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 281))
talkEntry:addCondition(condition_item(206, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Feuer-Langschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium-plated battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium-plated battle axes. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 282))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf merinium-beschichtete Äxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf merinium-beschichtete Äxte. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 282))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium-plated battle axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium-plated battle axes. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 282))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf merinium-beschichtete Äxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf merinium-beschichtete Äxte. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 282))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 282))
talkEntry:addCondition(condition_item(296, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seven hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(296, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 282))
talkEntry:addCondition(condition_item(296, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebenhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(296, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 282))
talkEntry:addCondition(condition_item(296, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five merinium-plated battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 282))
talkEntry:addCondition(condition_item(296, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf merinium-beschichtete Äxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 282))
talkEntry:addCondition(condition_item(296, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five merinium-plated battle axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 282))
talkEntry:addCondition(condition_item(296, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf merinium-beschichtete Äxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(6.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium-plated daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium-plated daggers. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 283))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(6.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf merinium-beschichtete Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf merinium-beschichtete Dolche. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 283))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(6.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five merinium-plated daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five merinium-plated daggers. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 283))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(6.666666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf merinium-beschichtete Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf merinium-beschichtete Dolche. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 283))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 283))
talkEntry:addCondition(condition_item(444, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seven hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(444, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 283))
talkEntry:addCondition(condition_item(444, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebenhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(444, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 283))
talkEntry:addCondition(condition_item(444, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five merinium-plated daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 283))
talkEntry:addCondition(condition_item(444, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf merinium-beschichtete Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 283))
talkEntry:addCondition(condition_item(444, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five merinium-plated daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 283))
talkEntry:addCondition(condition_item(444, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf merinium-beschichtete Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(7.142857143))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five salkamaerian officer's armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five salkamaerian officer's armours. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 284))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(7.142857143))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf salkamaerische Offiziersrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf salkamaerische Offiziersrüstungen. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 284))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(7.142857143))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five salkamaerian officer's armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five salkamaerian officer's armours. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 284))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(7.142857143))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf salkamaerische Offiziersrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf salkamaerische Offiziersrüstungen. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 284))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 284))
talkEntry:addCondition(condition_item(2365, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seven hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(2365, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 284))
talkEntry:addCondition(condition_item(2365, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebenhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(2365, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 284))
talkEntry:addCondition(condition_item(2365, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five salkamaerian officer's armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 284))
talkEntry:addCondition(condition_item(2365, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf salkamaerische Offiziersrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 284))
talkEntry:addCondition(condition_item(2365, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five salkamaerian officer's armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 284))
talkEntry:addCondition(condition_item(2365, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf salkamaerische Offiziersrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(7.692307692))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five heavy plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five heavy plate armours. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 285))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(7.692307692))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf schwerer Stahlharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf schwerer Stahlharnische. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 285))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(7.692307692))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five heavy plate armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five heavy plate armours. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 285))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(7.692307692))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf schwerer Stahlharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf schwerer Stahlharnische. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 285))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 285))
talkEntry:addCondition(condition_item(2393, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seven hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(2393, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 285))
talkEntry:addCondition(condition_item(2393, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebenhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(2393, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 285))
talkEntry:addCondition(condition_item(2393, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five heavy plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 285))
talkEntry:addCondition(condition_item(2393, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf schwerer Stahlharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 285))
talkEntry:addCondition(condition_item(2393, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five heavy plate armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 285))
talkEntry:addCondition(condition_item(2393, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf schwerer Stahlharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(8.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical serinjah-swords."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical serinjah-swords. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 286))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(8.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Serinjah-Schwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Serinjah-Schwerter. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 286))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(8.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical serinjah-swords."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical serinjah-swords. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 286))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(8.333333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Serinjah-Schwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Serinjah-Schwerter. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 286))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 286))
talkEntry:addCondition(condition_item(2693, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seven hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(2693, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 286))
talkEntry:addCondition(condition_item(2693, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebenhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(2693, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 286))
talkEntry:addCondition(condition_item(2693, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five magical serinjah-swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 286))
talkEntry:addCondition(condition_item(2693, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Serinjah-Schwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 286))
talkEntry:addCondition(condition_item(2693, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five magical serinjah-swords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 286))
talkEntry:addCondition(condition_item(2693, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Serinjah-Schwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(9.090909091))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical longswords. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 287))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(9.090909091))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Langschwert."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Langschwert. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 287))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(9.090909091))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical longswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical longswords. I'll pay seven hundred thirty six silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 287))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(9.090909091))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Langschwert."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Langschwert. Ich werde dafür siebenhundertsechsunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 287))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 287))
talkEntry:addCondition(condition_item(2704, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded seven hundred thirty six silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(2704, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 287))
talkEntry:addCondition(condition_item(2704, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst siebenhundertsechsunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 73600))
talkEntry:addConsequence(consequence_deleteitem(2704, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 287))
talkEntry:addCondition(condition_item(2704, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five magical longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 287))
talkEntry:addCondition(condition_item(2704, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Langschwert. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 287))
talkEntry:addCondition(condition_item(2704, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five magical longswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 287))
talkEntry:addCondition(condition_item(2704, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Langschwert. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five fire waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five fire waraxes. I'll pay nine hundred eighty one silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 288))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Feuer-Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Feuer-Kriegsäxte. Ich werde dafür neunhunderteinundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 288))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five fire waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five fire waraxes. I'll pay nine hundred eighty one silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 288))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Feuer-Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Feuer-Kriegsäxte. Ich werde dafür neunhunderteinundachtzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 288))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 288))
talkEntry:addCondition(condition_item(2627, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded nine hundred eighty one silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 98100))
talkEntry:addConsequence(consequence_deleteitem(2627, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 288))
talkEntry:addCondition(condition_item(2627, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst neunhunderteinundachtzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 98100))
talkEntry:addConsequence(consequence_deleteitem(2627, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 288))
talkEntry:addCondition(condition_item(2627, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five fire waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 288))
talkEntry:addCondition(condition_item(2627, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Feuer-Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 288))
talkEntry:addCondition(condition_item(2627, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five fire waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 288))
talkEntry:addCondition(condition_item(2627, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Feuer-Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(11.11111111))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five nightplates."))
talkEntry:addResponse("A reliable client of mine has a demand for five nightplates. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 289))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(11.11111111))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Nachtharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Nachtharnische. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 289))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(11.11111111))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five nightplates."))
talkEntry:addResponse("A reliable client of mine has a demand for five nightplates. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 289))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(11.11111111))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Nachtharnische."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Nachtharnische. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 289))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 289))
talkEntry:addCondition(condition_item(2363, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2363, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 289))
talkEntry:addCondition(condition_item(2363, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausend Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2363, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 289))
talkEntry:addCondition(condition_item(2363, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five nightplates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 289))
talkEntry:addCondition(condition_item(2363, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Nachtharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 289))
talkEntry:addCondition(condition_item(2363, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five nightplates. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 289))
talkEntry:addCondition(condition_item(2363, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Nachtharnische. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five state armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five state armours. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 290))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Prunkrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Prunkrüstungen. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 290))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five state armours."))
talkEntry:addResponse("A reliable client of mine has a demand for five state armours. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 290))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Prunkrüstungen."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Prunkrüstungen. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 290))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 290))
talkEntry:addCondition(condition_item(2400, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2400, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 290))
talkEntry:addCondition(condition_item(2400, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausend Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2400, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 290))
talkEntry:addCondition(condition_item(2400, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five state armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 290))
talkEntry:addCondition(condition_item(2400, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Prunkrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 290))
talkEntry:addCondition(condition_item(2400, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five state armours. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 290))
talkEntry:addCondition(condition_item(2400, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Prunkrüstungen. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(14.28571429))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical broadswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical broadswords. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 291))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(14.28571429))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Breitschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Breitschwerter. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 291))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(14.28571429))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical broadswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical broadswords. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 291))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(14.28571429))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Breitschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Breitschwerter. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 291))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 291))
talkEntry:addCondition(condition_item(2654, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2654, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 291))
talkEntry:addCondition(condition_item(2654, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausend Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2654, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 291))
talkEntry:addCondition(condition_item(2654, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five magical broadswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 291))
talkEntry:addCondition(condition_item(2654, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Breitschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 291))
talkEntry:addCondition(condition_item(2654, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five magical broadswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 291))
talkEntry:addCondition(condition_item(2654, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Breitschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(16.66666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five fire broadswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five fire broadswords. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 292))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(16.66666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Feuerbreitschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Feuerbreitschwerter. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 292))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(16.66666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five fire broadswords."))
talkEntry:addResponse("A reliable client of mine has a demand for five fire broadswords. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 292))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(16.66666667))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf Feuerbreitschwerter."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf Feuerbreitschwerter. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 292))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 292))
talkEntry:addCondition(condition_item(2656, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2656, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 292))
talkEntry:addCondition(condition_item(2656, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausend Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2656, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 292))
talkEntry:addCondition(condition_item(2656, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five fire broadswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 292))
talkEntry:addCondition(condition_item(2656, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Feuerbreitschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 292))
talkEntry:addCondition(condition_item(2656, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five fire broadswords. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 292))
talkEntry:addCondition(condition_item(2656, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf Feuerbreitschwerter. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical dwarven axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical dwarven axes. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 293))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Zwergenäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Zwergenäxte. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 293))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical dwarven axes."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical dwarven axes. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 293))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Zwergenäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Zwergenäxte. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 293))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 293))
talkEntry:addCondition(condition_item(2662, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2662, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 293))
talkEntry:addCondition(condition_item(2662, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausend Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2662, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 293))
talkEntry:addCondition(condition_item(2662, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five magical dwarven axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 293))
talkEntry:addCondition(condition_item(2662, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Zwergenäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 293))
talkEntry:addCondition(condition_item(2662, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five magical dwarven axes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 293))
talkEntry:addCondition(condition_item(2662, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Zwergenäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical daggers. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 294))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Dolche. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 294))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical daggers. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 294))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Dolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Dolche. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 294))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 294))
talkEntry:addCondition(condition_item(2671, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2671, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 294))
talkEntry:addCondition(condition_item(2671, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausend Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2671, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 294))
talkEntry:addCondition(condition_item(2671, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five magical daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 294))
talkEntry:addCondition(condition_item(2671, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 294))
talkEntry:addCondition(condition_item(2671, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five magical daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 294))
talkEntry:addCondition(condition_item(2671, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Dolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(33.33333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five red fire daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five red fire daggers. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 295))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(33.33333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf rote Feuerdolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf rote Feuerdolche. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 295))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(33.33333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five red fire daggers."))
talkEntry:addResponse("A reliable client of mine has a demand for five red fire daggers. I'll pay one thousand silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 295))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(33.33333333))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf rote Feuerdolche."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf rote Feuerdolche. Ich werde dafür eintausend Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 295))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 295))
talkEntry:addCondition(condition_item(2742, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2742, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 295))
talkEntry:addCondition(condition_item(2742, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausend Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 100000))
talkEntry:addConsequence(consequence_deleteitem(2742, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 295))
talkEntry:addCondition(condition_item(2742, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five red fire daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 295))
talkEntry:addCondition(condition_item(2742, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf rote Feuerdolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 295))
talkEntry:addCondition(condition_item(2742, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five red fire daggers. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 295))
talkEntry:addCondition(condition_item(2742, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf rote Feuerdolche. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five large fire-waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five large fire-waraxes. I'll pay one thousand one hundred forty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 296))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf riesige Feuer-Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf riesige Feuer-Kriegsäxte. Ich werde dafür eintausendeinhundertachtundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 296))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five large fire-waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five large fire-waraxes. I'll pay one thousand one hundred forty eight silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 296))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf riesige Feuer-Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf riesige Feuer-Kriegsäxte. Ich werde dafür eintausendeinhundertachtundvierzig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 296))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 296))
talkEntry:addCondition(condition_item(2640, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand one hundred forty eight silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 114800))
talkEntry:addConsequence(consequence_deleteitem(2640, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 296))
talkEntry:addCondition(condition_item(2640, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausendeinhundertachtundvierzig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 114800))
talkEntry:addConsequence(consequence_deleteitem(2640, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 296))
talkEntry:addCondition(condition_item(2640, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five large fire-waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 296))
talkEntry:addCondition(condition_item(2640, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf riesige Feuer-Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 296))
talkEntry:addCondition(condition_item(2640, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five large fire-waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 296))
talkEntry:addCondition(condition_item(2640, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf riesige Feuer-Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical waraxes. I'll pay one thousand three hundred thirty three silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 297))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Kriegsäxte. Ich werde dafür eintausenddreihundertdreiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 297))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Order] Get five magical waraxes."))
talkEntry:addResponse("A reliable client of mine has a demand for five magical waraxes. I'll pay one thousand three hundred thirty three silver coins. I won't wait long before I give this order to someone else.")
talkEntry:addConsequence(consequence_quest(210, "=", 297))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 0))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neuer Auftrag] Beschaffe fünf magische Kriegsäxte."))
talkEntry:addResponse("Ein vertrauenswürdiger Kontakt von mir benötigt fünf magische Kriegsäxte. Ich werde dafür eintausenddreihundertdreiunddreißig Silberstücke zahlen. Ich warte nicht lange und könnte den Auftrag auch an jemanden anderes vergeben.")
talkEntry:addConsequence(consequence_quest(210, "=", 297))
talkEntry:addConsequence(consequence_quest(211, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 297))
talkEntry:addCondition(condition_item(2626, "all", "=>", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Order finished] You are awarded one thousand three hundred thirty three silver coins."))
talkEntry:addResponse("You are on schedule. That is all that matters. Here is your compensation.")
talkEntry:addConsequence(consequence_money("+", 133300))
talkEntry:addConsequence(consequence_deleteitem(2626, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 297))
talkEntry:addCondition(condition_item(2626, "all", "=>", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Auftrag erledigt] Du erhältst eintausenddreihundertdreiunddreißig Silberstücke."))
talkEntry:addResponse("Du bist im Zeitplan. Das ist alles, was zählt. Hier ist deine Aufwandsentschädigung.")
talkEntry:addConsequence(consequence_money("+", 133300))
talkEntry:addConsequence(consequence_deleteitem(2626, 5, nil))
talkEntry:addConsequence(consequence_quest(210, "=", 0))
talkEntry:addConsequence(consequence_quest(211, "=", 0))
talkEntry:addConsequence(consequence_quest(212, "=", 48))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 297))
talkEntry:addCondition(condition_item(2626, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("My client requires five magical waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 297))
talkEntry:addCondition(condition_item(2626, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 297))
talkEntry:addCondition(condition_item(2626, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("My client requires five magical waraxes. Shall I give the contract to someone else or will you deliver on time?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(210, "=", 297))
talkEntry:addCondition(condition_item(2626, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Mein Auftraggeber benötigt fünf magische Kriegsäxte. Wirst du pünktlich liefern oder muss ich den Vertrag anderweitig vergeben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Get lost, bum!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Hau ab du Penner!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addTrigger("order")
talkEntry:addResponse("Get lost, bum!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Hau ab du Penner!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addTrigger("merchant")
talkEntry:addResponse("As a long-distance merchant, I travel a lot. But I won't travel if profit isn't certain.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addTrigger("Händler")
talkEntry:addResponse("Als Fernhändler komme ich weit rum. Aber ich werde keine Reise antreten, die keinen Profit verspricht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("As a long-distance merchant, I travel a lot. But I won't travel if profit isn't certain.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Als Fernhändler komme ich weit rum. Aber ich werde keine Reise antreten, die keinen Profit verspricht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Profit")
talkEntry:addCondition(condition_language("english"))
talkEntry:addResponse("Seriously, we all want to make money, don't we?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Profit")
talkEntry:addResponse("Mal ehrlich, Geld verdienen wollen wir doch alle.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addResponse("Stop wasting my time. Time is money.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Ich habe keine Zeit für dich. Denn Zeit ist Geld.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("The gods are overrated.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Die Götter werden überbewertet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Don")
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addCondition(condition_language("english"))
talkEntry:addResponse("The local boss. Obey his orders and you won't regret it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Don")
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addResponse("Der Don ist der Boss hier. Gehorche ihm und es wird dir gut ergehen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("You think Galmair is my home? Dear no! It is just another stop for me, like any other merchant town in the world.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Du denkst also, Galmair wäre mein zuhause? Verdammt, nein! Es ist nur eine weitere Station in meinem Leben, wie jede andere Handelsstadt der Welt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gynk")
talkEntry:addResponse("A cottage or manor close to Gynk. Now you know my plan for my retirement.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gynk")
talkEntry:addResponse("Ein Landgut mit Herrenhaus in der Nähe von Gynk. Jetzt kennst du den Plan für meinen Lebensabend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Anthony")
talkEntry:addTrigger("Devries")
talkEntry:addTrigger("Tony")
talkEntry:addResponse("At your service. If you pay.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Anthony")
talkEntry:addTrigger("Devries")
talkEntry:addTrigger("Tony")
talkEntry:addResponse("Stets zu Diensten. Wenn du bezahlst.")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("Ich will der allerreichste sein.", "I want to be the richest.")
talkingNPC:addCycleText("Ich streife durch das ganze Land, was Reichtum mir verleiht.", "I travel across the land to understand the wealth that's inside.")
talkingNPC:addCycleText("Profit - In allem was ich tu.", "Profit - In all I do.")
talkingNPC:addCycleText("Ich will das Gold, das mir gehört.", "To claim the gold that is rightfully mine is my cause.")
talkingNPC:addCycleText("Qualität? Wen interessiert Qualität, wenn man zu spät liefert?", "Quality? Who cares about quality if you don't deliver on time?")
talkingNPC:addCycleText("Pünktlichkeit kennt keine Grenzen.", "Punctuality knows no deviations.")
talkingNPC:addCycleText("#me zählt klimpernde Goldmünzen.", "#me counts gold coins.")
talkingNPC:addCycleText("Dann lass uns mal Kassensturz machen.", "Trade with me, the time is right.")
mainNPC:addLanguage(0)
mainNPC:addLanguage(1)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Dieser NPC ist Anthony Devries der Fernhändler.", "This NPC is Anthony Devries the long-distance merchant.")
mainNPC:setUseMessage("Fasst mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut verwirrt.", "#me looks around confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 363)
mainNPC:setEquipment(11, 2384)
mainNPC:setEquipment(5, 0)
mainNPC:setEquipment(6, 1090)
mainNPC:setEquipment(4, 1449)
mainNPC:setEquipment(9, 826)
mainNPC:setEquipment(10, 1054)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
