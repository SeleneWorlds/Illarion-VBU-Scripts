local consequence_item = require("npc.base.consequence.item")
local condition_item = require("npc.base.condition.item")
local consequence_quest = require("npc.base.consequence.quest")
local condition_language = require("npc.base.condition.language")
local consequence_deleteitem = require("npc.base.consequence.deleteitem")
local basic = require("npc.base.basic")
local condition_town = require("npc.base.condition.town")
local condition_chance = require("npc.base.condition.chance")
local talk = require("npc.base.talk")
local consequence_money = require("npc.base.consequence.money")
local condition_quest = require("npc.base.condition.quest")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(2)
local talkingNPC = talk(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, ">", 25))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Error] Something went wrong, please inform a developer."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is Decius Cerasus Industrius, an old Halfling and the majordomo from Runewick. Keywords: Hello, Quest, Runewick, management."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist Decius Cerasus Industrius, ein älterer Halbling und der Majordomus von Runewick. Schlüsselwörter: Hallo, Aufgabe, Runewick, Verwaltung."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("Be greeted.")
talkEntry:addResponse("Be greeted in the name of Elara.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Elara zum Gruße.")
talkEntry:addResponse("Seid gegrüßt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Be greeted.")
talkEntry:addResponse("Be greeted in the name of Elara.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Elara zum Gruße.")
talkEntry:addResponse("Seid gegrüßt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("Safe path.")
talkEntry:addResponse("May you be guarded by the gods.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Sichere Pfade.")
talkEntry:addResponse("Mögen die Götter euch beschützen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Safe path.")
talkEntry:addResponse("May you be guarded by the gods.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Sichere Pfade.")
talkEntry:addResponse("Mögen die Götter euch beschützen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("My spine it hurts, my eyes are getting weaker, and my joints are stiff.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addTrigger("Wie Befind")
talkEntry:addResponse("Mein Rücken schmerzt, meine Augen werden schwach und meine Gelenke sind steif.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("I am Decius Cerasus Industrius, majordomo of Runewick.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("Mein Name ist Decius Cerasus Industrius. Ich bin der Majordomus hier in Runewick.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Tramp! Why would I have a quest for you? You would sell me only low-grade products.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Strauchdieb! Warum sollte ich für dir eine Aufgabe haben? Du würdest mir wieso nur minderwertige Ware verkaufen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Tramp! Why would I have a quest for you? You would sell me only low-grade products.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Strauchdieb. Warum sollte ich für dir eine Aufgabe haben? Du würdest mir wieso nur minderwertige Ware verkaufen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Warmonger! Why would I have a quest for you? You would only destroy everything.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Kriegstreiber. Warum sollte ich für dir eine Aufgabe haben? Du würdes wieso nur alles kaputt machen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Warmonger! Why would I have a quest for you? You would only destroy everything.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Kriegstreiber. Warum sollte ich für dir eine Aufgabe haben? Du würdes wieso nur alles kaputt machen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(0))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Prowler! Ask somebody else concerning charity. I'm a busy man!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(0))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Herumtreiber. Frag wen anderes wegen Almosen. Ich bin ein beschäftigter Mann!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(0))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Prowler! Ask somebody else concerning charity. I'm a busy man!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(0))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Herumtreiber. Frag wen anderes wegen Almosen. Ich bin ein beschäftigter Mann!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(161, "~=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Sorry, I don't have a mission for you at this moment. Please come back later.")
talkEntry:addResponse("I've given out all jobs except for those I am doing  myself. You can come back later.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(161, "~=", 0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich habe leider momentan keine Aufgabe für dich. Melde dich einfach später nochmal.")
talkEntry:addResponse("Momentan habe ich bereits alle Aufgaben verteilt, bis auf die, die ich lieber selbst übernehme. Ihr könnt einfach später nochmal vorbeikommen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(161, "~=", 0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Sorry, I don't have a mission for you at this moment. Please come back later.")
talkEntry:addResponse("I've given out all jobs except for those I am doing  myself. You can come back later.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(161, "~=", 0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich habe leider momentan keine Aufgabe für dich. Melde dich einfach später nochmal.")
talkEntry:addResponse("Momentan habe ich bereits alle Aufgaben verteilt, bis auf die, die ich lieber selbst übernehme. Ihr könnt einfach später nochmal vorbeikommen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 1))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A new novice will be accepted into our ranks soon. Please bring me a novice robe. But hurry, it must be here for the ceremony.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 1))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Ein neuer Novize wird bald in unsere Reihen aufgenommen. Bringe mir bitte eine Novizenrobe. Aber beeile dich, sie muss bis zur Zeremonie da sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 1))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A new novice will be accepted into our ranks soon. Please bring me a novice robe. But hurry, it must be here for the ceremony.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 1))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Ein neuer Novize wird bald in unsere Reihen aufgenommen. Bringe mir bitte eine Novizenrobe. Aber beeile dich, sie muss bis zur Zeremonie da sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 1))
talkEntry:addCondition(condition_item(547, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded twenty silver coins."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(547, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Just in time. Our Archmage will be pleased. Here, take these as an allowance for your efforts.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 1))
talkEntry:addCondition(condition_item(547, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zwanzig Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(547, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Gerade noch rechtzeitig. Da wird sich unser Erzmagier aber freuen. Hier, nehmt dies als kleine Aufwandsentschädigung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 1))
talkEntry:addCondition(condition_item(547, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Hurry up. The Archmage does not like to welcome a new novice without handing him the matching garment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 1))
talkEntry:addCondition(condition_item(547, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Beeilt euch. Der Erzmagier mag es nicht einen neuen Novizen zu begrüßen und ihn dabei nicht das passende Gewand zu verleihen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 1))
talkEntry:addCondition(condition_item(547, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Hurry up. The Archmage does not like to welcome a new novice without handing him the matching garment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 1))
talkEntry:addCondition(condition_item(547, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Beeilt euch. Der Erzmagier mag es nicht einen neuen Novizen zu begrüßen und ihn dabei nicht das passende Gewand zu verleihen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.17))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 2))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our alchemistical resources are dwindling. Please bring me five empty bottles for alchemy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.17))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 2))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unsere alchemistischen Vorräte gehen zur Neige. Bringe mir bitte 5 leere Flaschen für die Alchemie.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.17))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 2))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our alchemistical resources are dwindling. Please bring me five empty bottles for alchemy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.17))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 2))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unsere alchemistischen Vorräte gehen zur Neige. Bringe mir bitte 5 leere Flaschen für die Alchemie.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 2))
talkEntry:addCondition(condition_item(164, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded an ice leaf."))
talkEntry:addConsequence(consequence_deleteitem(164, 5, nil))
talkEntry:addConsequence(consequence_item(760, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Five empty bottles for alchemy, check. Take this ice leaf in return.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 2))
talkEntry:addCondition(condition_item(164, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst ein Eisblatt."))
talkEntry:addConsequence(consequence_deleteitem(164, 5, nil))
talkEntry:addConsequence(consequence_item(760, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Fünf leere Flaschen für die Alchemie, abgehakt. Nimm dieses Eisblatt als Dank.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 2))
talkEntry:addCondition(condition_item(164, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Do you know what happens when some alchemists do not pour their potions into bottles? They explode in the cauldron!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 2))
talkEntry:addCondition(condition_item(164, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Weißt du was passiert, wenn manche Alchemisten ihre Gebräue nicht in Flaschen abfüllen? Sie explodieren im Kessel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 2))
talkEntry:addCondition(condition_item(164, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Do you know what happens when some alchemists do not pour their potions into bottles? They explode in the cauldron!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 2))
talkEntry:addCondition(condition_item(164, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Weißt du was passiert, wenn manche Alchemisten ihre Gebräue nicht in Flaschen abfüllen? Sie explodieren im Kessel!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.35))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 3))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("During the last celebration to honour Adron some glasses were broken. Can you bring me five glass mugs?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.35))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 3))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Bei der letzten Feier zur Ehren Adrons sind ein paar Gläser zu Bruch gegangen. Könntest du mir 5 Glaskrüge bringen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.35))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 3))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("During the last celebration to honour Adron some glasses were broken. Can you bring me five glass mugs?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.35))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 3))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Bei der letzten Feier zur Ehren Adrons sind ein paar Gläser zu Bruch gegangen. Könntest du mir 5 Glaskrüge bringen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 3))
talkEntry:addCondition(condition_item(1908, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(1908, 5, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Thank you, they will be able to celebrate the next mass with these.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 3))
talkEntry:addCondition(condition_item(1908, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(1908, 5, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Danke, damit können sie auch die nächste Messe feiern.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 3))
talkEntry:addCondition(condition_item(1908, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I still need those five glass mugs. If they do not arrive quickly neither Adron nor our all-wise Archmage will be pleased.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 3))
talkEntry:addCondition(condition_item(1908, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich benötige immernoch die fünf Glaskrüge. Wenn sie nicht bald da sind ist weder Adron noch unser allerweiseste Erzmagier erfeut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 3))
talkEntry:addCondition(condition_item(1908, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I still need those five glass mugs. If they do not arrive quickly neither Adron nor our all-wise Archmage will be pleased.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 3))
talkEntry:addCondition(condition_item(1908, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich benötige immernoch die fünf Glaskrüge. Wenn sie nicht bald da sind ist weder Adron noch unser allerweiseste Erzmagier erfeut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.55))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 4))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our Archmage works late into the night. That's why he needs a candlestick. Please bring me one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.55))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 4))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser Erzmagier arbeitet bis spät in die Nacht. Deshalb benötigt er einen Kerzenhalter. Bring mir bitte einen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.55))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 4))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our Archmage works late into the night. That's why he needs a candlestick. Please bring me one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.55))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 4))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser Erzmagier arbeitet bis spät in die Nacht. Deshalb benötigt er einen Kerzenhalter. Bring mir bitte einen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 4))
talkEntry:addCondition(condition_item(399, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five bottles of lamp oil."))
talkEntry:addConsequence(consequence_deleteitem(399, 1, nil))
talkEntry:addConsequence(consequence_item(469, 5, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Our Archmage will be happy about this. Take this lamp oil for it, he doesn't need it anymore.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 4))
talkEntry:addCondition(condition_item(399, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Lampenöl."))
talkEntry:addConsequence(consequence_deleteitem(399, 1, nil))
talkEntry:addConsequence(consequence_item(469, 5, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Da wird sich unser Erzmagier freuen. Nehmt doch das Lampenöl dafür, das braucht er jetzt nicht mehr.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 4))
talkEntry:addCondition(condition_item(399, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Have you not organized a candlestick? Do you know how hard it is to study in the dark?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 4))
talkEntry:addCondition(condition_item(399, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Hast du noch immer keinen Kerzenhalter besorgt? Weißt du wie schwer es ist im Dunkeln zu studieren?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 4))
talkEntry:addCondition(condition_item(399, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Have you not organized a candlestick? Do you know how hard it is to study in the dark?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 4))
talkEntry:addCondition(condition_item(399, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Hast du noch immer keinen Kerzenhalter besorgt? Weißt du wie schwer es ist im Dunkeln zu studieren?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(4.76))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 5))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our Archmage got a new candlestick. Now he needs ten candles for it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(4.76))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 5))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser Erzmagier hat einen neuen Kerzenhalter bekommen. Jetzt benötigt er 10 Kerzen dafür.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.76))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 5))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our Archmage got a new candlestick. Now he needs ten candles for it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(4.76))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 5))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser Erzmagier hat einen neuen Kerzenhalter bekommen. Jetzt benötigt er 10 Kerzen dafür.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 5))
talkEntry:addCondition(condition_item(43, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a silver coin."))
talkEntry:addConsequence(consequence_money("+", 100))
talkEntry:addConsequence(consequence_deleteitem(43, 10, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Beautiful candles these are, very straight. Take this coin and the thanks of our ever-studious Archmage.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 5))
talkEntry:addCondition(condition_item(43, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst ein Silberstück."))
talkEntry:addConsequence(consequence_money("+", 100))
talkEntry:addConsequence(consequence_deleteitem(43, 10, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Schöne Kerzen sind das, sehr gerade. Nimm diese Münze dafür und den Dank unseres immer gelehrsamen Erzmagiers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 5))
talkEntry:addCondition(condition_item(43, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I still need those ten candles. The best would be beautiful, straight and long-burning Runewicker candles.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 5))
talkEntry:addCondition(condition_item(43, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich benötige immernoch die zehn Kerzen. Am Besten schöne, gerade und langbrennende runewicker Kerzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 5))
talkEntry:addCondition(condition_item(43, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I still need those ten candles. The best would be beautiful, straight and long-burning Runewicker candles.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 5))
talkEntry:addCondition(condition_item(43, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich benötige immernoch die zehn Kerzen. Am Besten schöne, gerade und langbrennende runewicker Kerzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 6))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("There are always new books and scrolls written for our library. Therefore I received an order for a quill. Bring me one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 6))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Für unsere Bibliothek werden immer neue Bücher und Schriftrollen geschrieben. Deshalb wurde bei mir noch eine Schreibfeder bestellt. Bring mir bitte eine.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest]"))
talkEntry:addConsequence(consequence_quest(160, "=", 6))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("There are always new books and scrolls written for our library. Therefore I received an order for a quill. Bring me one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(5.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 6))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Für unsere Bibliothek werden immer neue Bücher und Schriftrollen geschrieben. Deshalb wurde bei mir noch eine Schreibfeder bestellt. Bring mir bitte eine.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 6))
talkEntry:addCondition(condition_item(463, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a copper ingot."))
talkEntry:addConsequence(consequence_deleteitem(463, 1, nil))
talkEntry:addConsequence(consequence_item(2550, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Many thanks. Here, take this in return, I found it while tidying up the place.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 6))
talkEntry:addCondition(condition_item(463, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen Kupferbarren."))
talkEntry:addConsequence(consequence_deleteitem(463, 1, nil))
talkEntry:addConsequence(consequence_item(2550, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Vielen Dank. Hier, nehmt dies als Dank, hab ich beim Aufräumen gefunden.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 6))
talkEntry:addCondition(condition_item(463, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Do not forget about that quill. These books do not write themselves.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 6))
talkEntry:addCondition(condition_item(463, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Vergiss die Schreibfeder nicht. Die Bücher schreiben sich nicht von allein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 6))
talkEntry:addCondition(condition_item(463, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Do not forget about that quill. These books do not write themselves.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 6))
talkEntry:addCondition(condition_item(463, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Vergiss die Schreibfeder nicht. Die Bücher schreiben sich nicht von allein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.26))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 7))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Sadly, our last feast lacked music. Please bring me a lute, I shall take care of the musician.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.26))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 7))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Leider hatten wir bei dem letzten Fest keine Musik. Bring mir doch bitte eine Laute, für den Musiker sorge ich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(5.26))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 7))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Sadly, our last feast lacked music. Please bring me a lute, I shall take care of the musician.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(5.26))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 7))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Leider hatten wir bei dem letzten Fest keine Musik. Bring mir doch bitte eine Laute, für den Musiker sorge ich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 7))
talkEntry:addCondition(condition_item(335, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded three silver coins."))
talkEntry:addConsequence(consequence_money("+", 300))
talkEntry:addConsequence(consequence_deleteitem(335, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("#me runs his fingers over the strings.'Take these coins in return.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 7))
talkEntry:addCondition(condition_item(335, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst drei Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 300))
talkEntry:addConsequence(consequence_deleteitem(335, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("#me streicht mit den Fingern über die Seiten. 'Nehmt diese Münzen dafür.'")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 7))
talkEntry:addCondition(condition_item(335, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Didn't you want to bring me a lute?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 7))
talkEntry:addCondition(condition_item(335, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wolltet ihr mir nicht noch eine Laute bringen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 7))
talkEntry:addCondition(condition_item(335, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Didn't you want to bring me a lute?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 7))
talkEntry:addCondition(condition_item(335, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wolltet ihr mir nicht noch eine Laute bringen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.56))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 8))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our enlightened Archmage wishes to give a pupil a well-deserved new wand. I hereby give you the task to bring me one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.56))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 8))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser erleuchteter Erzmagier möchte einen verdienten Schüler einen neuen Zauberstab überreichen. Ich übergeb euch hiermit die Aufgabe, mir einen zu bringen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(5.56))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 8))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our enlightened Archmage wishes to give a pupil a well-deserved new wand. I hereby give you the task to bring me one.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(5.56))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 8))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser erleuchteter Erzmagier möchte einen verdienten Schüler einen neuen Zauberstab überreichen. Ich übergeb euch hiermit die Aufgabe, mir einen zu bringen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 8))
talkEntry:addCondition(condition_item(323, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five wind arrows."))
talkEntry:addConsequence(consequence_deleteitem(323, 1, nil))
talkEntry:addConsequence(consequence_item(322, 5, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("A pretty wand, now I just have to put a bow on it. Take this arrows in return.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 8))
talkEntry:addCondition(condition_item(323, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Windpfeile."))
talkEntry:addConsequence(consequence_deleteitem(323, 1, nil))
talkEntry:addConsequence(consequence_item(322, 5, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Ein schöner Zauberstab, jetzt muss ich nurnoch eine Schleife herumbinden. Nehmt diese Pfeile als Dank.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 8))
talkEntry:addCondition(condition_item(323, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The bestowal of the wand will be soon. You should hurry up or else the Archmage won't be pleased, and me neither.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 8))
talkEntry:addCondition(condition_item(323, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Die Verleihung des Zauberstabes ist schon bald. Ihr solltet euch beeilen, sonst ist der Erzmagier nicht erfreut und ich auch nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 8))
talkEntry:addCondition(condition_item(323, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The bestowal of the wand will be soon. You should hurry up or else the Archmage won't be pleased, and me neither.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 8))
talkEntry:addCondition(condition_item(323, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Die Verleihung des Zauberstabes ist schon bald. Ihr solltet euch beeilen, sonst ist der Erzmagier nicht erfreut und ich auch nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(5.88))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 9))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A very urgent and quite elaborate order by our Archmage. Bring me a fine wizard hat.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(5.88))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 9))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine sehr dringende und etwas aufwendigere Bestellung unseres Erzmagiers. Bringe mir einen feinen Zauberhut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(5.88))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 9))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A very urgent and quite elaborate order by our Archmage. Bring me a fine wizard hat.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(5.88))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 9))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine sehr dringende und etwas aufwendigere Bestellung unseres Erzmagiers. Bringe mir einen feinen Zauberhut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 9))
talkEntry:addCondition(condition_item(371, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded thirty silver coins."))
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(371, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("I will immediately take it to our Archmage and tell him of your effort. Take these coins and the thanks of Runewick.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 9))
talkEntry:addCondition(condition_item(371, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 30 Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 3000))
talkEntry:addConsequence(consequence_deleteitem(371, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Ich werde es sofot unseren Erzmagier bringen und auch von eurer Leistung erzählen. Nehmt diese Münzen und den Dank Runewicks.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 9))
talkEntry:addCondition(condition_item(371, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I know that a fine wizard hat is not easily aquired, but what did you not understand about the word 'urgent'?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 9))
talkEntry:addCondition(condition_item(371, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich weiß, dass ein feiner Zauberhut nicht so leicht aufzutreiben ist, aber was war am Wort 'dringend' nicht zu verstehen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 9))
talkEntry:addCondition(condition_item(371, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I know that a fine wizard hat is not easily aquired, but what did you not understand about the word 'urgent'?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 9))
talkEntry:addCondition(condition_item(371, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich weiß, dass ein feiner Zauberhut nicht so leicht aufzutreiben ist, aber was war am Wort 'dringend' nicht zu verstehen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 10))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("I need a golden ruby amulet. Would you be so kind to get me one?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 10))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Ich brauche eine goldene Rubinkette. Wärt ihr so freundlich mir eine zu bringen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 10))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("I need a golden ruby amulet. Would you be so kind to get me one?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(6.25))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 10))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Ich brauche eine goldene Rubinkette. Wärt ihr so freundlich mir eine zu bringen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 10))
talkEntry:addCondition(condition_item(67, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a topaz."))
talkEntry:addConsequence(consequence_deleteitem(67, 1, nil))
talkEntry:addConsequence(consequence_item(198, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Thank you, she will like it. Take this topaz, I don't have any use for it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 10))
talkEntry:addCondition(condition_item(67, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen Topas."))
talkEntry:addConsequence(consequence_deleteitem(67, 1, nil))
talkEntry:addConsequence(consequence_item(198, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Danke, sie wird ihr gefallen. Nehmt diesen Topas dafür, ich kann damit nichts anfangen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 10))
talkEntry:addCondition(condition_item(67, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I do not see a golden ruby amulet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 10))
talkEntry:addCondition(condition_item(67, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich sehe noch keine goldene Rubinkette.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 10))
talkEntry:addCondition(condition_item(67, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I do not see a golden ruby amulet.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 10))
talkEntry:addCondition(condition_item(67, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich sehe noch keine goldene Rubinkette.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(6.67))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 11))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Today I need five blackberry muffins. Bring them to me and no further questions.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(6.67))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 11))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Heute benötige ich 5 Muffins. Bringt sie mir und fragt nicht weiter.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(6.67))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 11))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Today I need five blackberry muffins. Bring them to me and no further questions.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(6.67))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 11))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Heute benötige ich 5 Muffins. Bringt sie mir und fragt nicht weiter.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 11))
talkEntry:addCondition(condition_item(454, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded two silver coins."))
talkEntry:addConsequence(consequence_money("+", 200))
talkEntry:addConsequence(consequence_deleteitem(454, 5, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("#me eats a muffin and wordlessly hands you some coins.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 11))
talkEntry:addCondition(condition_item(454, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 2 Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 200))
talkEntry:addConsequence(consequence_deleteitem(454, 5, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("#me isst einen Muffin und überreicht dir wortlos einige Münzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 11))
talkEntry:addCondition(condition_item(454, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Neither do I see, nor do I smell the five muffins. Do you think I was joking?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 11))
talkEntry:addCondition(condition_item(454, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Weder sehe ich, noch rieche ich die fünf Muffins. Glaubt ihr etwa ich hätte einen Scherz gemacht?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 11))
talkEntry:addCondition(condition_item(454, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Neither do I see, nor do I smell the five muffins. Do you think I was joking?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 11))
talkEntry:addCondition(condition_item(454, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Weder sehe ich, noch rieche ich die fünf Muffins. Glaubt ihr etwa ich hätte einen Scherz gemacht?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(7.14))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 12))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A request was made by our researching alchemists. They need ten sun herbs. Just bring them to me and those potion makers will be happy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(7.14))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 12))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine Anfrage von unseren forschenden Alchemisten wurde gestellt. Sie brauchen 10 mal Sonnenkraut. Bringt sie mir einfach und die Tränkepanscher werden zufrieden sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(7.14))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 12))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A request was made by our researching alchemists. They need ten sun herbs. Just bring them to me and those potion makers will be happy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(7.14))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 12))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine Anfrage von unseren forschenden Alchemisten wurde gestellt. Sie brauchen 10 mal Sonnenkraut. Bringt sie mir einfach und die Tränkepanscher werden zufrieden sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 12))
talkEntry:addCondition(condition_item(133, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a sickle."))
talkEntry:addConsequence(consequence_deleteitem(133, 10, nil))
talkEntry:addConsequence(consequence_item(126, 1, 699, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Fresh herbs always smell so nice. I will take them away quickly so no disaster will happen. Here, take my old sickle as payment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 12))
talkEntry:addCondition(condition_item(133, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst eine Sichel."))
talkEntry:addConsequence(consequence_deleteitem(133, 10, nil))
talkEntry:addConsequence(consequence_item(126, 1, 699, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Frische Kräuter riechen immer so gut. Ich bring sie gleich weg, damit kein Unglück passiert. Aber nehmt noch schnell meine alte Sichel als Bezahlung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 12))
talkEntry:addCondition(condition_item(133, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The alchemists are getting pretty impatient. They're still waiting for their ten sun herbs. If they blow anything up again, this time you will be the one cleaning up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 12))
talkEntry:addCondition(condition_item(133, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Die Alchemisten werden langsam ungeduldig. Sie warten immer noch auf ihre 10 Sonnenkräuter. Wenn sie wieder was sprengen, dürft ihr diesesmal aufräumen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 12))
talkEntry:addCondition(condition_item(133, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The alchemists are getting pretty impatient. They're still waiting for their ten sun herbs. If they blow anything up again, this time you will be the one cleaning up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 12))
talkEntry:addCondition(condition_item(133, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Die Alchemisten werden langsam ungeduldig. Sie warten immer noch auf ihre 10 Sonnenkräuter. Wenn sie wieder was sprengen, dürft ihr diesesmal aufräumen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(7.69))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 13))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A request was made by our researching alchemists. They need ten flamegoblet blossoms. Just bring them to me and those potion makers will be happy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(7.69))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 13))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine Anfrage von unseren forschenden Alchemisten wurde gestellt. Sie brauchen 10 mal Flammkelchblüte. Bringt sie mir einfach und die Tränkepanscher werden zufrieden sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(7.69))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 13))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A request was made by our researching alchemists. They need ten flamegoblet blossoms. Just bring them to me and those potion makers will be happy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(7.69))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 13))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine Anfrage von unseren forschenden Alchemisten wurde gestellt. Sie brauchen 10 mal Flammkelchblüte. Bringt sie mir einfach und die Tränkepanscher werden zufrieden sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 13))
talkEntry:addCondition(condition_item(137, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded two toadstools."))
talkEntry:addConsequence(consequence_deleteitem(137, 10, nil))
talkEntry:addConsequence(consequence_item(159, 2, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Fresh herbs always smell so nice. I will take them away quickly so no disaster will happen. Take these mushrooms, I found them while cleaning up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 13))
talkEntry:addCondition(condition_item(137, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zwei Fliegenpilze."))
talkEntry:addConsequence(consequence_deleteitem(137, 10, nil))
talkEntry:addConsequence(consequence_item(159, 2, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Frische Kräuter riechen immer so gut. Ich bring sie gleich weg, damit kein Unglück passiert. Nehmt doch diese Pilze, hab sie beim Aufräumen gefunden.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 13))
talkEntry:addCondition(condition_item(137, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The alchemists are getting pretty impatient. They're still waiting for their ten flamegoblet blossoms. If they blow anything up again, this time you will be the one cleaning up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 13))
talkEntry:addCondition(condition_item(137, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Die Alchemisten werden langsam ungeduldig. Sie warten immer noch auf ihre 10 Flammkelchblüten. Wenn sie wieder was sprengen, dürft ihr diesesmal aufräumen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 13))
talkEntry:addCondition(condition_item(137, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The alchemists are getting pretty impatient. They're still waiting for their ten flamegoblet blossoms. If they blow anything up again, this time you will be the one cleaning up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 13))
talkEntry:addCondition(condition_item(137, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Die Alchemisten werden langsam ungeduldig. Sie warten immer noch auf ihre 10 Flammkelchblüten. Wenn sie wieder was sprengen, dürft ihr diesesmal aufräumen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(8.33))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 14))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A request was made by our researching alchemists. They need a desert berry. Just bring it to me and those potion makers will be happy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(8.33))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 14))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine Anfrage von unseren forschenden Alchemisten wurde gestellt. Sie brauchen eine Wüstenbeere. Bringt sie mir einfach und die Tränkepanscher werden zufrieden sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(8.33))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 14))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A request was made by our researching alchemists. They need a desert berry. Just bring it to me and those potion makers will be happy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(8.33))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 14))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine Anfrage von unseren forschenden Alchemisten wurde gestellt. Sie brauchen eine Wüstenbeere. Bringt sie mir einfach und die Tränkepanscher werden zufrieden sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 14))
talkEntry:addCondition(condition_item(769, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a bottle of tangerine juice."))
talkEntry:addConsequence(consequence_deleteitem(769, 1, nil))
talkEntry:addConsequence(consequence_item(784, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Fresh herbs always smell so nice. I will take it away quickly so no disaster will happen. Here, you really earned that.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 14))
talkEntry:addCondition(condition_item(769, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst eine Flasche mit Mandarinensaft."))
talkEntry:addConsequence(consequence_deleteitem(769, 1, nil))
talkEntry:addConsequence(consequence_item(784, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Frische Kräuter riechen immer so gut. Ich bring sie gleich weg, damit kein Unglück passiert. Hier, das habt ihr euch verdient.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 14))
talkEntry:addCondition(condition_item(769, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The alchemists are getting pretty impatient. They're still waiting for their desert berry. If they blow anything up again, this time you will be the one cleaning up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 14))
talkEntry:addCondition(condition_item(769, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Die Alchemisten werden langsam ungeduldig. Sie warten immer noch auf ihre Wüstenbeere. Wenn sie wieder was sprengen, dürft ihr diesesmal aufräumen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 14))
talkEntry:addCondition(condition_item(769, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The alchemists are getting pretty impatient. They're still waiting for their desert berry. If they blow anything up again, this time you will be the one cleaning up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 14))
talkEntry:addCondition(condition_item(769, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Die Alchemisten werden langsam ungeduldig. Sie warten immer noch auf ihre Wüstenbeere. Wenn sie wieder was sprengen, dürft ihr diesesmal aufräumen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(9.09))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 15))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our elevated Archmage expects a visitor. For his supply we still need a bottle of Runewicker wine. Please get me one quickly.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(9.09))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 15))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser erhabener Erzmagier erwartet Besuch. Für die Verköstigung brauchen wir noch eine Flasche runewicker Wein. Bring mir doch schnell eine.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(9.09))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 15))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our elevated Archmage expects a visitor. For his supply we still need a bottle of Runewicker wine. Please get me one quickly.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(9.09))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 15))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser erhabener Erzmagier erwartet Besuch. Für die Verköstigung brauchen wir noch eine Flasche runewicker Wein. Bring mir doch schnell eine.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 15))
talkEntry:addCondition(condition_item(2500, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a silver coin."))
talkEntry:addConsequence(consequence_money("+", 100))
talkEntry:addConsequence(consequence_deleteitem(2500, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Thank you for this bottle. Our guest will know how good our wine is. For you, I have this silver coin as payment.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 15))
talkEntry:addCondition(condition_item(2500, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst ein Silberstück."))
talkEntry:addConsequence(consequence_money("+", 100))
talkEntry:addConsequence(consequence_deleteitem(2500, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Danke für die Flasche. Unser Gast soll wissen welchen guten Wein wir hier haben. Für euch hab ich eine Silbermünze als Bezahlung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 15))
talkEntry:addCondition(condition_item(2500, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The guest is arriving soon and we still lack that bottle of wine. Hurry up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 15))
talkEntry:addCondition(condition_item(2500, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Der Gast kommt bald und es fehlt immernoch die Flasche Wein. Beeilt euch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 15))
talkEntry:addCondition(condition_item(2500, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The guest is arriving soon and we still lack that bottle of wine. Hurry up.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 15))
talkEntry:addCondition(condition_item(2500, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Der Gast kommt bald und es fehlt immernoch die Flasche Wein. Beeilt euch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 16))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A catastrophe. The Archmage's tobacco has got wet. He needs five leaves of tobacco. Immediately!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 16))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine Katastrophe. Das Pfeifenkraut unseres erhabenen Erzmagiers ist feucht geworden. Er benötigt 5 Blätter Tabak. Sofort!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 16))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("A catastrophe. The Archmage's tobacco has got wet. He needs five leaves of tobacco. Immediately!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 16))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eine Katastrophe. Das Pfeifenkraut unseres erhabenen Erzmagiers ist feucht geworden. Er benötigt 5 Blätter Tabak. Sofort!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 16))
talkEntry:addCondition(condition_item(772, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a parchment."))
talkEntry:addConsequence(consequence_deleteitem(772, 5, nil))
talkEntry:addConsequence(consequence_item(2745, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("That really took a while. I will still tell him who got the leaves. If it does not taste well... take this parchment, you can write your last will on this.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 16))
talkEntry:addCondition(condition_item(772, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst ein Pergament."))
talkEntry:addConsequence(consequence_deleteitem(772, 5, nil))
talkEntry:addConsequence(consequence_item(2745, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Das hat jetzt reichlich lange gedauert. Trotzdem werde ich ihn sagen, wer die Blätter besorgt hat. Wenn es ihn nicht schmeckt... hier ein Pergament, da könnt ihr euer Testament aufschreiben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 16))
talkEntry:addCondition(condition_item(772, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Where are the five tobacco leaves ? If our savant Archmage cannot smoke his pipe this evening, then... then... I don't want to think about it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 16))
talkEntry:addCondition(condition_item(772, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wo sind die fünf Tabakblätter? Wenn unser gelehrter Herr Erzmagier heut Abend nicht seine Pfeife rauchen kann, dann ...  dann ... daran will ich garnicht denken.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 16))
talkEntry:addCondition(condition_item(772, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Where are the five tobacco leaves ? If our savant Archmage cannot smoke his pipe this evening, then... then... I don't want to think about it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 16))
talkEntry:addCondition(condition_item(772, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wo sind die fünf Tabakblätter? Wenn unser gelehrter Herr Erzmagier heut Abend nicht seine Pfeife rauchen kann, dann ...  dann ... daran will ich garnicht denken.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(11.11))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 17))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("One of the best remedies for a cold is virgins weed tea. Get me a bottle.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(11.11))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 17))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eines der besten Mittel gegen eine Erkältung ist Jungfernkrauttee. Bringe mir bitte eine Flasche.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(11.11))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 17))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("One of the best remedies for a cold is virgins weed tea. Get me a bottle.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(11.11))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 17))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Eines der besten Mittel gegen eine Erkältung ist Jungfernkrauttee. Bringe mir bitte eine Flasche.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 17))
talkEntry:addCondition(condition_item(787, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a silver coin."))
talkEntry:addConsequence(consequence_money("+", 100))
talkEntry:addConsequence(consequence_deleteitem(787, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("There, he will be happy and recover quickly. All the coughing is starting to drive me insane. Thank you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 17))
talkEntry:addCondition(condition_item(787, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst ein Silberstück."))
talkEntry:addConsequence(consequence_money("+", 100))
talkEntry:addConsequence(consequence_deleteitem(787, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Da wird er sich freuen und hoffetlich bald wieder genesen. Mich macht das ganze Gehuste schon verrückt. Danke dir.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 17))
talkEntry:addCondition(condition_item(787, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I still need that bottle of virgins weed tea, otherwise even more people will get sick.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 17))
talkEntry:addCondition(condition_item(787, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich brauche immernoch die Flasche Jungfernkrauttee, sonst werden noch mehr Leute krank.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 17))
talkEntry:addCondition(condition_item(787, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I still need that bottle of virgins weed tea, otherwise even more people will get sick.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 17))
talkEntry:addCondition(condition_item(787, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich brauche immernoch die Flasche Jungfernkrauttee, sonst werden noch mehr Leute krank.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 18))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our studious Archmage needs a bag of diamond dust for a ritual. Bring me one as fast as possible.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 18))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser gelehrsamer Erzmagier braucht für ein Ritual einen Bäutel Diamantstaub. Bring es mir so schnell wie möglich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 18))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our studious Archmage needs a bag of diamond dust for a ritual. Bring me one as fast as possible.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(12.5))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 18))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser gelehrsamer Erzmagier braucht für ein Ritual einen Bäutel Diamantstaub. Bring es mir so schnell wie möglich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 18))
talkEntry:addCondition(condition_item(452, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a red dagger."))
talkEntry:addConsequence(consequence_deleteitem(452, 1, nil))
talkEntry:addConsequence(consequence_item(2740, 1, 799, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Sparkly dust, I will rely on you. If the ritual fails our Archmage knows whom to blame. Here, take my old dagger in return.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 18))
talkEntry:addCondition(condition_item(452, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen roten Dolch."))
talkEntry:addConsequence(consequence_deleteitem(452, 1, nil))
talkEntry:addConsequence(consequence_item(2740, 1, 799, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Glitzender Staub, ich werd mich auf euch verlassen. Wenn das Ritual schief geht, weiß unser Erzmagier ja, an wen er sich wenden muss. Hier nehmt meinen alten Dolch als Dank.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 18))
talkEntry:addCondition(condition_item(452, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("The ritual will start soon and the diamond dust is still missing. Hurry up, it is an important papha... parap... ingredient.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 18))
talkEntry:addCondition(condition_item(452, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Das Ritual ist bald und der Diamantstaub fehlt noch. Beeilt euch, es ist eine wichtige Papha... Parap... Zutat.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 18))
talkEntry:addCondition(condition_item(452, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("The ritual will start soon and the diamond dust is still missing. Hurry up, it is an important papha... parap... ingredient.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 18))
talkEntry:addCondition(condition_item(452, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Das Ritual ist bald und der Diamantstaub fehlt noch. Beeilt euch, er ist eine wichtige Papha... Parap... Zutat.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(14.29))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 19))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Five trout are needed. Do not ask me why, please just get them for me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(14.29))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 19))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Es werden fünf Forellen benötigt. Frag mich nicht warum, bring sie mir bitte einfach.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(14.29))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 19))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Five trout are needed. Do not ask me why, please just get them for me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(14.29))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 19))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Es werden fünf Forellen benötigt. Frag mich nicht warum, bring sie mir bitte einfach.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 19))
talkEntry:addCondition(condition_item(73, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded fifty copper coins."))
talkEntry:addConsequence(consequence_money("+", 50))
talkEntry:addConsequence(consequence_deleteitem(73, 5, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("I hope it is not just a silly novice prank. I thank you and here are a few coins for your efforts.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 19))
talkEntry:addCondition(condition_item(73, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 50 Kupferstücke."))
talkEntry:addConsequence(consequence_money("+", 50))
talkEntry:addConsequence(consequence_deleteitem(73, 5, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Ich hoff nur es ist nicht wieder so ein dummer Streich einiger Novizen. Ich danke euch und hier sind ein paar Münzen für eure Mühen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 19))
talkEntry:addCondition(condition_item(73, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("You wanted to bring me five trout.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 19))
talkEntry:addCondition(condition_item(73, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ihr wolltet mir noch fünf Forellen bringen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 19))
talkEntry:addCondition(condition_item(73, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("You wanted to bring me five trout.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 19))
talkEntry:addCondition(condition_item(73, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ihr wolltet mir noch fünf Forellen bringen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(16.67))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 20))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("I've got another task for you. Bring me twenty cherries, preferrably the sweet dark red Runewicker cherries.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(16.67))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 20))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Ich habe wieder eine Aufgabe für euch. Bringt mir 20 Kirschen, am besten die süßen, dunkelroten, runewicker Kirschen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(16.67))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 20))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("I've got another task for you. Bring me twenty cherries, preferrably the sweet dark red Runewicker cherries.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(16.67))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 20))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Ich habe wieder eine Aufgabe für euch. Bringt mir 20 Kirschen, am besten die süßen, dunkelroten, runewicker Kirschen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 20))
talkEntry:addCondition(condition_item(302, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a wicker basket."))
talkEntry:addConsequence(consequence_deleteitem(302, 20, nil))
talkEntry:addConsequence(consequence_item(799, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Thanks for the cherries. Take this wicker basket. It will help you when you gather something again.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 20))
talkEntry:addCondition(condition_item(302, "all", ">", 19, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst einen Weidenkorb."))
talkEntry:addConsequence(consequence_deleteitem(302, 20, nil))
talkEntry:addConsequence(consequence_item(799, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Danke für die Kirschen. Nehmt diesen Weidenkorb, er wird euch helfen, wenn ihr wieder mal etwas einsammeln dürft.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 20))
talkEntry:addCondition(condition_item(302, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Cherries are not so hard to get and yet I still have to wait for them.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 20))
talkEntry:addCondition(condition_item(302, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("So schwer sind 20 Kirschen auch nicht zu finden, dass ich immernoch auf sie warten muss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 20))
talkEntry:addCondition(condition_item(302, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Cherries are not so hard to get and yet I still have to wait for them.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 20))
talkEntry:addCondition(condition_item(302, "all", "<", 20, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("So schwer sind 20 Kirschen auch nicht zu finden, dass ich immernoch auf sie warten muss.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 21))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Runewick needs to be kept in shape. Bring me ten bricks so I can mend a few damaged parts.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 21))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Runewick muss in Stand gehalten werden. Bringt mir zehn Ziegelsteine, damit ich einige beschädigte Teile ausbessern kann.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 21))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Runewick needs to be kept in shape. Bring me ten bricks so I can mend a few damaged parts.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(20.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 21))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Runewick muss in Stand gehalten werden. Bringt mir zehn Ziegelsteine, damit ich einige beschädigte Teile ausbessern kann.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 21))
talkEntry:addCondition(condition_item(2588, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a shovel."))
talkEntry:addConsequence(consequence_deleteitem(2588, 10, nil))
talkEntry:addConsequence(consequence_item(24, 1, 699, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Thank you for the bricks. My back already gets sore from thinking about the work, but it's my duty and I shall not disappoint the Archmage.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 21))
talkEntry:addCondition(condition_item(2588, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst eine Schaufel."))
talkEntry:addConsequence(consequence_deleteitem(2588, 10, nil))
talkEntry:addConsequence(consequence_item(24, 1, 699, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Danke für die Ziegelsteine. Mit tut jetzt schon der Rücken weh, wenn ich an das Ausbessern denke. Aber es ist meine Pflicht und ich werde den Erzmagier nicht enttäuschen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 21))
talkEntry:addCondition(condition_item(2588, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("How nice of you to worry about my back, but I still need those ten bricks.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 21))
talkEntry:addCondition(condition_item(2588, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ist zwar schön, dass ihr an meinen Rücken denkt, aber ich brauch immer noch die zehn Ziegelsteine.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 21))
talkEntry:addCondition(condition_item(2588, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("How nice of you to worry about my back, but I still need those ten bricks.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 21))
talkEntry:addCondition(condition_item(2588, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ist zwar schön, dass ihr an meinen Rücken denkt, aber ich brauch immer noch die zehn Ziegelsteine.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 22))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Runewick needs to be kept in shape. Get me ten naldor wood boards, so the carpenters can build new shelves.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 22))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Runewick muss in Stand gehalten werden. Bringt mir zehn Naldorholzbretter, damit die Schreiner neue Regale bauen können.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 22))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Runewick needs to be kept in shape. Get me ten naldor wood boards, so the carpenters can build new shelves.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(25.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 22))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Runewick muss in Stand gehalten werden. Bringt mir zehn Naldorholzbretter, damit die Schreiner neue Regale bauen können.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 22))
talkEntry:addCondition(condition_item(546, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a rabbit dish."))
talkEntry:addConsequence(consequence_deleteitem(546, 10, nil))
talkEntry:addConsequence(consequence_item(555, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("The wood looks good. Our Archmage will be happy to have a new place for storing his scrolls. You earned this food.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 22))
talkEntry:addCondition(condition_item(546, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst ein Hasengericht."))
talkEntry:addConsequence(consequence_deleteitem(546, 10, nil))
talkEntry:addConsequence(consequence_item(555, 1, 599, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Das Holz sieht gut aus. Unser Erzmagier wird sich freuen neue Ablagen für seine Schriftrollen zu bekommen. Das Essen habt ihr euch verdient.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 22))
talkEntry:addCondition(condition_item(546, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Our carpenters are already waiting for those ten naldor wood boards.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 22))
talkEntry:addCondition(condition_item(546, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Unsere Handwerker warten schon auf die zehn Naldorholzbretter.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 22))
talkEntry:addCondition(condition_item(546, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Our carpenters are already waiting for those ten naldor wood boards.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 22))
talkEntry:addCondition(condition_item(546, "all", "<", 10, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Unsere Handwerker warten schon auf die zehn Naldorholzbretter.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(33.33))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 23))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our stock of coal for the ovens is running low. If we don't want to freeze I need five lumps of coal. As fast as possible.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(33.33))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 23))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Der Vorrat an Kohle für die Öfen geht zur Neige. Wenn wir nicht frieren wollen benötige ich fünf Kohleklumpen. Und zwar so schnell wie möglich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(33.33))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 23))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our stock of coal for the ovens is running low. If we don't want to freeze I need five lumps of coal. As fast as possible.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(33.33))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 23))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Der Vorrat an Kohle für die Öfen geht zur Neige. Wenn wir nicht frieren wollen benötige ich fünf Kohleklumpen. Und zwar so schnell wie möglich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 23))
talkEntry:addCondition(condition_item(21, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded fifty copper coins."))
talkEntry:addConsequence(consequence_money("+", 50))
talkEntry:addConsequence(consequence_deleteitem(21, 5, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Good coal. Parchment does not like coal and me neither.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 23))
talkEntry:addCondition(condition_item(21, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 50 Kupferstücke."))
talkEntry:addConsequence(consequence_money("+", 50))
talkEntry:addConsequence(consequence_deleteitem(21, 5, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Gute Kohle. Pergament mag nämlich keine Kälte und ich auch nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 23))
talkEntry:addCondition(condition_item(21, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I feel in my bones that you have not yet brought the five coal lumps. Do you want us all to catch a cold?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 23))
talkEntry:addCondition(condition_item(21, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich spür in meinen Knochen, dass ihr die fünf Kohleklumpen noch nicht gebracht habt. Wollt ihr, dass wir alle krank werden?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 23))
talkEntry:addCondition(condition_item(21, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I feel in my bones that you have not yet brought the five coal lumps. Do you want us all to catch a cold?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 23))
talkEntry:addCondition(condition_item(21, "all", "<", 5, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich spür in meinen Knochen, dass ihr die fünf Kohleklumpen noch nicht gebracht habt. Wollt ihr, dass wir alle krank werden?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 24))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our Archmage is usually busy teaching and studying, but sometimes even he needs a break. Now his beloved pipe has broken, bring me a replacement. Do it as fast as possible.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 24))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser Erzmagier ist zwar meist fleißig am lehren und studieren, aber manchmal braucht auch er eine Pause. Nun ist allerdings seine Lieblingspfeife zu Bruch gegangen, bringt mir dafür Ersatz. Und zwar so schnell wie möglich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 24))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Our Archmage is usually busy teaching and studying, but sometimes even he needs a break. Now his beloved pipe has broken, bring me a replacement. Do it as fast as possible.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(50.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 24))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Unser Erzmagier ist zwar meist fleißig am lehren und studieren, aber manchmal braucht auch er eine Pause. Nun ist allerdings seine Lieblingspfeife zu Bruch gegangen, bringt mir dafür Ersatz. Und zwar so schnell wie möglich..")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 24))
talkEntry:addCondition(condition_item(2744, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a silver coin."))
talkEntry:addConsequence(consequence_money("+", 100))
talkEntry:addConsequence(consequence_deleteitem(2744, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("A good pipe, our Archmage will be very pleased.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 24))
talkEntry:addCondition(condition_item(2744, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst ein Silberstück."))
talkEntry:addConsequence(consequence_money("+", 100))
talkEntry:addConsequence(consequence_deleteitem(2744, 1, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Eine gute Pfeife, ich kenn mich da aus. Unser Erzmagier wird sehr erfreut sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 24))
talkEntry:addCondition(condition_item(2744, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Did you not want to bring me a pipe? Hurry up, we don't want to make the Archmage wait, do we?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 24))
talkEntry:addCondition(condition_item(2744, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wolltet ihr mir nicht eine Pfeife bringen? Beeilt euch, wir wollen doch den Erzmagier nicht länger warten lassen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 24))
talkEntry:addCondition(condition_item(2744, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Did you not want to bring me a pipe? Hurry up, we don't want to make the Archmage wait, do we?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 24))
talkEntry:addCondition(condition_item(2744, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wolltet ihr mir nicht eine Pfeife bringen? Beeilt euch, wir wollen doch den Erzmagier nicht länger warten lassen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 25))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("For the reconstructions and renovations I still need a hammer. Of course our Archmage will hear about your help.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 25))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Für Umbau- und Renovierungsarbeiten benötige ich noch einen Hammer. Natürlich wird unser Erzmagier davon erfahren, wenn ihr mir helft.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New Quest] For Runewick"))
talkEntry:addConsequence(consequence_quest(160, "=", 25))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("For the reconstructions and renovations I still need a hammer. Of course our Archmage will hear about your help.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 0))
talkEntry:addCondition(condition_chance(100.0))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Im Dienste Runewicks"))
talkEntry:addConsequence(consequence_quest(160, "=", 25))
talkEntry:addConsequence(consequence_quest(260, "=", 36))
talkEntry:addResponse("Für Umbau- und Renovierungsarbeiten benötige ich noch einen Hammer. Natürlich wird unser Erzmagier davon erfahren, wenn ihr mir helft.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 25))
talkEntry:addCondition(condition_item(23, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded a saw."))
talkEntry:addConsequence(consequence_deleteitem(23, 1, nil))
talkEntry:addConsequence(consequence_item(9, 1, 699, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("This hammer will help to keep Runewick one of the most beautiful towns. Take this saw in return, it is left over.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 25))
talkEntry:addCondition(condition_item(23, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger(".*")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst eine Säge."))
talkEntry:addConsequence(consequence_deleteitem(23, 1, nil))
talkEntry:addConsequence(consequence_item(9, 1, 699, nil))
talkEntry:addConsequence(consequence_quest(160, "=", 0))
talkEntry:addConsequence(consequence_quest(260, "=", 0))
talkEntry:addConsequence(consequence_quest(161, "=", 60))
talkEntry:addResponse("Dieser Hammer wird dabei helfen, dass Runewick auch weiterhin eine der schönsten Städte bleibt. Nehmt doch die Säge als Dank, sie ist noch übring.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 25))
talkEntry:addCondition(condition_item(23, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("We cannot keep Runewick in shape without everyone's help. We still lack a hammer.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 25))
talkEntry:addCondition(condition_item(23, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Wir können nicht Runewick schlecht in Stand halten, wenn nicht alle Mithelfen. Es fehlt immernoch ein Hammer.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 25))
talkEntry:addCondition(condition_item(23, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("We cannot keep Runewick in shape without everyone's help. We still lack a hammer.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(160, "=", 25))
talkEntry:addCondition(condition_item(23, "all", "<", 1, nil))
talkEntry:addCondition(condition_town(2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Wir können nicht Runewick schlecht in Stand halten, wenn nicht alle Mithelfen. Es fehlt immernoch ein Hammer.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addResponse("I am the Majordomo, caretaker of Runewick. I take care of the buildings and all those living within. If anything is needed anywhere, I will organise it all.")
talkEntry:addResponse("I am the Majordomo, caretaker of Runewick. I take care of the buildings and all those living within. Without me everything would fall apart.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addResponse("Majordomus bin ich, Verwalter von Runewick. Ich kümmere mich um die Gemäuer und alle die darin leben. Wenn irgendwo was gebraucht wird, organisier ich alles.")
talkEntry:addResponse("Majordomus bin ich, Verwalter von Runewick. Ich kümmere mich um die Gemäuer und alle die darin leben. Ohne mich würde alles zusammenstürzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("I am the Majordomo, caretaker of Runewick. I take care of the buildings and all those living within. If anything is needed anywhere, I will organise it all.")
talkEntry:addResponse("I am the Majordomo, caretaker of Runewick. I take care of the buildings and all those living within. Without me everything would fall apart.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Majordomus bin ich, Verwalter von Runewick. Ich kümmere mich um die Gemäuer und alle die darin leben. Wenn irgendwo was gebraucht wird, organisier ich alles.")
talkEntry:addResponse("Majordomus bin ich, Verwalter von Runewick. Ich kümmere mich um die Gemäuer und alle die darin leben. Ohne mich würde alles zusammenstürzen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Ask a cartographer or someone else. I have no time to take care of such things.")
talkEntry:addResponse("A small island, where some new citizens are from. Just means more work.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Frag doch einen Karthographen oder jemand anders. Ich hab keine Zeit mich um sowas zu kümmern.")
talkEntry:addResponse("Eine Insel wo viele unserer Neubürger herkommen. Bedeutet nur mehr Arbeit.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("my name")
talkEntry:addResponse("Do I look as if I have time to research your name?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("mein Name")
talkEntry:addResponse("Seh ich aus, als hätte ich Zeit euren Namen herauszusuchen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("management")
talkEntry:addResponse("I manage the town, an important business. Everything has to be in the right place and the buildings have to be kept in good condition.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Verwaltung")
talkEntry:addResponse("Ich verwalte diese Stadt, eine wichtige Aufgabe. Es muss alles dort sein, wo es gebraucht wird und die Gebäude müssen instandgehalten werden.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("magic")
talkEntry:addResponse("One of the high arts. Best ask a mage or our Archmage when he has time.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Magie")
talkEntry:addResponse("Eine der hohen Künste. Frag am besten einen Magier oder unseren Erzmagier, wenn er Zeit hat.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("bard")
talkEntry:addResponse("The high art of singing and storytelling.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Barden")
talkEntry:addResponse("Die hohe Kunst der Geschichtenerzählung und Gesangs.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("priest")
talkEntry:addResponse("They serve the gods. Depending on origin and race that often ends up in many different views.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Priester")
talkEntry:addResponse("Sie dienen den Göttern. Je nach Herkunft und Rasse sind das oft sehr unterschiedliche Ansichten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("alchemist")
talkEntry:addTrigger("alchemy")
talkEntry:addResponse("The high art of alchemy and potion brewing.")
talkEntry:addResponse("A small potion often helped me over one affliction or another.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Alchemist")
talkEntry:addTrigger("Alchemie")
talkEntry:addResponse("Die hohe Kunst der Alchmie und des Trankmischens.")
talkEntry:addResponse("Ein kleiner Trank hat mir schon oft bei unterschiedlichen Beschwerden geholfen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("craft")
talkEntry:addTrigger("handcraft")
talkEntry:addTrigger("artisanry")
talkEntry:addResponse("There are many crafts and craftsmen in Runewick. Cooks, bakers, farmers, tailors, carpenters just to name a few.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Handwerk")
talkEntry:addResponse("Es gibt viele Handwerke und Handwerker in Runewick. Köche, Bäcker, Feldarbeiter, Schneider, Schreiner um nur ein paar zu nennen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("knowledge")
talkEntry:addResponse("Knowledge is the true power!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wissen")
talkEntry:addResponse("Wissen ist die wahre Macht!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("archmage")
talkEntry:addResponse("Our illustrious and wise Archmage Elvaine Morgan is the beating heart of Runewick. The town praise him.")
talkEntry:addResponse("He is the father of Runewick and all of its inhabitants, honourably.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Unser erhabener und weiser Erzmagier Elvaine Morgan ist das schlagende Herz Runewicks. Ihn preist die Stadt.")
talkEntry:addResponse("Er ist der Vater Runewicks und alle seiner Bewohner, ehrenhalber.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Our illustrious and wise Archmage Elvaine Morgan is the beating heart of Runewick. The town praise him.")
talkEntry:addResponse("He is the father of Runewick and all of its inhabitants, honourably.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Unser erhabener und weißer Erzmagier Elvaine Morgan ist das schlagende Herz Runewicks. Ihn preisen die Stadt")
talkEntry:addResponse("Er ist der Vater Runewicks und alle seiner Bewohner, ehrenhalber.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("This here is Runewick. Worked all my life to make it as magnificient and lofty as it stands now.")
talkEntry:addResponse("After Lor-Angur it is the most beautiful town on Illarion. And I am to know that.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Dies hier ist Runewick. Hab mein ganzes Leben daran gearbeite sie so prächtig und erhaben zu machen, wie es jetzt dasteht.")
talkEntry:addResponse("Nach Lor-Angur die schönste Stadt auf Illarion. Und ich muss das wissen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Pah.. a crook is this Don Valerio.")
talkEntry:addResponse("He's the first and the worst of Galmair's crooks.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Pah.. ein Strauchdieb ist dieser Don Valerio.")
talkEntry:addResponse("Er ist der Erste und Schlimmste unter den Strauchdieben in Galmair.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("What should you say about a settlement hiding in the mountains? Shade-loving vermin live there, those who have only foul tricks on their minds.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Was soll man schon über eine Siedlung sagen, die sich in den Bergen versteckt? Lichtscheues Gesindel lebt dort, die nur Gemeinheiten im Kopf haben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Queen")
talkEntry:addResponse("She only got that title because her father had no son. They say she also made sure of that.")
talkEntry:addResponse("Beauty is more important to her than a well-supplied town.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Königin")
talkEntry:addResponse("Sie hat doch nur das Amt bekommen, weil ihr Vater keinen Sohn hatte. Man erzählt sich, sie habe auch dafür gesorgt, dass es so kahm.")
talkEntry:addResponse("Ihr ist ihre Schönheit wichtiger als eine ordenliche Versorgung der Stadt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("She only got that title because her father had no son. They say she also made sure of that.")
talkEntry:addResponse("Her beauty is more important to her than a well-supplied town.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Sie hat doch nur das Amt bekommen, weil ihr Vater keinen Sohn hatte. Man erzählt sich, sie habe auch dafür gesorgt, dass es so kahm.")
talkEntry:addResponse("Ihr ist ihre Schönheit wichtiger als eine ordenliche Versorgung der Stadt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Behind the walls of Cadomyr they're just planning the next war.")
talkEntry:addResponse("They don't trust their walls so they built their town in the desert.")
talkEntry:addResponse("Only sand and stone, how can a proper halfling live there?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Hinter den Mauern von Cadomyr planen sie nur den nächsten Krieg.")
talkEntry:addResponse("Sie vertrauen ihren Mauern nicht, deshalb haben sie die Stadt in die Wüste gebaut.")
talkEntry:addResponse("Nur Sand und Stein, wie soll ein ordenlicher Halbling dort leben?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("albar")
talkEntry:addResponse("They have regime but no wisdom.")
talkEntry:addResponse("Don't go there if you aren't a noble, male human.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("albar")
talkEntry:addResponse("Ordnung haben sie dort ja, aber keine Weisheit.")
talkEntry:addResponse("Gehe niemals dort hin, wenn du kein adliger, männlicher Mensch bist.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("gynk")
talkEntry:addTrigger("gync")
talkEntry:addResponse("Gynk is a dirty hole, full of pirates, thieves, killers, slave traders and other rabble. It is even more evil than Galmair.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("gync")
talkEntry:addTrigger("gynk")
talkEntry:addResponse("Gynk ist ein dreckiges Loch voller Piraten, Dieben, Mördern, Sklavenhändlern und anderem Gesindel. Sogar noch schlimmer als Galmair.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("salkamar")
talkEntry:addResponse("Religious fanatics take care that it doesn't become like Gynk or Albar.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("salkamar")
talkEntry:addResponse("Religiöse Fanatiker sorgen dafür, dass es nicht so wird wie Albar oder Gynk.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("As a very busy halfling, I have no time to talk about the gods.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Als viel beschäftigter Halbling, hab ich keine Zeit über die Götter und die Welt zu reden.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Adron")
talkEntry:addResponse("Wine and celebrations. Thereby you forgot the shards and the clearing up the next day.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Adron")
talkEntry:addResponse("Wein und Feste. Dabei vergisst man meistens die Scherben und das Aufräumen am nächsten Tag.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Bragon")
talkEntry:addTrigger("Brágon")
talkEntry:addResponse("He is an Old God.")
talkEntry:addResponse("His altar stands on the Island of Fire.")
talkEntry:addResponse("Ask a priest or an elf.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Bragon")
talkEntry:addTrigger("Brágon")
talkEntry:addResponse("Er ist einer der alten Gottheiten.")
talkEntry:addResponse("Sein Altar steht auf der Insel des Feuers.")
talkEntry:addResponse("Frag am besten einen Priester oder einen Elfen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cherga")
talkEntry:addResponse("#me shudders.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cherga")
talkEntry:addResponse("#me schüttelt sich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elara")
talkEntry:addResponse("Knowledge and wisdom. She is a keystone of our town.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elara")
talkEntry:addResponse("Wissen und Weisheit. Sie ist ein Grundpfeiler dieserer Stadt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Eldan")
talkEntry:addResponse("He is an Old God.")
talkEntry:addResponse("His altar is on Morgans island. A really nice place.")
talkEntry:addResponse("Ask a priest or an elf.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Eldan")
talkEntry:addResponse("Er ist einer der alten Gottheiten.")
talkEntry:addResponse("Sein Altar steht auf Morgans Insel.")
talkEntry:addResponse("Frag am besten einen Priester oder einen Elfen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Findari")
talkEntry:addResponse("She is an Old Goddess.")
talkEntry:addResponse("Her altar stands on the Island of Wind, where else?")
talkEntry:addResponse("Ask a priest or an elf.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Findari")
talkEntry:addResponse("Sie ist eine der alten Gottheiten.")
talkEntry:addResponse("Ihr Altar steht auf der Insel des Windes, wo sonst.")
talkEntry:addResponse("Frag am besten einen Priester oder einen Elfen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Irmorom")
talkEntry:addResponse("Lord of craft and trade.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Irmorom")
talkEntry:addResponse("Herr den Handwerks und des Handels.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Malachin")
talkEntry:addTrigger("Malachín")
talkEntry:addResponse("As a hunter he is also worshipped here.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Malachin")
talkEntry:addTrigger("Malachín")
talkEntry:addResponse("Als Jäger wird er auch hier verehrt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Moshran")
talkEntry:addResponse("Keep this milk-sourer away from me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Moshran")
talkEntry:addResponse("Bleib mir bloß mit diesem Milchversauerer vom Leibe.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Nargun")
talkEntry:addTrigger("Nargún")
talkEntry:addTrigger("Nargùn")
talkEntry:addResponse("He only brings a mess and I have to clean it up afterwards.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Nargun")
talkEntry:addTrigger("Nargún")
talkEntry:addTrigger("Nargùn")
talkEntry:addResponse("Bringt nur Unordnung. Und ich darf danach wieder aufräumen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Oldra")
talkEntry:addResponse("She especially cares about our physical well-being.")
talkEntry:addResponse("Thanks to her our fields are fruitful, the trees laden with fruit and the meadows full of flowers.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Oldra")
talkEntry:addResponse("Sie sorgt sich ganz besonders um unser Leibliches Wohl.")
talkEntry:addResponse("Dank ihr sind unsere Felder fruchtbar, die Bäume beladen mit Früchten und die Wiesen voller Blumen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("God of tricksters and crooks. Pay attention to your belongings whenever you meet a follower of him. ")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ronagan")
talkEntry:addResponse("Gott der Strauchdiebe. Pass bloss auf deine Sachen auf, wenn du einen seiner Anhänger begegnest.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Sirani")
talkEntry:addResponse("Without pleasure, life is boring. Afterwards you always have to clean it all up though.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Sirani")
talkEntry:addResponse("Ohne Freude wäre das Leben doch sehr einfältig. Nur muss man nachher immer wieder Ordnung schaffen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Tanora")
talkEntry:addTrigger("Zelphia")
talkEntry:addResponse("She is an Old Goddess.")
talkEntry:addResponse("Ask a priest, a lizard or an elf.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tanora")
talkEntry:addTrigger("Zelphia")
talkEntry:addResponse("Sie ist eine der alten Gottheiten.")
talkEntry:addResponse("Frag am besten einen Priester, Echsen oder einen Elfen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ushara")
talkEntry:addResponse("She is the Old Goddess of the Earth. But she has given her duty to Oldra.")
talkEntry:addResponse("Ask a priest or an elf")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ushara")
talkEntry:addResponse("Sie ist die alte Göttin der Erde, hat aber ihre Aufgaben an Oldra abgegeben.")
talkEntry:addResponse("Frag am besten einen Priester oder einen Elfen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Zhambra")
talkEntry:addResponse("Friendship and faithfulness. You don't have to think about war. It is better to cultivate it in the tavern.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Zhambra")
talkEntry:addResponse("Freundschaft, Treue, man muss ja nicht gleich immer an den Krieg denken. Schöner ist es doch solche Dingen in der Taverne zu föhnen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("what sell")
talkEntry:addTrigger("what buy")
talkEntry:addTrigger("list wares")
talkEntry:addTrigger("price of")
talkEntry:addResponse("If I were to also sell things, I never be done here.")
talkEntry:addResponse("Do I look like a merchant?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("was verkauf")
talkEntry:addTrigger("was kauf")
talkEntry:addTrigger("warenliste")
talkEntry:addTrigger("preis von")
talkEntry:addResponse("Wenn ich auch noch Sachen verkaufen würde, würde ich hier nie fertig werden.")
talkEntry:addResponse("Seh ich aus wie ein Händler?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addTrigger("tale")
talkEntry:addResponse("And then all the work lies still and I'll get scolded.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Und wärenddessen bleibt die ganze Arbeit liegen und ich bekomm Ärger.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("I am not a trader.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Ich bin kein Händler.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Decius")
talkEntry:addTrigger("Cerasus")
talkEntry:addTrigger("Industrius")
talkEntry:addResponse("Yes?")
talkEntry:addResponse("How can I help you?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Decius")
talkEntry:addTrigger("Cerasus")
talkEntry:addTrigger("Industrius")
talkEntry:addResponse("Ja?")
talkEntry:addResponse("Den Namen hat mir der Erzmagier gegeben. Passt besser zu meiner Aufgabe als mein alter Name.")
talkEntry:addResponse("Wie kann ich ihnen weiterhelfen?")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("Schön euch zu sehen, Bürger.", "Nice to see you, citizen.")
talkingNPC:addCycleText("Bürger, helft mir bei der Instandhaltung eurer Stadt.", "Citizen, maybe you can help me to keep our town in good condition?")
talkingNPC:addCycleText("Viele der Gelehrten haben nur ihre Studien im Kopf. Sie würden verhungern, wenn ich mich nicht um alles kümmern würden.", "Many of those scholars have nothing but their studies on their minds. They'd starve if I did not take care of everything.")
talkingNPC:addCycleText("Reinigungsarbeiten... warum müssen die Kessel der Alchemisten immer explodieren?", "Cleaning work... why do the alchemist's cauldrons always have to explode?")
talkingNPC:addCycleText("Ich muss noch einen Handwerker anheuern, der das Fundament überprüft.", "I still have to engage a craftsman to check the foundation.")
talkingNPC:addCycleText("So viel Arbeit. Dabei bin ich auch nicht mehr der Jüngste.", "So much work. Although I'm not the youngest anymore.")
talkingNPC:addCycleText("#me hält gerade noch einen Zettel fest, bevor dieser wegfliegt.", "#me grabs a note, before it flies away.")
talkingNPC:addCycleText("#me hält sich den Rücken.", "#me holds his back.")
talkingNPC:addCycleText("#me geht eine Liste durch.", "#me goes through a list.")
talkingNPC:addCycleText("#me holt einen Kuchen aus der Tasche und isst ihn genüsslich.", "#me takes a cake out of his bag and eats it with pleasure.")
mainNPC:addLanguage(0)
mainNPC:addLanguage(6)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Dieser NPC ist Decius Cerasus Industrius, Majordomus von Runewick.", "This NPC is Decius Cerasus Industrius, majordomo of Runewick.")
mainNPC:setUseMessage("Fasst mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut verwirrt.", "#me looks around with confusion etched over his face.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 809)
mainNPC:setEquipment(11, 2416)
mainNPC:setEquipment(5, 0)
mainNPC:setEquipment(6, 463)
mainNPC:setEquipment(4, 2295)
mainNPC:setEquipment(9, 826)
mainNPC:setEquipment(10, 0)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
