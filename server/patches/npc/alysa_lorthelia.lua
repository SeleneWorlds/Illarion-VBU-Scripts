local consequence_trade = require("npc.base.consequence.trade")
local condition_language = require("npc.base.condition.language")
local basic = require("npc.base.basic")
local trade = require("npc.base.trade")
local talk = require("npc.base.talk")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(2)
local talkingNPC = talk(mainNPC)
local tradingNPC = trade(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is Alysa Lorthelia the baker and housekeeper. Keywords: Hello, trade, cook."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist Alysa Lorthelia die Bäckerin und Haushälterin. Schlüsselwörter: Hallo, Handel, Kochen."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Lass uns handeln!")
talkEntry:addConsequence(consequence_trade(tradingNPC))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("Let's trade!")
talkEntry:addConsequence(consequence_trade(tradingNPC))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good Evening")
talkEntry:addResponse("Hello, would you like something to eat? My wares are pretty tasty!")
talkEntry:addResponse("Nice to meet you, I'm Alysa Lorthelia.")
talkEntry:addResponse("Ah, you startled me! Hello, my apologies.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Hallo, mögt Ihr etwas essen? Ich finde das Essen, welches ich gekocht habe, schmeckt.")
talkEntry:addResponse("Freut mich Euch zu treffen. Ich bin Alysa Lorthelia.")
talkEntry:addResponse("Ah! Ihr habt mich erschreckt, Hallo, tut mir leid.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Hello, would you like something to eat? My wares are pretty tasty!")
talkEntry:addResponse("Nice to meet you, I'm Alysa Lorthelia.")
talkEntry:addResponse("Ah, you startled me! Hello, my apologies.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Hallo, mögt Ihr etwas essen? Ich finde das Essen, welches ich gekocht habe, schmeckt.")
talkEntry:addResponse("Freut mich Euch zu treffen. Ich bin Alysa Lorthelia.")
talkEntry:addResponse("Ah, Ihr habt mich erschreckt! Entschuldigt, hallo erstmal.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("Will I ever see you again?")
talkEntry:addResponse("Thank you so, so much for talking to me.")
talkEntry:addResponse("Please have a good day. Can you visit again please?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Werde ich Euch wiedersehen?")
talkEntry:addResponse("Vielen, vielen, vielen Dank, dass Ihr mit mir gesprochen habt.")
talkEntry:addResponse("Ich wünsche Euch einen schönen Tag. Bitte kommt mal wieder vorbei.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Will I ever see you again? ")
talkEntry:addResponse("Thank you so, so much for talking to me.")
talkEntry:addResponse("Please have a good day. Can you visit again please?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("Will I ever see you again? ")
talkEntry:addResponse("Thank you so, so much for talking to me.")
talkEntry:addResponse("Please have a good day. Can you visit again please?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Werde ich Euch wiedersehen?")
talkEntry:addResponse("Vielen, vielen, vielen Dank, dass Ihr mit mir gesprochen habt.")
talkEntry:addResponse("Ich wünsche Euch einen schönen Tag. Bitte kommt mal wieder vorbei.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("I don't feel great today. My stomach hurts but it's not because of my food! Please don't think my food is bad!")
talkEntry:addResponse("My head is all dizzy.")
talkEntry:addResponse("I think I ate too much. I shouldn't eat for another few days.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addTrigger("Wie Befind")
talkEntry:addResponse("Ich fühle mich heute nicht gut. Ich habe Magenschmerzen. Aber das liegt nicht an meinem Essen. Bitte denkt nicht, es läge an meinem Essen!")
talkEntry:addResponse("Mir ist schwindelig.")
talkEntry:addResponse("Ich habe zuviel gegessen. Ich sollte die nächsten zwei Tage nichts Essen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("I'm the daughter of the sword crafter Aysha Lorthelia.")
talkEntry:addResponse("I'm the oldest Lorthelia daughter, but no: I can't craft ornate weapons like my mother. Instead I bake.")
talkEntry:addResponse("I am Alysa Lorthelia, the baker... at least for now.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid Ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("Ich bin die Tochter der Waffenschmiedin Aysha Lorthelia.")
talkEntry:addResponse("Ich bin die älteste Tochter der Lorthelia, aber ich kann keine verzierten Waffen herstellen. Daher backe ich.")
talkEntry:addResponse("Ich bin Alysa Lorthelia, die Bäckerin, zumndest zur Zeit noch.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I don't have any tasks for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich vergebe keine Aufgaben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I don't have any tasks for you.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich vergebe keine Aufgaben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("profession")
talkEntry:addResponse("I bake all kinds of fresh goods.")
talkEntry:addResponse("I sell people the food that myself and old John Sights bake.")
talkEntry:addResponse("I started working as a baker many moons ago.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("beruf")
talkEntry:addResponse("Ich backe die verschiedensten Waren.")
talkEntry:addResponse("Ich verkaufe das Essen, dass ich und  John Sighs backen.")
talkEntry:addResponse("Ich arbeite seit ein paar Monaten als Bäckerin.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("I bake all kinds of fresh goods.")
talkEntry:addResponse("I sell people the food that myself and old John Sights bake.")
talkEntry:addResponse("I started working as a baker many moons ago.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Ich backe die verschiedensten Waren.")
talkEntry:addResponse("Ich verkaufe das Essen, dass ich und  John Sighs backen.")
talkEntry:addResponse("Ich arbeite seit ein paar Monaten als Bäckerin.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("There were fairies somewhere in that world.")
talkEntry:addResponse("I would love to meet a fairy. I know they lived there.")
talkEntry:addResponse("Maybe a fairy can cast a spell on me, so I could join them in their world.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Da waren Feen irgendwo in dieser Welt.")
talkEntry:addResponse("Ich würde soo gern mal eine Fee sehen. Ich weiß sie leben dort.")
talkEntry:addResponse("Vielleicht kann eine Fee einen Zauberspruch sprechen, der mich in eine Fee verwandelt?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("my name")
talkEntry:addResponse("Alysa Lorthelia, a regular baker I guess?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("mein Name")
talkEntry:addResponse("Alysa Lorthelia, eine gewöhnliche Bäckerin, oder?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cook")
talkEntry:addTrigger("Food")
talkEntry:addTrigger("Bake")
talkEntry:addResponse("I didn't think I'd love cooking so much. I was born to become fat. That's why now I never eat anything I make.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Kochen")
talkEntry:addTrigger("Essen")
talkEntry:addTrigger("backen")
talkEntry:addResponse("Ich denke nicht, dass Kochen Spaß macht. Ich kam schon fett auf die Welt. Daher esse ich nichts was ich koche.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Fat")
talkEntry:addTrigger("Weight")
talkEntry:addTrigger("Heavy")
talkEntry:addResponse("I met Ce, the cook there. She's so talented. We're going to have a bake off soon.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Fett")
talkEntry:addTrigger("Gewicht")
talkEntry:addTrigger("Schwer")
talkEntry:addResponse("Ich traft Ce, die Köchin hier. sie ist so hübsch und talentiert. Wir machen bald einen Kochwettbewerb.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("glass mirror")
talkEntry:addTrigger("Ce")
talkEntry:addCondition(condition_language("english"))
talkEntry:addResponse("I met Ce, the cook there. She's so talented. We're going to have a bake off soon.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Glas Spiegel")
talkEntry:addTrigger("Ce")
talkEntry:addResponse("Ich traf Ce, die Köchin hier. Sie ist so hübsch und talentiert. Wir machen bald einen Kochwettbewerb.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("John Sights")
talkEntry:addCondition(condition_language("english"))
talkEntry:addResponse("He's an old man. He's nice and he gave me this job. Though he does look at me a funny way sometimes.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("John Sights")
talkEntry:addResponse("Er ist ein alter Mann. Er ist nett und gab mir den Job hier. Manchmal starrt er auf meinen Busen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Mother")
talkEntry:addTrigger("Mom")
talkEntry:addTrigger("Aysha")
talkEntry:addResponse("Mum constantly works. I don't think I've ever seen her sleep.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Mutter")
talkEntry:addTrigger("Mama")
talkEntry:addTrigger("Aysha")
talkEntry:addResponse("Mutti arbeiter immer. Immer. Ich glaube ich habe sie noch nie schlafend gesehen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Father")
talkEntry:addTrigger("Dad")
talkEntry:addResponse("Dad only works a few hours a week, but he's always out of the house, and the house is always messy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Vater")
talkEntry:addTrigger("Papa")
talkEntry:addResponse("Vater arbeitet nur ein paar Stunden in der Woche, aber er ist ständig unterwegs und zu Hause herrscht Unordnung.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Sister")
talkEntry:addResponse("I'm glad I don't have to watch her. She's annoying.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Schwester")
talkEntry:addResponse("Ich bin froh, dass ich nicht auf sie aufpassen muss. Diese Nervensäge.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("archmage")
talkEntry:addResponse("The Archmage only uses enchanted weapons made by Aysha Lorthelia, my mother.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Der Erzmagier nutzt nichts außer den verzauberten Waffen, welche meine Mutter, Aysha Lorthelia, hergestellt hat.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Who? Oh, right, that guy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Wer? Ach, richtig, der.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("I live here. I don't really dwell on it.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Ich lebe hier. Ich denke nichts anderes über diesen Ort.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("My mother doesn't care for him, no idea why.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Meine Mutter sagt, er sei ihr egal. Ich verstehe das nicht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("I've been there a few times with my mother and father. It's a dirty place, you wouldn't find my wares anywhere near that.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Ich war da mehrere Male mit meiner Mutter und meinem Vater. Es ist ein dreckiger Ort, Waren wie die meinen würde man dort nie finden!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Queen")
talkEntry:addResponse("She's too pretty. The gods were a lot fairer to her than to me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Königin")
talkEntry:addResponse("Sie ist einfach zu hübsch. Die Götter waren ihr besser gesonnen als mir.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("She's too pretty. The gods were a lot fairer to her than to me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Sie ist einfach zu hübsch. Die Götter waren ihr besser gesonnen als mir.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Too much sun for my liking, but I enjoyed visiting the tavern.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Da ist es mir zu sonnig. Aber ich mochte den Besuch in der Taverne.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("albar")
talkEntry:addResponse("My father says that they only care about faction related drivel.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("albar")
talkEntry:addResponse("Mein Vater sagt nur dumme Leute kümmern sich um den Streit zwischen den Fraktionen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("gynk")
talkEntry:addTrigger("gync")
talkEntry:addResponse("My father says that they only care about faction related drivel.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("gync")
talkEntry:addTrigger("gynk")
talkEntry:addResponse("Mein Vater sagt nur dumme Leute kümmern sich um den Streit zwischen den Fraktionen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("salkama")
talkEntry:addResponse("My father says that they only care about faction related drivel.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("salkama")
talkEntry:addResponse("Mein Vater sagt nur dumme Leute kümmern sich um den Streit zwischen den Fraktionen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("The gods cursed me with this body. The only god I will serve is one who will make me pretty.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Die Götter straften mich mit diesem Körper. Der einzige Gott, zu dem ich beten werde, ist der, der mir Schönheit gibt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addResponse("I wish I was a fairy.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Ich wäre so gerne eine Fee.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Alysa ")
talkEntry:addTrigger("Lorthelia")
talkEntry:addResponse("That's me, Alysa Lorthelia.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Alysa")
talkEntry:addTrigger("Lorthelia")
talkEntry:addResponse("Das bin ich, Alysa Lorthelia.")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("Dieses Mädchen ist so dünn.", "That girl is so skinny.")
talkingNPC:addCycleText("Ich habe Hunger. Ich meine, ich habe keinen Hunger. Der Wille besiegt das Fleisch.", "Ugh. I'm hungry. No I'm not! Mind over matter!")
talkingNPC:addCycleText("Kommt, esst mein Brot, schmeckt besser als cadomyrische Sandratte!", "Come and eat my bread! It's better than a Cadomyrian sand rat. At least I hope so.")
talkingNPC:addCycleText("Der alte John Sights sagte mir, ich solle Euch sagen, dass ich Alysa Lorthelia bin, die Tochter der Waffenschmiedin Aysha Lorthelia.", "Old John Sights asked me to tell everyone that I'm Alysa Lorthelia, daughter of Aysha the armourer!")
talkingNPC:addCycleText("Ich backe Brot so gut, wie meine Mutter Waffen herstellt.", "I bake bread just as well as my mother crafts weapons!")
talkingNPC:addCycleText("Mein Magen schmerzt. Dieses Brot um mich herum. Das ist Folter!", "My stomach hurts. All this bread around me. It's torture!")
talkingNPC:addCycleText("Calthors kurze Abhandlung über die Geschichte der Feen ist das beste Buch, das ich jemals gelesen habe.", "The Calthor Digest on the history of fairies is the best book I've ever read!")
talkingNPC:addCycleText("Wohin ist Papa schon wieder verschwunden? Er ist ständig weg!", "Dad wandered off again. But where to? He's always gone!")
talkingNPC:addCycleText("Ich werde Ce-Ce im Kochwettbewerb schlagen.", "I will destroy Ce-Ce in the next cook-off.")
talkingNPC:addCycleText("Ich frage mich, ob Mutter sich jemals einen freien Tag gönnt.", "I wonder if mum ever takes a day off.")
tradingNPC:addItem(trade.tradeNPCItem(121,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(227,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(72,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4337,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(126,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(429,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(51,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2495,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2031,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(191,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(453,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3568,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(49,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3631,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3609,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(454,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(353,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(303,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2499,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2500,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2497,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2501,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(785,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3720,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(787,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(791,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(786,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(788,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(517,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(783,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3721,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(784,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(789,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3722,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3611,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1316,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3051,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3573,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3715,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3716,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2459,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(556,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1154,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2277,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2922,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3570,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2456,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2923,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2278,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2276,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3569,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(73,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(355,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4259,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4263,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1209,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1210,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4282,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(307,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1150,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(69,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2586,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2502,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(469,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(552,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(553,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(1151,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2934,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2940,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(63,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2696,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4364,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(306,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(455,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3916,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4260,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4264,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3914,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3915,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4265,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3606,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3709,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3710,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3713,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(3714,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(2529,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4804,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(431,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(43,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4303,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4304,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4316,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4317,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4294,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4295,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4818,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(4819,"sell"))
tradingNPC:addItem(trade.tradeNPCItem(191,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(453,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3568,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(49,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3631,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3609,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(454,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(353,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(303,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3571,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(354,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3723,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1153,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3610,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2499,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2500,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2497,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2501,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(785,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3720,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(787,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(791,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(786,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(788,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(517,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(783,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3721,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(784,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(789,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3722,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3611,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1316,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1315,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1320,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1321,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1322,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1319,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1323,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1318,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3051,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3573,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3715,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3716,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2459,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(556,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1154,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2277,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2922,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3570,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(557,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(555,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(559,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(554,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1155,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2456,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2923,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2278,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2276,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3569,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3572,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3712,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3711,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1152,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(73,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(355,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4259,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4263,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1209,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1210,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4282,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4267,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4261,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4266,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4257,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(307,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1150,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(69,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2586,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2502,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(469,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(552,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(553,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(1151,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2934,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2940,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(63,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2696,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4364,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(306,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(455,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3916,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4260,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4264,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3914,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3915,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4265,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4262,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4258,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3606,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3709,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3710,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3713,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(3714,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4205,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4206,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4207,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(2529,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4804,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(431,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(43,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4314,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4805,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4303,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4304,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4305,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4300,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(738,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4316,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4317,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4294,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4318,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4320,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4296,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4298,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4295,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4319,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4321,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4297,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4299,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4818,"buyPrimary"))
tradingNPC:addItem(trade.tradeNPCItem(4819,"buyPrimary"))
tradingNPC:addNotEnoughMoneyMsg("Bist du sicher, dass du dir das leisten kannst?", "Are you sure you can afford this?")
tradingNPC:addDialogClosedMsg("Danke sehr!", "Thank you very much.")
tradingNPC:addDialogClosedNoTradeMsg("Nichts gefunden was dir gefällt?", "Don't you like my wares?")
tradingNPC:addWrongItemMsg("Ich glaub, das werde ich nicht kaufen.", "I guess I do not buy this.")
mainNPC:addLanguage(0)
mainNPC:addLanguage(1)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Eine große, edle Frau steht hinter der Theke und bereitet emsig Essen zu.", "A tall, proud woman stands behind the counter, preparing food quickly.")
mainNPC:setUseMessage("Fass mich nicht an!", "Hands off!")
mainNPC:setConfusedMessage("#me schaut dich verwirrt an.", "#me looks at you confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 847)
mainNPC:setEquipment(11, 0)
mainNPC:setEquipment(5, 0)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 48)
mainNPC:setEquipment(9, 34)
mainNPC:setEquipment(10, 53)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
