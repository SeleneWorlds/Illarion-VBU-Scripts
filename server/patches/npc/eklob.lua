local condition_item = require("npc.base.condition.item")
local consequence_quest = require("npc.base.consequence.quest")
local condition_skill = require("npc.base.condition.skill")
local condition_language = require("npc.base.condition.language")
local consequence_deleteitem = require("npc.base.consequence.deleteitem")
local basic = require("npc.base.basic")
local condition_town = require("npc.base.condition.town")
local condition_chance = require("npc.base.condition.chance")
local talk = require("npc.base.talk")
local consequence_skill = require("npc.base.consequence.skill")
local condition_quest = require("npc.base.condition.quest")
local consequence_inform = require("npc.base.consequence.inform")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(3)
local talkingNPC = talk(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addResponse("[Game Help] This NPC is the bear of Galmair. Keywords: quest, food, dinner, breakfast, lunch, Grijas Kokotte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addResponse("[Spielhilfe] Dieser NPC ist der Bär von Galmair. Schlüsselwörter: Quest, Futter, Essen, Frühstück, Abendbrot, Grijas Kokotte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("#me shakes himself.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("#me schüttelt sich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 2))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "=>", 20))
talkEntry:addCondition(condition_item(15, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest finished!]"))
talkEntry:addResponse("#me eats the apples and grumbles satisfied.")
talkEntry:addConsequence(consequence_deleteitem(15, 5, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 3))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 2))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "=>", 20))
talkEntry:addCondition(condition_item(15, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest erfüllt!]"))
talkEntry:addResponse("#me verputzt die Äpfel und brummt zufrieden.")
talkEntry:addConsequence(consequence_deleteitem(15, 5, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 3))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 2))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "<", 20))
talkEntry:addCondition(condition_item(15, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest finished!] You feel like you really learnt something."))
talkEntry:addResponse("#me eats the apples and grumbles satisfied.")
talkEntry:addConsequence(consequence_skill(Character.cookingAndBaking, "+", 2))
talkEntry:addConsequence(consequence_deleteitem(15, 5, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 3))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 2))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "<", 20))
talkEntry:addCondition(condition_item(15, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest erfüllt!] Du hast das Gefühl als hättest du etwas dazu gelernt."))
talkEntry:addResponse("#me verputzt die Äpfel und brummt zufrieden.")
talkEntry:addConsequence(consequence_skill(Character.cookingAndBaking, "+", 2))
talkEntry:addConsequence(consequence_deleteitem(15, 5, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 3))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 2))
talkEntry:addCondition(condition_item(15, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] You have to feed the bear with five apples."))
talkEntry:addResponse("#me looks hungry.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 2))
talkEntry:addCondition(condition_item(15, "all", "<", 5, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Du sollst den Bären mit fünf Äpfeln füttern."))
talkEntry:addResponse("#me schaut hungrig.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 5))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "=>", 40))
talkEntry:addCondition(condition_item(2940, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest finished!]"))
talkEntry:addResponse("#me sniffs at the steak and gulps it down at once.")
talkEntry:addConsequence(consequence_deleteitem(2940, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 6))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 5))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "=>", 40))
talkEntry:addCondition(condition_item(2940, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest erfüllt!]"))
talkEntry:addResponse("#me schnüffelt am Steak und verschlingt es mit einem Biss.")
talkEntry:addConsequence(consequence_deleteitem(2940, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 6))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 5))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "<", 40))
talkEntry:addCondition(condition_item(2940, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest finished!] You feel like you really learnt something."))
talkEntry:addResponse("#me sniffs at the steak and gulps it down at once.")
talkEntry:addConsequence(consequence_skill(Character.cookingAndBaking, "+", 2))
talkEntry:addConsequence(consequence_deleteitem(2940, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 6))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 5))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "<", 40))
talkEntry:addCondition(condition_item(2940, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest erfüllt!] Du hast das Gefühl als hättest du etwas dazu gelernt."))
talkEntry:addResponse("#me schnüffelt am Steak und verschlingt es mit einem Biss.")
talkEntry:addConsequence(consequence_skill(Character.cookingAndBaking, "+", 2))
talkEntry:addConsequence(consequence_deleteitem(2940, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 6))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 5))
talkEntry:addCondition(condition_item(2940, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] You have to feed the bear with a steak."))
talkEntry:addResponse("#me looks hungry.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 5))
talkEntry:addCondition(condition_item(2940, "all", "<", 1, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Du sollst den Bären mit einem Steak füttern."))
talkEntry:addResponse("#me schaut hungrig.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 8))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "=>", 60))
talkEntry:addCondition(condition_item(49, "all", ">", 0, nil))
talkEntry:addCondition(condition_item(3051, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest finished!]"))
talkEntry:addResponse("#me grabs the food with his claws and starts eating immediately.")
talkEntry:addConsequence(consequence_deleteitem(49, 1, nil))
talkEntry:addConsequence(consequence_deleteitem(3051, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 9))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 8))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "=>", 60))
talkEntry:addCondition(condition_item(49, "all", ">", 0, nil))
talkEntry:addCondition(condition_item(3051, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest erfüllt!]"))
talkEntry:addResponse("#me reißt dir das Essen aus der Hand und verspeist es genüsslich.")
talkEntry:addConsequence(consequence_deleteitem(49, 1, nil))
talkEntry:addConsequence(consequence_deleteitem(3051, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 9))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 8))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "<", 60))
talkEntry:addCondition(condition_item(49, "all", ">", 0, nil))
talkEntry:addCondition(condition_item(3051, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest finished!] You feel like you really learnt something."))
talkEntry:addResponse("#me grabs the food with his claws and starts eating immediately.")
talkEntry:addConsequence(consequence_skill(Character.cookingAndBaking, "+", 2))
talkEntry:addConsequence(consequence_deleteitem(49, 1, nil))
talkEntry:addConsequence(consequence_deleteitem(3051, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 9))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 8))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "<", 60))
talkEntry:addCondition(condition_item(49, "all", ">", 0, nil))
talkEntry:addCondition(condition_item(3051, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest erfüllt!] Du hast das Gefühl als hättest du etwas dazu gelernt."))
talkEntry:addResponse("#me reißt dir das Essen aus der Hand und verspeist es genüsslich.")
talkEntry:addConsequence(consequence_skill(Character.cookingAndBaking, "+", 2))
talkEntry:addConsequence(consequence_deleteitem(49, 1, nil))
talkEntry:addConsequence(consequence_deleteitem(3051, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 9))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 8))
talkEntry:addCondition(condition_item(49, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] You have to feed the bear with a loaf of bread and a sausage."))
talkEntry:addResponse("#me sniffs hungrily at a stone.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 8))
talkEntry:addCondition(condition_item(49, "all", "<", 1, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Du sollst den Bären mit einem Brot und einer Wurst füttern."))
talkEntry:addResponse("#me schnüffelt hungrig an einem Stein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 8))
talkEntry:addCondition(condition_item(3051, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] You have to feed the bear with a loaf of bread and a sausage."))
talkEntry:addResponse("#me sniffs hungrily at a stone.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 8))
talkEntry:addCondition(condition_item(3051, "all", "<", 1, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Du sollst den Bären mit einem Brot und einer Wurst füttern."))
talkEntry:addResponse("#me schnüffelt hungrig an einem Stein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 11))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "=>", 80))
talkEntry:addCondition(condition_item(353, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest finished!]"))
talkEntry:addResponse("#me takes the pie carefully in his mouth and grumbles happily.")
talkEntry:addConsequence(consequence_deleteitem(353, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 11))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "=>", 80))
talkEntry:addCondition(condition_item(353, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest erfüllt!]"))
talkEntry:addResponse("#me nimmt den Kuchen vorsichtig in sein Maul und reibt zufrieden brummend seinen Kopf an der Wand.")
talkEntry:addConsequence(consequence_deleteitem(353, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 11))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "<", 80))
talkEntry:addCondition(condition_item(353, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest finished!] You feel like you really learnt something."))
talkEntry:addResponse("#me takes the pie carefully in his mouth and grumbles happily.")
talkEntry:addConsequence(consequence_skill(Character.cookingAndBaking, "+", 2))
talkEntry:addConsequence(consequence_deleteitem(353, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 11))
talkEntry:addCondition(condition_skill(Character.cookingAndBaking, "<", 80))
talkEntry:addCondition(condition_item(353, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest erfüllt!] Du hast das Gefühl als hättest du etwas dazu gelernt."))
talkEntry:addResponse("#me nimmt den Kuchen vorsichtig in sein Maul und reibt zufrieden brummend seinen Kopf an der Wand.")
talkEntry:addConsequence(consequence_skill(Character.cookingAndBaking, "+", 2))
talkEntry:addConsequence(consequence_deleteitem(353, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 11))
talkEntry:addCondition(condition_item(353, "all", "<", 1, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] You have to feed the bear with an apple pie."))
talkEntry:addResponse("#me looks sadly at an old apple in the mud.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(671, "=", 11))
talkEntry:addCondition(condition_item(353, "all", "<", 1, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Du sollst den Bären mit einem Apfelkuchen füttern."))
talkEntry:addResponse("#me schaut traurig einen alten Apfel im Schlamm an.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 0))
talkEntry:addCondition(condition_quest(671, "=", 12))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addResponse("#me plays with some residual food.")
talkEntry:addResponse("#me sleeps. He seems satisfied and well fed.")
talkEntry:addResponse("#me guards some residual food.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 0))
talkEntry:addCondition(condition_quest(671, "=", 12))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addResponse("#me ist mit den Resten deines Futters beschäftigt.")
talkEntry:addResponse("#me schläft satt und zufrieden.")
talkEntry:addResponse("#me bewacht einige Futterreste.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, "=", 0))
talkEntry:addCondition(condition_quest(671, ">", 12))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addResponse("#me begs for some other food.")
talkEntry:addResponse("#me sniffs at your hand. He doesn't care for the food you have with you.")
talkEntry:addResponse("#me tries to find out what you have in your pocket.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, "=", 0))
talkEntry:addCondition(condition_quest(671, ">", 12))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addResponse("#me bettelt nach anderem Futter.")
talkEntry:addResponse("#me schnüffelt an deiner Hand. Das Futter, das du mit hast, verschmäht er.")
talkEntry:addResponse("#me interessiert sich für den Inhalt deiner Tasche.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, "<", 9))
talkEntry:addCondition(condition_quest(671, ">", 12))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] You are too late! Grijas Kokotte can explain the reason why to you."))
talkEntry:addResponse("#me plays with some residual food. Maybe somebody else fed the bear?")
talkEntry:addResponse("#me sleeps. He seems satisfied and well fed.")
talkEntry:addResponse("#me is not interested in your food.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, "<", 9))
talkEntry:addCondition(condition_quest(671, ">", 12))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Du bist zu spät! Grijas Kokotte kann dir erklären warum."))
talkEntry:addResponse("#me ist mit Futterresten beschäftigt. Irgendjemand anderes hat ihm bereits was gegeben.")
talkEntry:addResponse("#me schläft satt und zufrieden.")
talkEntry:addResponse("#me interessiert sich nicht für deine Gaben.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 13))
talkEntry:addCondition(condition_item(355, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] Feeding!"))
talkEntry:addResponse("#me takes the fish, throws it into the air and gulps it down at once.")
talkEntry:addResponse("#me takes the fish to a quiet place and eats it.")
talkEntry:addResponse("#me eats the fish.")
talkEntry:addConsequence(consequence_deleteitem(355, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 13))
talkEntry:addCondition(condition_item(355, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Gefüttert!"))
talkEntry:addResponse("#me nimmt den Fisch, wirft ihn in die Luft und verschlingt ihn.")
talkEntry:addResponse("#me trägt den Fisch in eine stille Ecke und verspeist ihn.")
talkEntry:addResponse("#me isst den Fisch.")
talkEntry:addConsequence(consequence_deleteitem(355, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 14))
talkEntry:addCondition(condition_item(453, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] Feeding!"))
talkEntry:addResponse("#me rolls the cookie like a ball with his paws until he eats it.")
talkEntry:addResponse("#me bites the pastry. Some pieces fall down.")
talkEntry:addResponse("#me crumbles the cookie onto his nose and licks the crumbs with pleasure.")
talkEntry:addConsequence(consequence_deleteitem(453, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 14))
talkEntry:addCondition(condition_item(453, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Gefüttert!"))
talkEntry:addResponse("#me rollt den Keks wie einen Ball mit den Pfoten, bevor er ihn futtert.")
talkEntry:addResponse("#me zerbeißt das Gebäck. Etwas fällt in den Schmutz.")
talkEntry:addResponse("#me zerkrümelt den Keks auf seiner Schnauze und leckt genüsslich die Krümel auf.")
talkEntry:addConsequence(consequence_deleteitem(453, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 15))
talkEntry:addCondition(condition_item(2529, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] Feeding!"))
talkEntry:addResponse("#me presses the honeycomb between his claws and licks the honey from his paws and fur with pleasure. He looks to you pleased.")
talkEntry:addResponse("#me swats at a wasp and the sweet food disappears into the water. He looks sad and licks the residual honey drops from his claws.")
talkEntry:addResponse("#me licks the honey and grumbles quietly. Could it be the bear song?")
talkEntry:addConsequence(consequence_deleteitem(2529, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 15))
talkEntry:addCondition(condition_item(2529, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Gefüttert!"))
talkEntry:addResponse("#me zerquetscht die Wabe zwischen seinen Pranken und leckt diese genüsslich ab. Dabei schaut er dich immer wieder dankbar an.")
talkEntry:addResponse("#me haut nach einer Wespe, die sich gleichfalls für den Honig interessierte. Der Honig verschwindet im Wasser. Traurig leckt er die Reste von seinen Krallen.")
talkEntry:addResponse("#me leckt den Honig leise vor sich hin brummend. Es hört sich an wie das Bärenlied.")
talkEntry:addConsequence(consequence_deleteitem(2529, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 16))
talkEntry:addCondition(condition_item(306, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] Feeding!"))
talkEntry:addResponse("#me takes the ham into his mouth like a cigar. Slowly it disappears into the happy bear.")
talkEntry:addResponse("#me hits the meat with a paw, causing it to fall behind a large stone. He can't get it back.")
talkEntry:addResponse("#me takes two bites to finish the ham.")
talkEntry:addConsequence(consequence_deleteitem(306, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 16))
talkEntry:addCondition(condition_item(306, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Gefüttert!"))
talkEntry:addResponse("#me nimmt den Schinken wie eine Zigarre ins Maul. Ganz langsam verschwindet dieser in einem sichtlich zufriedenen Bären.")
talkEntry:addResponse("#me schlägt mit der Pranke nach dem Fleisch, das hinter einem großen Stein verschwindet. Erfolglos versucht er an den Leckerbissen zu kommen.")
talkEntry:addResponse("#me vertilgt das Leckerli mit zwei Bissen.")
talkEntry:addConsequence(consequence_deleteitem(306, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 17))
talkEntry:addCondition(condition_item(2493, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] Feeding!"))
talkEntry:addResponse("#me throws the carrot into the air. It lands straight in his mouth.")
talkEntry:addResponse("#me looks angry after a raven disappears with his food.")
talkEntry:addResponse("#me eats loudly.")
talkEntry:addConsequence(consequence_deleteitem(2493, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 17))
talkEntry:addCondition(condition_item(2493, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Gefüttert!"))
talkEntry:addResponse("#me schlägt nach der Möhre. Die fliegt durch die Luft und landet direkt im Maul des Bären.")
talkEntry:addResponse("#me schaut ärgerlich einem Raben hinterher, der mit dem Futter verschwindet.")
talkEntry:addResponse("#me futtert mit lauten Bissen.")
talkEntry:addConsequence(consequence_deleteitem(2493, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 18))
talkEntry:addCondition(condition_item(52, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] Feeding!"))
talkEntry:addResponse("#me drinks something before he wets his fur with most of the water. Shaking himself, drops fly in every direction.")
talkEntry:addResponse("#me bowls over the bucket and the water drains away.")
talkEntry:addResponse("#me drinks the water.")
talkEntry:addConsequence(consequence_deleteitem(52, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 18))
talkEntry:addCondition(condition_item(52, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Gefüttert!"))
talkEntry:addResponse("#me säuft etwas. Dann stülpt er sich den Eimer über den Kopf. Als er sich schüttelt, fliegen die Tropfen in alle Richtungen.")
talkEntry:addResponse("#me schmeißt den Eimer um, das Wasser versickert.")
talkEntry:addResponse("#me säuft den Eimer leer.")
talkEntry:addConsequence(consequence_deleteitem(52, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 19))
talkEntry:addCondition(condition_item(303, "all", ">", 0, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] Feeding!"))
talkEntry:addResponse("#me stands on his hind legs and takes the cake in his paws. He lumbers around in what seems like a bear dance. It could be the beat of the Galmairian Victory March.")
talkEntry:addResponse("#me lets the cake fall to the ground but he continues to eat it anyway, including the mud.")
talkEntry:addResponse("#me eats only the cherries, saving the rest of the cake for later.")
talkEntry:addConsequence(consequence_deleteitem(303, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 19))
talkEntry:addCondition(condition_item(303, "all", ">", 0, nil))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Gefüttert!"))
talkEntry:addResponse("#me stellt sich auf die Hinterbeine und schnappt sich den Kuchen mit beiden Pfoten. Dann tapst er herum. Du meinst den Takt des Galmairer Triumphmarsches zu erkennen.")
talkEntry:addResponse("#me lässt den Kuchen fallen und verspeist ihn einschließlich des Schlamms.")
talkEntry:addResponse("#me frisst die Kirschen vom Kuchen runter. Den Boden hebt er sich für später auf.")
talkEntry:addConsequence(consequence_deleteitem(303, 1, nil))
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 20))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bear Quest] Visited!"))
talkEntry:addResponse("#me rolls himself in the water. As he shakes himself, you get hit by some of the water droplets.")
talkEntry:addResponse("#me waves with one paw and rolls himself on the floor.")
talkEntry:addResponse("#me lays his head on a warm stone and grumbles satisfied.")
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(673, ">", 8))
talkEntry:addCondition(condition_quest(671, "=", 20))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Bärenquest] Besucht!"))
talkEntry:addResponse("#me legt sich auf den Rücken und wälzt sich zufrieden im Wasser. Als er sich schüttelt, bekommst du einige Tropfen ab.")
talkEntry:addResponse("#me hebt die Pfote als ob er winkt und trollt sich mit einem Purzelbaum.")
talkEntry:addResponse("#me legt den Kopf auf einen warmen Stein, blinzelt und brummt zufrieden.")
talkEntry:addConsequence(consequence_quest(671, "=", 12))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("#me's compound shows a sign, 'Please ask Grijas Kokotte about feeding the bear'.")
talkEntry:addResponse("#me's compound is signed, 'Bear of Galmair'.")
talkEntry:addResponse("#me looks around with a begging gaze. Then he looks to the direction of Grijas Kokotte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addCondition(condition_town(3))
talkEntry:addResponse("#me's compound shows a sign, 'Please ask Grijas Kokotte about feeding the bear'.")
talkEntry:addResponse("#me's compound is signed, 'Bear of Galmair'.")
talkEntry:addResponse("#me looks around with a begging gaze. Then he looks to the direction of Grijas Kokotte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("#me's compound shows a sign, 'Don't feed!'")
talkEntry:addResponse("#me's compound is signed, 'Bear of Galmair'.")
talkEntry:addResponse("#me turns away.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("#me's compound shows a sign, 'Don't feed!'")
talkEntry:addResponse("#me's compound is signed, 'Bear of Galmair'.")
talkEntry:addResponse("#me turns away.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("#me's Gehege hat ein Schild 'Fütterung nur in Abstimmung mit Grijas Kokotte'.")
talkEntry:addResponse("#me's Gehege hat ein Schild 'Bär von Galmair'")
talkEntry:addResponse("#me schaut dich bettelnd an. Dann schweift sein Blick zu Grijas Kokotte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_town(3))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addResponse("#me's Gehege hat ein Schild 'Fütterung nur in Abstimmung mit Grijas Kokotte'.")
talkEntry:addResponse("#me's Gehege hat ein Schild 'Bär von Galmair'")
talkEntry:addResponse("#me schaut dich bettelnd an. Dann schweift sein Blick zu Grijas Kokotte.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("#me's Gehege hat ein Schild 'Bitte nicht Füttern'.")
talkEntry:addResponse("#me's Gehege hat ein Schild 'Bär von Galmair'")
talkEntry:addResponse("#me dreht sich weg.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addResponse("#me's Gehege hat ein Schild 'Bitte nicht Füttern'.")
talkEntry:addResponse("#me's Gehege hat ein Schild 'Bär von Galmair'")
talkEntry:addResponse("#me dreht sich weg.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("food")
talkEntry:addTrigger("dinner")
talkEntry:addTrigger("breakfast")
talkEntry:addTrigger("lunch")
talkEntry:addResponse("#me sniffs at a muddy apple.")
talkEntry:addResponse("#me begs for food.")
talkEntry:addResponse("#me licks his chops.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Futter")
talkEntry:addTrigger("essen")
talkEntry:addTrigger("Frühstück")
talkEntry:addTrigger("brot")
talkEntry:addResponse("#me schnüffelt an einem matschigen Apfel.")
talkEntry:addResponse("#me bettelt um Essen.")
talkEntry:addResponse("#me leckt sich die Lippen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grijas")
talkEntry:addTrigger("Kokotte")
talkEntry:addCondition(condition_language("english"))
talkEntry:addResponse("#me looks to the east and licks his chops.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grijas")
talkEntry:addTrigger("Kokotte")
talkEntry:addResponse("#me blickt in den Osten und leckt sich die Lippen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("archmage")
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("#me doesn't interrupt.")
talkEntry:addResponse("#me grumbles.")
talkEntry:addResponse("#me shakes himself.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("#me macht ungerührt weiter.")
talkEntry:addResponse("#me brummt.")
talkEntry:addResponse("#me schüttelt sich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("#me looks up.")
talkEntry:addResponse("#me winks.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("#me schaut auf.")
talkEntry:addResponse("#me zwinkert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addTrigger("Queen")
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("#me doesn't interrupt.")
talkEntry:addResponse("#me grumbles.")
talkEntry:addResponse("#me licks his nose.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Königin")
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("#me macht ungerührt weiter.")
talkEntry:addResponse("#me brummt.")
talkEntry:addResponse("#me leckt sich die Nase.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addTrigger("god")
talkEntry:addResponse("#me sniffs in the air.")
talkEntry:addResponse("#me cocks his ears.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("#me schnüffelt in der Luft.")
talkEntry:addResponse("#me stellt die Ohren auf.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addTrigger("Bragon")
talkEntry:addTrigger("Brágon")
talkEntry:addResponse("#me looks around alerted.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addTrigger("Bragon")
talkEntry:addTrigger("Brágon")
talkEntry:addResponse("#me schaut beunruhigt umher.")
talkEntry:addResponse("#me faucht laut.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addTrigger("Irmorom")
talkEntry:addResponse("#me looks around.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("german"))
talkEntry:addCondition(condition_chance(10.0))
talkEntry:addTrigger("Irmorom")
talkEntry:addResponse("#me schaut sich um.")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("#me untersucht einen Stein.", "#me examines a stone.")
talkingNPC:addCycleText("#me kratzt sich am Hintern.", "#me scratches his buttocks.")
talkingNPC:addCycleText("#me trinkt aus einer Pfütze", "#me takes a sip out of a puddle.")
talkingNPC:addCycleText("#me brummt.", "#me grumbles.")
talkingNPC:addCycleText("#me faucht leise.", "#me quietly grumbles.")
talkingNPC:addCycleText("#me folgt mit zusammengekniffenen Augen einem Vogel.", "#me's eyes follow the path of a bird.")
talkingNPC:addCycleText("#me gähnt, mächtige Reißzähne blitzen hervor.", "#me yawns, some mighty fangs are shown for a second.")
talkingNPC:addCycleText("#me rollt einen Stein mit seiner Pfote.", "#me rolls a stone with his paws.")
talkingNPC:addCycleText("#me schüttelt sich.", "#me shakes himself.")
talkingNPC:addCycleText("#me blickt mit zusammengekniffenen Augen in den Himmel und legt sich hin.", "#me glances to the sky with narrowed eyes and lays down.")
mainNPC:addLanguage(0)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Ein sichtlich gut genährter Bär mit dichtem braunen Fell.", "A well fed bear with dense brown hair.")
mainNPC:setUseMessage("#me knurrt.", "#me growls.")
mainNPC:setConfusedMessage("#me schaut bettelnd.", "#me looks begging.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 0)
mainNPC:setEquipment(11, 0)
mainNPC:setEquipment(5, 0)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 0)
mainNPC:setEquipment(9, 0)
mainNPC:setEquipment(10, 0)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
