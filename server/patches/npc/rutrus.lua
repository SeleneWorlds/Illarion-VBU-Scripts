local consequence_item = require("npc.base.consequence.item")
local condition_item = require("npc.base.condition.item")
local consequence_quest = require("npc.base.consequence.quest")
local condition_skill = require("npc.base.condition.skill")
local condition_language = require("npc.base.condition.language")
local condition_town = require("npc.base.condition.town")
local talk = require("npc.base.talk")
local consequence_skill = require("npc.base.consequence.skill")
local consequence_money = require("npc.base.consequence.money")
local condition_quest = require("npc.base.condition.quest")
local consequence_inform = require("npc.base.consequence.inform")
local consequence_deleteitem = require("npc.base.consequence.deleteitem")
local basic = require("npc.base.basic")
local function initNpc()
local mainNPC = basic()
mainNPC:setAffiliation(1)
local talkingNPC = talk(mainNPC)
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Help")
talkEntry:addConsequence(consequence_inform("[Game Help] This NPC is the digger Rutrus. Keywords: Hello, quest, shovel, profession."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hilfe")
talkEntry:addConsequence(consequence_inform("[Spielhilfe] Dieser NPC ist der Gräber Rutrus. Schlüsselwörter: Hallo, Quest, Schaufel, Beruf."))
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hello")
talkEntry:addTrigger("Greet")
talkEntry:addTrigger("Hail")
talkEntry:addTrigger("Good day")
talkEntry:addTrigger("Good morning")
talkEntry:addTrigger("Good evening")
talkEntry:addTrigger("Good night")
talkEntry:addResponse("Hello, Hello.")
talkEntry:addResponse("You greet me and I greet back: Greetings!")
talkEntry:addResponse("Good day.")
talkEntry:addResponse("Welcome to this sandy area.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Grüß")
talkEntry:addTrigger("Gruß")
talkEntry:addTrigger("Grüss")
talkEntry:addTrigger("Gruss")
talkEntry:addTrigger("Guten Morgen")
talkEntry:addTrigger("Guten Tag")
talkEntry:addTrigger("Guten Abend")
talkEntry:addTrigger("Gute Nacht")
talkEntry:addTrigger("Mahlzeit")
talkEntry:addTrigger("Tach")
talkEntry:addTrigger("Moin")
talkEntry:addTrigger("Mohltied")
talkEntry:addResponse("Hallo, Hallo.")
talkEntry:addResponse("Du grüßt mich und ich grüße zurück: Grüße!")
talkEntry:addResponse("Guten Tag.")
talkEntry:addResponse("Willkommen in dieser sandigen Gegend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Hello, Hello.")
talkEntry:addResponse("You greet me and I greet back: Greetings!")
talkEntry:addResponse("Good day.")
talkEntry:addResponse("Welcome to this sandy area.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Hiho")
talkEntry:addTrigger("Hallo")
talkEntry:addTrigger("Hey")
talkEntry:addTrigger("Greeb")
talkEntry:addResponse("Hallo, Hallo.")
talkEntry:addResponse("Du grüßt mich und ich grüße zurück: Grüße!")
talkEntry:addResponse("Guten Tag.")
talkEntry:addResponse("Willkommen in dieser sandigen Gegend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Farewell")
talkEntry:addTrigger("Bye")
talkEntry:addTrigger("Fare well")
talkEntry:addTrigger("See you")
talkEntry:addResponse("Have a nice day!")
talkEntry:addResponse("Goodbye, goodbye, come back soon!")
talkEntry:addResponse("Farewell, you friendly being!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tschüß")
talkEntry:addTrigger("Tschüss")
talkEntry:addTrigger("Wiedersehen")
talkEntry:addTrigger("Gehab wohl")
talkEntry:addResponse("Einen schönen Tag auch.")
talkEntry:addResponse("Leb wohl, leb wohl, komm bald wieder!")
talkEntry:addResponse("Auf bald, du freundliches Wesen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Have a nice day!")
talkEntry:addResponse("Goodbye, goodbye, come back soon!")
talkEntry:addResponse("Farewell, you friendly being!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Ciao")
talkEntry:addTrigger("Adieu")
talkEntry:addTrigger("Au revoir")
talkEntry:addTrigger("Farebba")
talkEntry:addResponse("Einen schönen Tag auch.")
talkEntry:addResponse("Leb wohl, leb wohl, komm bald wieder!")
talkEntry:addResponse("Auf bald, du freundliches Wesen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("How are you")
talkEntry:addTrigger("How feel")
talkEntry:addTrigger("How do you do")
talkEntry:addResponse("I have a grain of sand in my eye - how would you feel?!")
talkEntry:addResponse("Fine, fine.")
talkEntry:addResponse("All I can say is, I hope you are feeling as good as I do!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Wie geht")
talkEntry:addTrigger("Wie fühlst")
talkEntry:addTrigger("Wie ist es ergangen")
talkEntry:addTrigger("Wie befind")
talkEntry:addResponse("Ich habe Sand ins Auge bekommen - wie würdest du dich fühlen!?")
talkEntry:addResponse("Gut, gut.")
talkEntry:addResponse("Ich kann nur sagen, ich hoffe es geht dir so gut wie mir!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("your name")
talkEntry:addTrigger("who are you")
talkEntry:addTrigger("who art thou")
talkEntry:addResponse("I am Rutrus and who are you?")
talkEntry:addResponse("Be greeted, I am the digger Rutrus.")
talkEntry:addResponse("I am Rutrus and this here is my shovel.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("ihr name")
talkEntry:addTrigger("dein name")
talkEntry:addTrigger("wer bist du")
talkEntry:addTrigger("wer seid ihr")
talkEntry:addTrigger("wie heißt")
talkEntry:addTrigger("wie heisst")
talkEntry:addResponse("Ich bin Rutrus und wer bist du?")
talkEntry:addResponse("Grüße dich, ich bin der Gräber Rutrus.")
talkEntry:addResponse("Ich bin Rutrus und das in meinen Händen ist meine Schaufel.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("sell")
talkEntry:addTrigger("buy")
talkEntry:addTrigger("wares")
talkEntry:addTrigger("price")
talkEntry:addTrigger("trade")
talkEntry:addTrigger("purchase")
talkEntry:addResponse("I am not a trader.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("kauf")
talkEntry:addTrigger("waren")
talkEntry:addTrigger("preis")
talkEntry:addTrigger("Handel")
talkEntry:addTrigger("veräußer")
talkEntry:addTrigger("veräusser")
talkEntry:addTrigger("erwerb")
talkEntry:addResponse("Ich bin kein Händler.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 0))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Oasis of Stars I"))
talkEntry:addConsequence(consequence_item(24, 1, 399, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 1))
talkEntry:addResponse("Oh! You want to help me? Take this shovel and get ten piles of coarse sand. Dig for it nat sand pits in the desert. Your reward will be five silver coins.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 0))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Sternenoase I"))
talkEntry:addConsequence(consequence_item(24, 1, 399, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 1))
talkEntry:addResponse("Oh! Du willst mir helfen? Nehme diese Schaufel hier und beschaffe mir zehn Haufen groben Sand. Grabe hierzu bei Sandgruben in der Wüste. Dein Lohn sollen fünf Silberstücke sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 0))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Oasis of Stars I"))
talkEntry:addConsequence(consequence_item(24, 1, 399, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 1))
talkEntry:addResponse("Oh! You want to help me? Take this shovel and get ten piles of coarse sand. Dig for it nat sand pits in the desert. Your reward will be five silver coins.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 0))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Sternenoase I"))
talkEntry:addConsequence(consequence_item(24, 1, 399, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 1))
talkEntry:addResponse("Du willst mir helfen? Nimm diese Schaufel hier und beschaffe mir zehn Haufen groben Sand. Grabe hierzu bei Sandgruben in der Wüste. Dein Lohn sollen fünf Silberstücke sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins and your digging skill increases."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(726, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 2))
talkEntry:addResponse("Oh, hoho! Great job, my friend. Here is the reward I promised you. Just tell me if you want an other task.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(726, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 2))
talkEntry:addResponse("Oh, hoho! Great job, my friend. Here is the reward I promised you. Just tell me if you want an other task.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke und deine Grabenfertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(726, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 2))
talkEntry:addResponse("Oh, hoho! Das hast du toll gemacht. Hier deine versprochene Belohung. Solltest du noch eine Aufgabe wollen, sag es.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(726, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 2))
talkEntry:addResponse("Oh, hoho! Das hast du toll gemacht. Hier deine versprochene Belohung. Solltest du noch eine Aufgabe wollen, sag es.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins and your digging skill increases."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(726, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 2))
talkEntry:addResponse("Oh, hoho! Great job, my friend. Here is the reward I promised you. Just tell me, if you want an other task.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded five silver coins."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(726, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 2))
talkEntry:addResponse("Oh, hoho! Great job, my friend. Here is the reward I promised you. Just tell me, if you want an other task.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", ">", 9, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke und deine Grabenfertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(726, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 2))
talkEntry:addResponse("Oh, hoho! Das hast du toll gemacht. Hier deine versprochene Belohung. Solltest du noch eine Aufgabe wollen, sag es.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", ">", 9, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst fünf Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 500))
talkEntry:addConsequence(consequence_deleteitem(726, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 2))
talkEntry:addResponse("Oh, hoho! Das hast du toll gemacht. Hier deine versprochene Belohung. Solltest du noch eine Aufgabe wollen, sag es.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I told you to bring me ten piles of coarse sand! Back to the desert!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", "<", 10, nil))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich sagte, du sollest zehn Haufen groben Sand bringen! Zurück in die Wüste, husch!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", "<", 10, nil))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("You want to help me? Just bring me ten piles of coarse sand and you'll get five silver coins.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 1))
talkEntry:addCondition(condition_item(726, "all", "<", 10, nil))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Oh! Du willst mir helfen? Bringe mir zehn Haufen groben Sand und dein Lohn sollen fünf Silberstücke sein.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 2))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Oasis of Stars II"))
talkEntry:addConsequence(consequence_quest(67, "=", 3))
talkEntry:addResponse("Another task? Alright, listen, I need twenty piles of quartz sand. First of all you need to get the coarse sand and then you need to filter it with a sieve. You will earn ten silver coins.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 2))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Sternenoase II"))
talkEntry:addConsequence(consequence_quest(67, "=", 3))
talkEntry:addResponse("Du willst eine weitere Aufgabe? Hör zu: Ich brauche zwanzig Haufen Quartzsand. Zuerst musst du groben Sand sammeln und diesen dann mit einem Sieb filtern. Du wirst zehn Silberstücke als Lohn erhalten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 2))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Oasis of Stars II"))
talkEntry:addConsequence(consequence_quest(67, "=", 3))
talkEntry:addResponse("Another task? Alright, listen, I need twenty piles of quartz sand. First of all you need to get the coarse sand and then you need to filter it with a sieve. You will earn ten silver coins.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 2))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Sternenoase II"))
talkEntry:addConsequence(consequence_quest(67, "=", 3))
talkEntry:addResponse("Du willst eine weitere Aufgabe? Hör zu: Ich brauche zwanzig Haufen Quartzsand. Zuerst musst du groben Sand sammeln und diesen dann mit einem Sieb filtern. Du wirst zehn Silberstücke als Lohn erhalten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins and your digging skill increases."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 4))
talkEntry:addResponse("This is what I call fine sand, and here is your money.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 4))
talkEntry:addResponse("This is what I call fine sand, and here is your money.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke und deine Grabenfertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 4))
talkEntry:addResponse("Das ist doch mal feiner Sand. Und hier hast du dein Geld.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 4))
talkEntry:addResponse("Das ist doch mal feiner Sand. Und hier hast du dein Geld.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins and your digging skill increases."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 4))
talkEntry:addResponse("This is what I call fine sand, and here is your money.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 4))
talkEntry:addResponse("This is what I call fine sand, and here is your money.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke und deine Grabenfertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 4))
talkEntry:addResponse("Das ist doch mal feiner Sand. Und hier hast du dein Geld.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", ">", 19, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(316, 20, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 4))
talkEntry:addResponse("Das ist doch mal feiner Sand. Und hier hast du dein Geld.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", "<", 20, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I want my twenty piles of quartz sand!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", "<", 20, nil))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich will meine zwanzig Haufen Quartzsand!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", "<", 20, nil))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I want my twenty piles of quartz sand!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 3))
talkEntry:addCondition(condition_item(316, "all", "<", 20, nil))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich will meine zwanzig Haufen Quartzsand!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 4))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Oasis of Stars III"))
talkEntry:addConsequence(consequence_quest(67, "=", 5))
talkEntry:addResponse("I need your help again, but this time it is a bit more complicated. I want you to collect five raw topaz and your reward will be ten silvers!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 4))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Sternenoase III"))
talkEntry:addConsequence(consequence_quest(67, "=", 5))
talkEntry:addResponse("Ich brauche wieder deine Hilfe. Dieses ist es etwas schwerer. Du sollst fünf ungeschliffene Topaze sammeln und dein Lohn sollen hundert Kupferlinge sein!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 4))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Oasis of Stars III"))
talkEntry:addConsequence(consequence_quest(67, "=", 5))
talkEntry:addResponse("I need your help again, but this time it is a bit more complicated. I want you to collect five raw topaz and your reward will be ten silvers!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 4))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Sternenoase III"))
talkEntry:addConsequence(consequence_quest(67, "=", 5))
talkEntry:addResponse("Ich brauche wieder deine Hilfe. Dieses ist es etwas schwerer. Du sollst fünf ungeschliffene Topaze sammeln und dein Lohn sollen hundert Kupferlinge sein!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins and your digging skill increases."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(257, 5, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 6))
talkEntry:addResponse("You really found raw topaz? Great! Here you go.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(257, 5, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 6))
talkEntry:addResponse("You really found raw topaz? Great! Here you go.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke und deine Grabenfertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(257, 5, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 6))
talkEntry:addResponse("Du hast tatsächlich ungeschliffene Topaze gefunden? Großartig! Hier, dein Lohn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", ">", 4, nil))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(257, 5, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 6))
talkEntry:addResponse("Du hast tatsächlich ungeschliffene Topaze gefunden? Großartig! Hier, dein Lohn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins and your digging skill increases."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(257, 5, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 6))
talkEntry:addResponse("You really found raw topaz? Great! Here you go.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", ">", 4, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded ten silver coins."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(257, 5, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 6))
talkEntry:addResponse("You really found raw topaz? Great! Here you go.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", ">", 4, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke und deine Grabenfertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(257, 5, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 6))
talkEntry:addResponse("Du hast tatsächlich ungeschliffene Topaze gefunden? Großartig! Hier, dein Lohn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", ">", 4, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst zehn Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 1000))
talkEntry:addConsequence(consequence_deleteitem(257, 5, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 6))
talkEntry:addResponse("Du hast tatsächlich ungeschliffene Topaze gefunden? Großartig! Hier, dein Lohn.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", "<", 5, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("I need you to collect five raw topaz. Could you... work on?")
talkEntry:addResponse("You don't have enough topaz yet. It seems that you need to work some more.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", "<", 5, nil))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ich brauche dich, um fünf ungeschliffene Topaze zu sammeln. Arbeite weiter!")
talkEntry:addResponse("Das sind aber nicht genug Topaze. Da musst du wohl noch ein bisschen arbeiten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", "<", 5, nil))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("I need you to collect five raw topaz. Could you... work on?")
talkEntry:addResponse("You don't have enough topaz yet. It seems that you need to work some more.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 5))
talkEntry:addCondition(condition_item(257, "all", "<", 5, nil))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Ich brauche dich, um fünf ungeschliffene Topaze zu sammeln. Arbeite weiter!")
talkEntry:addResponse("Das sind aber nicht genug Topaze. Da musst du wohl noch ein bisschen arbeiten.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 6))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[New quest] Oasis of Stars IV"))
talkEntry:addConsequence(consequence_quest(67, "=", 7))
talkEntry:addResponse("You are a hard working one.  I'd like to host a barbeque for my shovel now. Can you bring me ten lumps of coal from the Dark Hole mine for 20 silver coins?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 6))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Sternenoase IV"))
talkEntry:addConsequence(consequence_quest(67, "=", 7))
talkEntry:addResponse("Dich nenne ich fleißig! Ich würde gerne für meine Schaufel eine kleine Grillfeier schmeißen. Kannst du mir zehn Kohleklumpen für 20 Silberstücke aus der Dunkellochmine bringen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 6))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addConsequence(consequence_inform("[New quest] Oasis of Stars IV"))
talkEntry:addConsequence(consequence_quest(67, "=", 7))
talkEntry:addResponse("You are a hard working one. I'd like to host a barbeque for my shovel now. Can you bring me ten lumps of coal from the Dark Hole mine for 20 silver coins?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 6))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addConsequence(consequence_inform("[Neues Quest] Sternenoase IV"))
talkEntry:addConsequence(consequence_quest(67, "=", 7))
talkEntry:addResponse("Dich nenne ich fleißig! Ich würde gerne für meine Schaufel eine kleine Grillfeier schmeißen. Kannst du mir zehn Kohleklumpen für 20 Silberstücke aus der Dunkellochmine bringen?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins and your digging skill increases."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(21, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 8))
talkEntry:addResponse("Ha! You did it perfectly, just like all the other tasks. You were a big help and here are your coins. I'll place a sausage over the fire later for you, my friend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(21, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 8))
talkEntry:addResponse("Ha! You did it perfectly, just like all the other tasks. You were a big help and here are your coins. I'll place a sausage over the fire later for you, my friend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke und deine Grabenfertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(21, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 8))
talkEntry:addResponse("Ha! Das hast du großartig gemacht - wie auch alle anderen Aufgaben. Du warst eine große Hilfe und hier ist dein Lohn. Ich werde nachher eine Extrawurst für dich auf den Grill packen, mein Freund.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", ">", 9, nil))
talkEntry:addCondition(condition_town(1))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(21, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 8))
talkEntry:addResponse("Ha! Das hast du großartig gemacht - wie auch alle anderen Aufgaben. Du warst eine große Hilfe und hier ist dein Lohn. Ich werde nachher eine Extrawurst für dich auf den Grill packen, mein Freund.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins and your digging skill increases."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(21, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 8))
talkEntry:addResponse("Ha! You did it great, just like all the other tasks. You were a big help and here are your coins. I'll place a sausage over the fire later for you, my friend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", ">", 9, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest solved] You are awarded 20 silver coins."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(21, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 8))
talkEntry:addResponse("Ha! You did it great, just like all the other tasks. You were a big help and here are your coins. I'll place a sausage over the fire later for you, my friend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_skill(Character.digging, "<", 90))
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", ">", 9, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke und deine Grabenfertigkeit steigt."))
talkEntry:addConsequence(consequence_skill(Character.digging, "+", 1))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(21, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 8))
talkEntry:addResponse("Ha! Das hast du großartig gemacht - wie auch alle anderen Aufgaben. Du warst eine große Hilfe und hier ist dein Lohn. Ich werde nachher eine Extrawurst für dich auf den Grill packen, mein Freund.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", ">", 9, nil))
talkEntry:addTrigger(".+")
talkEntry:addConsequence(consequence_inform("[Quest gelöst] Du erhältst 20 Silberstücke."))
talkEntry:addConsequence(consequence_money("+", 2000))
talkEntry:addConsequence(consequence_deleteitem(21, 10, nil))
talkEntry:addConsequence(consequence_quest(67, "=", 8))
talkEntry:addResponse("Ha! Das hast du großartig gemacht - wie auch alle anderen Aufgaben. Du warst eine große Hilfe und hier ist dein Lohn. Ich werde nachher eine Extrawurst für dich auf den Grill packen, mein Freund.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", "<", 10, nil))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Ten lumps of coal... shouldn't be too difficult, eh?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", "<", 10, nil))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Zehn Klumpen Kohle - Das kann doch nicht so schwer sein!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", "<", 10, nil))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("Ten lumps of coal... shouldn't be too difficult, eh?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 7))
talkEntry:addCondition(condition_item(21, "all", "<", 10, nil))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Zehn Klumpen Kohle - Das kann doch nicht so schwer sein!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 8))
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("You've helped me enough, really. I have no other jobs for you, but maybe you can find someone in the Dark Hole mine who will give you something to do. Also remember, the shovel is your friend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 8))
talkEntry:addTrigger("quest")
talkEntry:addTrigger("mission")
talkEntry:addResponse("Du hast mir genug geholfen, wirklich. Ich habe keine Aufgaben mehr für dich. Aber vielleicht findest du in der Dunkellochmine jemanden, der etwas für dich zu tun hat. Und denk daran: Die Schaufel ist dein Freund.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 8))
talkEntry:addTrigger("task")
talkEntry:addTrigger("adventure")
talkEntry:addTrigger("order")
talkEntry:addResponse("You've helped me enough, really. I have no other jobs for you, but maybe you can find someone in the Dark Hole mine who will give you something to do. Also remember, the shovel is your friend.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_quest(67, "=", 8))
talkEntry:addTrigger("Auftrag")
talkEntry:addTrigger("Aufgabe")
talkEntry:addTrigger("Abenteuer")
talkEntry:addTrigger("Befehl")
talkEntry:addResponse("Du hast mir genug geholfen, wirklich. Ich habe keine Aufgaben mehr für dich. Aber vielleicht findest du in der Dunkellochmine jemanden, der etwas für dich zu tun hat. Und denk daran: Die Schaufel ist dein Freund.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Profession")
talkEntry:addResponse("I'm a digger. I dig. I dig in the sand and anywhere else one can dig.")
talkEntry:addResponse("My job? I collect sand for glassblowers.")
talkEntry:addResponse("I steal the sand from the desert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Beruf")
talkEntry:addResponse("Ich bin Gräber. Ich grabe. Ich grabe im Sand und wo man sonst noch graben kann.")
talkEntry:addResponse("Mein Beruf? Ich bringe Glasbläsern Sand.")
talkEntry:addResponse("Ich stehle der Wüste den Sand.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("job")
talkEntry:addResponse("I'm a digger. I dig. I dig in the sand and anywhere else one can dig.")
talkEntry:addResponse("My job? I collect sand for glassblowers.")
talkEntry:addResponse("I steal the sand from the desert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("job")
talkEntry:addResponse("Ich bin Gräber. Ich grabe. Ich grabe im Sand und wo man sonst noch graben kann.")
talkEntry:addResponse("Mein Beruf? Ich bringe Glasbläsern Sand.")
talkEntry:addResponse("Ich stehle der Wüste den Sand.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Gobaith, what's that?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gobaith")
talkEntry:addTrigger("Gobiath")
talkEntry:addResponse("Was soll das für ein Ort sein?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("my name")
talkEntry:addResponse("And my name is Rutrus. This is my shovel. I call her Susie.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("mein Name")
talkEntry:addResponse("Und mein Name ist Rutrus. Dies hier ist meine Schaufel. Ich nenne sie Susie.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("desert")
talkEntry:addResponse("The Kantabi desert is a nice place, aye, but you need to watch out for scorpions.")
talkEntry:addResponse("Welcome to the Kantabi desert! If your throat gets dry, you can visit the tavern.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("wüste")
talkEntry:addResponse("Obgleich unsere Kantabiwüste ein schöner Ort ist, sollte man sich vor den Skorpionen hüten.")
talkEntry:addResponse("Willkommen in der Kantabiwüste! Sollte deine Kehle mal zu trocken werden, schau doch in der Taverne vorbei.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Kantabi")
talkEntry:addTrigger("sand")
talkEntry:addResponse("The Kantabi desert is a nice place, aye, but you need to watch out for scorpions.")
talkEntry:addResponse("Welcome to the Kantabi desert! If your throat gets dry, you can visit the tavern.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Kantabi")
talkEntry:addTrigger("sand")
talkEntry:addResponse("Obgleich unsere Kantabiwüste ein schöner Ort ist, sollte man sich vor den Skorpionen hüten.")
talkEntry:addResponse("Willkommen in der Kantabiwüste! Sollte deine Kehle mal zu trocken werden, schau doch in der Taverne vorbei.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("oasis")
talkEntry:addResponse("This is the Oasis of Stars, a paradise for diggers.")
talkEntry:addResponse("This oasis is a beacon of hope in the Kantabi desert, just like a bright star in the darkest night.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("oase")
talkEntry:addResponse("Dies ist die Sternenoase - ein Paradies für Sandgräber!")
talkEntry:addResponse("Diese Oase ist ein Leuchtfeuer der Hoffnung in der Kantabiwüste - genau wie ein heller Stern in einer dunklen Nacht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Raban")
talkEntry:addResponse("Raban... I remember that name. It has been a while.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Raban")
talkEntry:addResponse("Raban... Ich erinnere mich an diesen Namen. Lange ist's her.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tool")
talkEntry:addTrigger("shovel")
talkEntry:addResponse("The shovel is my tool. It may seem like just a normal object, but it is powerful in the right hands. I will give you one if you do a little task for me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Werkzeug")
talkEntry:addTrigger("Schaufel")
talkEntry:addResponse("Mein Werkzeug ist die Schaufel. Sie scheint gewöhnlich, aber in richtigen Händen ist sie mächtig. Ich gebe dir eine, wenn du Aufgaben für mich erledigst.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("archmage")
talkEntry:addResponse("Never trust an elf, I say.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Erzmagier")
talkEntry:addResponse("Traue keinem Elfen, sage ich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Never trust an elf, I say.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Elvaine")
talkEntry:addTrigger("Morgan")
talkEntry:addResponse("Traue keinem Elfen, sage ich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("A wicked place! Never trust an elf, I say.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Runewick")
talkEntry:addResponse("Ein verwunschener Ort. Traue keinem Elfen, sage ich.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Who's that?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Valerio")
talkEntry:addTrigger("Guilianni")
talkEntry:addTrigger("Don")
talkEntry:addResponse("Wer soll das sein?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Galmair, what's that?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Galmair")
talkEntry:addResponse("Was soll das für ein Ort sein?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Queen")
talkEntry:addResponse("Edwards... I remember an Edward, he is pretty awesome. Concerning the Queen of Cadomyr, I doubt she even knows anyone is living in the desert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Königin")
talkEntry:addResponse("Edwards... Ich kann mich an einen Edward erinnern, er ist einfach nur großartig. Aber nun zur Königin Cadomyrs, ich glaube kaum, dass sie überhaupt weiß, dass jemand hier in der Wüste lebt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Edwards... I remember an Edward, he is pretty awesome. Concerning the Queen of Cadomyr, I doubt she even knows anyone is living in the desert.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("rosaline")
talkEntry:addTrigger("edwards")
talkEntry:addResponse("Edwards... Ich kann mich an einen Edward erinnern, er ist einfach nur großartig. Aber nun zur Königin Cadomyrs, ich glaube kaum, dass sie überhaupt weiß, dass jemand hier in der Wüste lebt.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("They leave me alone, usually.")
talkEntry:addResponse("From time to time, I go to Cadomyr to get my shovel fixed.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Cadomyr")
talkEntry:addResponse("Die lassen mich meist alleine.")
talkEntry:addResponse("Manchmal gehe ich nach Cadomyr um meine Schaufel reparieren zu lassen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("albar")
talkEntry:addResponse("Rabla-bab!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("albar")
talkEntry:addResponse("Rabla-bab!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("gynk")
talkEntry:addTrigger("gync")
talkEntry:addResponse("I talk to you about sand, but not about THAT.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("gync")
talkEntry:addTrigger("gynk")
talkEntry:addResponse("Ich rede gerne über Sand, aber nicht über DAS!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("salkama")
talkEntry:addResponse("Salkamar, Salkamaer, Salkmar... I keep forgetting how one pronounces that realm.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("salkama")
talkEntry:addResponse("Salkamar, Salkamaer, Salkmar... Ich kann mir einfach nicht merken, wie man das Reich ausspricht.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("god")
talkEntry:addResponse("Gods!? Look around! Do you see any gods here? Just sand? What a surprise!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Gott")
talkEntry:addTrigger("Götter")
talkEntry:addResponse("Götter!? Siehst du hier etwa irgendwo Götter? Nur Sand? Was für eine Überraschung!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Bragon")
talkEntry:addTrigger("Brágon")
talkEntry:addResponse("It is pretty hot and arid here, isn't it?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Bragon")
talkEntry:addTrigger("Brágon")
talkEntry:addResponse("Ist es nicht recht heiß und trocken hier?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Findari")
talkEntry:addResponse("It is windy today... is that a divine intervention?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Findari")
talkEntry:addResponse("Es ist ziemlich windig heute... ob das göttliches Wirken ist?")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Tanora")
talkEntry:addTrigger("Zelphia")
talkEntry:addResponse("The Kantabi desert is Tanoraforsaken!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Tanora")
talkEntry:addTrigger("Zelphia")
talkEntry:addResponse("Die Kantabiwüste ist tanoraverlassen!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("what sell")
talkEntry:addTrigger("what buy")
talkEntry:addTrigger("list wares")
talkEntry:addTrigger("price of")
talkEntry:addResponse("I'm not a trader, but a digger!")
talkEntry:addResponse("I do not sell or buy anything, but I may have a quest for you.")
talkEntry:addResponse("No trading! However, You could get some coins, if you do a task for me.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("was verkauf")
talkEntry:addTrigger("was kauf")
talkEntry:addTrigger("warenliste")
talkEntry:addTrigger("preis von")
talkEntry:addResponse("Ich bin kein Händler sondern ein Gräber!")
talkEntry:addResponse("Ich kaufe und verkaufe nichts, aber ich habe vielleicht eine Aufgabe für dich.")
talkEntry:addResponse("Kein Handel! Wie auch immer, du kannst ein paar Münzen bekommen, wenn du einen Auftrag erledigst.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("tell something")
talkEntry:addResponse("We have to be very thankful that the shovel allows us to work with it.")
talkEntry:addResponse("Without a shovel, no clay... without clay, no bricks... without bricks, no house! The shovel is the beginning of everything.")
talkEntry:addResponse("Dig for sand next to rocks. You can find the best sand to make glass there.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("erzähl was")
talkEntry:addTrigger("erzähl etwas")
talkEntry:addResponse("Wir müssen dankbar sein, dass die Schaufel uns das Arbeiten mit ihr erlaubt.")
talkEntry:addResponse("Ohne Schaufel kein Lehm, ohne Lehm keine Ziegel, ohne Ziegel kein Haus! Die Schaufel ist der Anfang von Allem.")
talkEntry:addResponse("Grabe neben Steinen nach Sand. Da findet du den besten Sand zum Glasmachen.")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addCondition(condition_language("english"))
talkEntry:addTrigger("Rutrus")
talkEntry:addResponse("Rutrus, that's me, most probably. State your business!")
talkingNPC:addTalkingEntry(talkEntry)
end
do
local talkEntry = talk.talkNPCEntry()
talkEntry:addTrigger("Rutrus")
talkEntry:addResponse("Rutrus, das bin wahrscheinlich ich. Was gibt es denn?")
talkingNPC:addTalkingEntry(talkEntry)
end
talkingNPC:addCycleText("#me streicht sich durch das Haar und lässt so einige Sandkörner herumfliegen.", "#me runs a hand through his hair and a few grains of sand fly from it.")
talkingNPC:addCycleText("#me säubert seine Schaufel.", "#me cleans his shovel.")
talkingNPC:addCycleText("Na warte, Wüste. Ich grabe so lange, bis du erledigt bist!", "Just wait, desert... I'll keep on digging 'til you're gone!")
talkingNPC:addCycleText("#me lässt seinen Blick durch die Gegend wandern, während er sich auf seiner Schaufel abstützt.", "#me leans on his shovel and looks around.")
talkingNPC:addCycleText("Ein Mann ohne Schaufel ist nur ein halber Mann.", "A man without a shovel is just half a man.")
talkingNPC:addCycleText("#me murmelt etwas zu seiner Schaufel.", "#me murmurs to his shovel.")
talkingNPC:addCycleText("Ich sollte beginnen, ein Loch im Sand auszuheben.", "I should start to dig a hole.")
talkingNPC:addCycleText("Es gibt hier eindeutig zu viel Sand.", "Too much sand here, am I not right?")
talkingNPC:addCycleText("Verdammt soll derjenige sein, der all den Sand genau hier hin bringen mußte!", "Cursed be the one who brought all that sand to exactly this location.")
talkingNPC:addCycleText("Aus der Nordbrücke wird noch eine Sandbrücke.", "The North bridge will be renamed Sandy bridge.")
talkingNPC:addCycleText("Willkommen in... im Sand!", "Welcome to the... sand!")
mainNPC:addLanguage(0)
mainNPC:addLanguage(1)
mainNPC:setDefaultLanguage(0)
mainNPC:setLookat("Dieser NPC ist der Gräber Rutrus.", "This NPC is the digger Rutrus.")
mainNPC:setUseMessage("Fass mich nicht an!", "Do not touch me!")
mainNPC:setConfusedMessage("#me schaut dich verwirrt an.", "#me looks at you confused.")
mainNPC:setEquipment(1, 0)
mainNPC:setEquipment(3, 182)
mainNPC:setEquipment(11, 2419)
mainNPC:setEquipment(5, 24)
mainNPC:setEquipment(6, 0)
mainNPC:setEquipment(4, 526)
mainNPC:setEquipment(9, 367)
mainNPC:setEquipment(10, 53)
mainNPC:setAutoIntroduceMode(true)

mainNPC:initDone()
return mainNPC
end
local mNPC = initNpc()
initNpc = nil
local M = {}
function M.receiveText(npcChar, texttype, message, speaker) mNPC:receiveText(npcChar, texttype, speaker, message) end
function M.nextCycle(npcChar) mNPC:nextCycle(npcChar) end
function M.lookAtNpc(npcChar, char, mode) mNPC:lookAt(npcChar, char, mode) end
function M.useNPC(npcChar, char, counter, param) mNPC:use(npcChar, char) end
return M
